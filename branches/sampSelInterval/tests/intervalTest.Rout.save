
R version 3.3.2 (2016-10-31) -- "Sincere Pumpkin Patch"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( "sampleSelection" )
Loading required package: maxLik
Loading required package: miscTools

Please cite the 'maxLik' package as:
Henningsen, Arne and Toomet, Ott (2011). maxLik: A package for maximum likelihood estimation in R. Computational Statistics 26(3), 443-458. DOI 10.1007/s00180-010-0217-1.

If you have questions, suggestions, or comments regarding the 'maxLik' package, please use a forum or 'tracker' at maxLik's R-Forge site:
https://r-forge.r-project.org/projects/maxlik/
> library( "mvtnorm" )
> options( digits = 2 )
> 
> nObs <- 300
> betaS <- c( 1, 1, -1 )
> betaO <- c( 10, 4 )
> rho <- 0.4
> sigma <- 5
> bound <- c(-Inf,5,15,Inf)
> 
> 
> set.seed(123)
> dat <- data.frame( x1 = rnorm( nObs ), x2 = rnorm( nObs ) )
> vcovMat <- matrix( c( 1, rho*sigma, rho*sigma, sigma^2 ), nrow = 2 )
> eps <- rmvnorm( nObs, sigma = vcovMat )
> dat$epsS <- eps[,1]
> dat$epsO <- eps[,2]
> dat$yS <- with( dat, betaS[1] + betaS[2] * x1 + betaS[3] * x2 + epsS ) > 0
> # table(dat$yS)
> dat$yOu <- with( dat, betaO[1] + betaO[2] * x1 + epsO )
> dat$yOu[ !dat$yS ] <- NA
> hist( dat$yOu )
> dat$yO <- cut( dat$yOu, bound )
> 
> YS <- dat$yS
> XS <- cbind( 1, dat$x1, dat$x2 )
> YO <- as.numeric( dat$yO )
> XO <- cbind( 1, dat$x1 )
> 
> start <- c( betaS, betaO, log( sqrt( sigma ) ), atan( rho ) )
>    # the correct starting value of logSigma would be: log( sigma )
> names( start ) <- c( "betaS0", "betaS1", "betaS2", "betaO0", "betaO2",
+    "logSigma", "atanRho" )
> 
> res <- selection( yS ~ x1 + x2, yO ~ x1, data = dat, boundaries = bound, 
+    start = start, printLevel = 1 )
Tobit 2 model
0 invalid observations
         YS YSnumeric lower upper
1  (-Inf,5]         1  -Inf     5
2    (5,15]         2     5    15
3 (15, Inf]         3    15   Inf
YO observed: 209 times; not observed: 91 times:
Number of intervals:  3 
      YO
YS       1   2   3 <NA>
  0      0   0   0   91
  1     26 130  53    0
  <NA>   0   0   0    0
Boundaries:
[1] -Inf    5   15  Inf
Initial values:
(Intercept)          x1          x2 (Intercept)          x1    logSigma 
       1.00        1.00       -1.00       10.00        4.00        0.80 
    atanRho 
       0.38 
--------------
successive function values within tolerance limit 
13  iterations
estimate: 0.98 0.97 -1.3 10 2.7 1.6 0.28 
Function value: -275 
> 
> print( res )

Call:
 selection(selection = yS ~ x1 + x2, outcome = yO ~ x1, data = dat,      start = start, boundaries = bound, printLevel = 1) 

Coefficients:
S:(Intercept)           S:x1           S:x2  O:(Intercept)           O:x1  
        0.982          0.967         -1.286         10.241          2.659  
     logSigma        atanRho  
        1.631          0.282  

> print( round( coef( res ), 2 ) )
S:(Intercept)           S:x1           S:x2  O:(Intercept)           O:x1  
         0.98           0.97          -1.29          10.24           2.66  
     logSigma        atanRho  
         1.63           0.28  
> print( round( coef( summary( res ) ), 2 ) )
            Estimate Std. error t value Pr(> t)
(Intercept)     0.98       0.11    9.05    0.00
x1              0.97       0.15    6.48    0.00
x2             -1.29       0.12  -10.63    0.00
(Intercept)    10.24       0.67   15.33    0.00
x1              2.66       0.59    4.49    0.00
logSigma        1.63       0.07   21.82    0.00
atanRho         0.28       0.31    0.92    0.36
> print( res$start )
(Intercept)          x1          x2 (Intercept)          x1    logSigma 
       1.00        1.00       -1.00       10.00        4.00        0.80 
    atanRho 
       0.38 
> print( summary( res ) )
--------------------------------------------
Tobit 2 model with interval outcome (sample selection model)
Maximum Likelihood estimation
BHHH maximisation, 13 iterations
Return code 2: successive function values within tolerance limit
Log-Likelihood: -275 
300 observations (91 censored and 209 observed)
7 free parameters (df = 293)
Probit selection equation:
            Estimate Std. error t value Pr(> t)    
(Intercept)    0.982      0.109    9.05 < 2e-16 ***
x1             0.967      0.149    6.48 8.9e-11 ***
x2            -1.286      0.121  -10.63 < 2e-16 ***
Outcome equation:
            Estimate Std. error t value Pr(> t)    
(Intercept)   10.241      0.668   15.33 < 2e-16 ***
x1             2.659      0.592    4.49 7.1e-06 ***
   Error terms:
         Estimate Std. error t value Pr(> t)    
logSigma   1.6307     0.0747   21.82  <2e-16 ***
atanRho    0.2820     0.3058    0.92    0.36    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
--------------------------------------------
> 
> # add derived coefficients
> coefAll <- c( coef( res ),
+    sigma = unname( exp( coef( res )[ "logSigma" ] ) ),
+    sigmaSq = unname( exp( 2 * coef( res )[ "logSigma" ] ) ),
+    rho = unname( tan( coef( res )[ "atanRho" ] ) ) )
> print( round( coefAll, 2 ) )
(Intercept)          x1          x2 (Intercept)          x1    logSigma 
       0.98        0.97       -1.29       10.24        2.66        1.63 
    atanRho       sigma     sigmaSq         rho 
       0.28        5.11       26.09        0.29 
> 
> # jacobian
> jac <- cbind( diag( length( coef( res ) ) ),
+    matrix( 0, length( coef( res ) ), 3 ) )
> rownames( jac ) <- names( coef( res ) )
> colnames( jac ) <- c( names( coef( res ) ), "sigma", "sigmaSq", "rho" )
> jac[ "logSigma", "sigma" ] <- exp( coef( res )[ "logSigma" ] )
> jac[ "logSigma", "sigmaSq" ] <- 2 * exp( 2 * coef( res )[ "logSigma" ] )
> jac[ "atanRho", "rho" ] <- 1 + ( tan( coef( res )[ "atanRho" ] ) )^2
> vcovAll <- t( jac ) %*% vcov( res ) %*% jac
> print( round( vcovAll, 2 ) )
            (Intercept)    x1    x2 (Intercept)    x1 logSigma atanRho sigma
(Intercept)        0.01  0.01  0.00        0.00  0.00     0.00    0.00  0.00
x1                 0.01  0.02 -0.01        0.00  0.01     0.00    0.00  0.00
x2                 0.00 -0.01  0.01        0.00  0.00     0.00    0.00  0.00
(Intercept)        0.00  0.00  0.00        0.45 -0.23    -0.01   -0.16 -0.05
x1                 0.00  0.01  0.00       -0.23  0.35     0.01    0.09  0.04
logSigma           0.00  0.00  0.00       -0.01  0.01     0.01    0.00  0.03
atanRho            0.00  0.00  0.00       -0.16  0.09     0.00    0.09  0.03
sigma              0.00  0.00  0.00       -0.05  0.04     0.03    0.03  0.15
sigmaSq            0.00 -0.03  0.03       -0.46  0.40     0.29    0.26  1.49
rho                0.00  0.00  0.00       -0.17  0.10     0.01    0.10  0.03
            sigmaSq   rho
(Intercept)    0.00  0.00
x1            -0.03  0.00
x2             0.03  0.00
(Intercept)   -0.46 -0.17
x1             0.40  0.10
logSigma       0.29  0.01
atanRho        0.26  0.10
sigma          1.49  0.03
sigmaSq       15.20  0.28
rho            0.28  0.11
> print( round( cov2cor( vcovAll ), 2 ) )
            (Intercept)    x1    x2 (Intercept)    x1 logSigma atanRho sigma
(Intercept)        1.00  0.35 -0.28        0.05 -0.02    -0.01    0.01 -0.01
x1                 0.35  1.00 -0.36        0.01  0.08    -0.05   -0.05 -0.05
x2                -0.28 -0.36  1.00        0.00 -0.02     0.06   -0.01  0.06
(Intercept)        0.05  0.01  0.00        1.00 -0.57    -0.18   -0.76 -0.18
x1                -0.02  0.08 -0.02       -0.57  1.00     0.17    0.52  0.17
logSigma          -0.01 -0.05  0.06       -0.18  0.17     1.00    0.22  1.00
atanRho            0.01 -0.05 -0.01       -0.76  0.52     0.22    1.00  0.22
sigma             -0.01 -0.05  0.06       -0.18  0.17     1.00    0.22  1.00
sigmaSq           -0.01 -0.05  0.06       -0.18  0.17     1.00    0.22  1.00
rho                0.01 -0.05 -0.01       -0.76  0.52     0.22    1.00  0.22
            sigmaSq   rho
(Intercept)   -0.01  0.01
x1            -0.05 -0.05
x2             0.06 -0.01
(Intercept)   -0.18 -0.76
x1             0.17  0.52
logSigma       1.00  0.22
atanRho        0.22  1.00
sigma          1.00  0.22
sigmaSq        1.00  0.22
rho            0.22  1.00
> print( coefTable( coefAll, sqrt( diag( vcovAll ) ) ) ) 
            Estimate Std. Error t value Pr(>|t|)
(Intercept)     0.98      0.109    9.05       NA
x1              0.97      0.149    6.48       NA
x2             -1.29      0.121  -10.63       NA
(Intercept)    10.24      0.668   15.33       NA
x1              2.66      0.592    4.49       NA
logSigma        1.63      0.075   21.82       NA
atanRho         0.28      0.306    0.92       NA
sigma           5.11      0.382   13.38       NA
sigmaSq        26.09      3.899    6.69       NA
rho             0.29      0.332    0.87       NA
> 
> maxLik:::summary.maxLik( res )
--------------------------------------------
Maximum Likelihood estimation
BHHH maximisation, 13 iterations
Return code 2: successive function values within tolerance limit
Log-Likelihood: -275 
7  free parameters
Estimates:
            Estimate Std. error t value Pr(> t)    
(Intercept)   0.9819     0.1085    9.05 < 2e-16 ***
x1            0.9667     0.1491    6.48 8.9e-11 ***
x2           -1.2861     0.1209  -10.63 < 2e-16 ***
(Intercept)  10.2410     0.6682   15.33 < 2e-16 ***
x1            2.6593     0.5922    4.49 7.1e-06 ***
logSigma      1.6307     0.0747   21.82 < 2e-16 ***
atanRho       0.2820     0.3058    0.92    0.36    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
--------------------------------------------
> 
> # function that returns log-likelihood values
> intLogLik <- function( param ) {
+    ll <- selection( yS ~ x1 + x2, yO ~ x1, data = dat, boundaries = bound, 
+       start = param, returnLogLikStart = TRUE )
+    return( ll )
+ }
> 
> 
> # log-likelihood values and their gradients at starting values of parameters
> logLikStart <- intLogLik( start )
> print( c( logLikStart ) )
  [1] -2.2e-01 -3.7e+00 -3.4e-01 -4.8e+00 -9.0e-02 -1.6e+00 -8.4e-02 -3.8e-01
  [9] -2.0e-01 -7.2e-02 -1.7e+00 -3.9e-01 -2.7e+00 -7.2e-02 -7.4e+00 -1.8e+00
 [17] -1.6e-01 -9.5e-01 -2.1e+00 -1.1e+00 -4.8e-01 -4.0e-01 -4.8e-01 -4.3e-01
 [25] -3.1e-01 -8.9e-02 -3.0e-01 -4.0e-01 -7.3e-02 -6.9e-01 -2.8e+00 -7.3e-02
 [33] -3.1e-01 -8.4e-01 -1.5e+00 -1.7e-01 -1.2e-01 -4.7e+00 -5.7e-01 -1.4e+00
 [41] -1.1e+00 -5.7e-01 -2.7e-02 -5.2e-02 -1.3e+01 -5.5e-01 -3.7e+00 -6.8e+00
 [49] -2.3e-01 -4.6e+00 -9.0e-01 -2.7e-02 -1.1e-01 -9.0e-01 -8.2e-02 -3.9e-01
 [57] -1.8e-01 -2.2e+00 -3.0e-02 -9.2e-02 -6.8e+00 -5.8e-01 -4.6e-01 -1.6e-01
 [65] -2.1e-01 -3.1e+00 -1.9e+00 -4.8e-02 -5.3e-01 -7.9e-02 -2.9e-02 -5.0e-01
 [73] -1.1e+01 -1.3e+00 -9.4e-01 -4.3e-01 -8.5e-02 -4.4e-01 -1.6e-01 -3.4e-02
 [81] -2.0e-01 -7.1e+00 -4.3e-01 -1.5e-01 -5.5e+00 -6.6e-01 -5.7e-01 -2.6e+00
 [89] -1.8e-01 -6.2e-01 -1.1e+00 -1.1e-01 -1.0e+00 -2.3e+00 -8.7e-01 -1.4e-01
 [97] -4.8e-02 -3.9e-01 -5.8e-02 -7.5e-01 -2.7e+00 -3.3e+00 -1.2e-01 -6.2e+00
[105] -3.1e-01 -5.4e+00 -4.9e-01 -8.0e-02 -1.8e-01 -3.8e-01 -6.4e-01 -2.1e+00
[113] -1.1e-01 -4.8e+00 -7.5e+00 -4.9e-02 -3.9e+00 -6.4e-01 -4.3e-01 -6.6e-01
[121] -2.9e-01 -5.2e-01 -4.8e-01 -3.5e-01 -1.6e-01 -3.5e-01 -1.3e-01 -1.8e-01
[129] -5.7e-02 -4.7e+00 -4.5e-01 -2.0e+00 -4.2e+00 -1.2e-01 -1.5e-01 -5.4e-01
[137] -1.3e-01 -1.8e+00 -1.3e-01 -4.8e-02 -1.8e-01 -5.1e-01 -1.2e-01 -4.7e-01
[145] -7.3e-01 -9.7e-01 -2.0e-01 -4.4e-01 -6.6e-02 -7.9e-01 -1.0e+00 -1.7e+00
[153] -2.7e-01 -1.6e+00 -7.4e-01 -3.2e+00 -1.1e+00 -1.9e-01 -1.1e+01 -6.3e+00
[161] -6.2e-01 -7.9e-01 -1.9e+00 -1.9e-04 -1.1e-01 -7.7e-01 -3.8e-01 -1.2e-01
[169] -1.8e-01 -3.0e+00 -1.2e-01 -2.4e+00 -3.6e-02 -6.0e-02 -1.1e+00 -5.1e-01
[177] -2.9e-01 -6.3e+00 -2.4e-01 -1.5e+00 -1.1e+01 -6.8e-01 -2.9e-01 -7.0e-01
[185] -7.3e-01 -7.1e-01 -2.2e+00 -7.6e-02 -8.0e-01 -2.8e-01 -1.4e-01 -2.7e-01
[193] -9.0e-01 -3.8e-01 -9.7e-01 -2.4e+00 -2.2e-01 -4.1e-01 -3.5e+00 -2.6e-01
[201] -3.1e+00 -7.9e-01 -4.9e-01 -2.3e+00 -8.5e-02 -6.9e+00 -3.3e-01 -1.3e-01
[209] -1.5e+00 -4.6e+00 -1.5e-01 -3.3e+00 -2.4e+00 -7.2e+00 -6.0e-01 -2.5e-01
[217] -1.4e+00 -3.1e+00 -8.0e-01 -1.3e+00 -3.5e-01 -1.9e-01 -5.2e-01 -2.1e-01
[225] -1.2e+00 -3.9e-01 -1.9e-01 -6.9e-01 -3.9e-01 -6.5e-01 -1.2e-01 -4.8e+00
[233] -4.1e-02 -8.1e-01 -6.6e-02 -1.4e-01 -4.5e-01 -2.4e-01 -8.0e-02 -2.4e+00
[241] -5.3e-01 -2.9e+00 -1.2e+00 -6.3e-01 -6.6e-01 -2.2e+00 -4.4e-02 -1.7e-01
[249] -1.8e-02 -1.1e-01 -9.1e-01 -2.2e+00 -3.9e-01 -1.6e+00 -1.8e+00 -3.5e-02
[257] -5.0e-01 -2.0e+00 -1.7e-01 -1.1e+00 -2.6e+00 -7.9e-01 -4.2e+00 -1.1e+00
[265] -3.5e+00 -3.6e-01 -5.2e+00 -9.4e-02 -2.4e-01 -2.0e-01 -5.2e-01 -3.6e-01
[273] -1.8e-01 -2.7e-01 -2.8e-01 -2.3e-01 -4.1e-01 -2.0e-01 -7.7e-02 -1.8e+00
[281] -1.5e+00 -2.4e-01 -6.5e+00 -5.4e-01 -3.8e+00 -3.8e+00 -1.6e+00 -2.8e-01
[289] -8.6e-01 -3.9e-02 -5.8e-01 -5.3e-01 -8.9e-01 -1.4e+00 -2.4e+00 -4.1e+00
[297] -1.5e-01 -8.7e-01 -5.7e-01 -1.1e+00
> gradStart <- attr( logLikStart, "gradient" )
> colnames( gradStart ) <- names( start )
> print( gradStart )
         betaS0   betaS1   betaS2   betaO0   betaO2 logSigma  atanRho
  [1,]  2.0e-01 -1.1e-01 -1.5e-01  0.07853 -4.4e-02  -0.2283  9.1e-02
  [2,]  4.5e-01 -1.0e-01 -3.4e-01 -1.06200  2.4e-01   4.3322 -1.0e+00
  [3,]  2.2e-04  3.4e-04 -2.1e-04  0.21584  3.4e-01  -0.2665  4.1e-04
  [4,]  2.6e-01  1.8e-02 -2.8e-01 -1.24823 -8.8e-02   6.5932 -6.8e-01
  [5,]  1.2e-01  1.6e-02 -5.5e-02 -0.01918 -2.5e-03  -0.1545  7.5e-03
  [6,]  6.5e-02  1.1e-01  2.2e-02 -0.63100 -1.1e+00   1.1738 -5.9e-02
  [7,]  1.0e-03  4.6e-04 -2.0e-03 -0.06986 -3.2e-02  -0.2383  9.4e-05
  [8,] -5.2e-01  6.6e-01 -1.1e-01  0.00000  0.0e+00   0.0000  0.0e+00
  [9,] -3.2e-01  2.2e-01 -3.9e-01  0.00000  0.0e+00   0.0000  0.0e+00
 [10,] -1.4e-01  6.4e-02 -2.9e-01  0.00000  0.0e+00   0.0000  0.0e+00
 [11,] -1.5e+00 -1.8e+00 -1.9e+00  0.00000  0.0e+00   0.0000  0.0e+00
 [12,]  4.8e-01  1.7e-01  3.6e-01 -0.06676 -2.4e-02  -0.2492 -3.0e-02
 [13,]  5.8e-05  2.3e-05 -1.0e-04  0.87428  3.5e-01   2.9699  2.4e-04
 [14,]  9.6e-02  1.1e-02 -5.8e-02 -0.01613 -1.8e-03  -0.1518  7.5e-03
 [15,]  2.6e-02 -1.4e-02 -9.0e-03  1.56003 -8.7e-01  11.2686  1.3e-01
 [16,]  1.3e-01  2.3e-01  9.0e-02 -0.68508 -1.2e+00   1.4713 -1.4e-01
 [17,]  1.3e-01  6.3e-02 -1.3e-02 -0.08243 -4.1e-02  -0.2582 -4.6e-03
 [18,] -9.9e-01  2.0e+00  1.2e+00  0.00000  0.0e+00   0.0000  0.0e+00
 [19,]  4.6e-01  3.2e-01  7.7e-01  0.60826  4.3e-01   1.3349  9.2e-01
 [20,]  1.0e+00 -4.9e-01  9.5e-01  0.02668 -1.3e-02  -0.1203  1.3e-01
 [21,] -6.1e-01  6.6e-01 -1.5e-01  0.00000  0.0e+00   0.0000  0.0e+00
 [22,] -5.4e-01  1.2e-01 -6.6e-01  0.00000  0.0e+00   0.0000  0.0e+00
 [23,]  1.2e-01 -1.2e-01 -1.6e-01  0.23752 -2.4e-01  -0.2135  1.4e-01
 [24,] -5.7e-01  4.1e-01 -3.7e-01  0.00000  0.0e+00   0.0000  0.0e+00
 [25,]  2.9e-01 -1.8e-01 -1.5e-01  0.08859 -5.5e-02  -0.2301  1.3e-01
 [26,] -1.7e-01  2.9e-01 -1.2e-01  0.00000  0.0e+00   0.0000  0.0e+00
 [27,]  8.4e-02  7.0e-02 -5.1e-03 -0.18159 -1.5e-01  -0.3009 -1.2e-02
 [28,]  5.1e-01  7.8e-02  3.2e-01 -0.03230 -5.0e-03  -0.1755 -4.7e-03
 [29,] -1.4e-01  1.6e-01 -1.9e-01  0.00000  0.0e+00   0.0000  0.0e+00
 [30,]  1.1e-02  1.3e-02  7.7e-05  0.35349  4.4e-01  -0.0054  2.0e-02
 [31,]  2.2e-01  9.2e-02  2.2e-01  0.82328  3.5e-01   2.7120  6.0e-01
 [32,]  6.1e-02 -1.8e-02 -7.2e-02  0.03623 -1.1e-02  -0.1805  2.1e-02
 [33,]  1.7e-02  1.5e-02 -1.2e-02 -0.19871 -1.8e-01  -0.2834 -1.6e-03
 [34,]  7.0e-01  6.2e-01  1.1e+00 -0.24885 -2.2e-01  -0.3705 -3.0e-01
 [35,]  4.6e-02  3.8e-02  1.7e-02  0.59311  4.9e-01   1.0164  1.1e-01
 [36,]  4.3e-04  2.9e-04 -8.7e-04 -0.12746 -8.8e-02  -0.2914  1.6e-05
 [37,]  6.2e-03  3.5e-03 -8.5e-03 -0.09115 -5.0e-02  -0.2644  1.6e-04
 [38,]  7.6e-01 -4.7e-02 -1.5e-01 -1.23191  7.6e-02   5.8545 -2.1e+00
 [39,] -6.9e-01  2.1e-01 -6.0e-01  0.00000  0.0e+00   0.0000  0.0e+00
 [40,] -1.3e+00  5.0e-01  1.3e-01  0.00000  0.0e+00   0.0000  0.0e+00
 [41,]  9.7e-01 -6.7e-01  6.0e-01  0.06676 -4.6e-02  -0.1589  2.6e-01
 [42,] -6.9e-01  1.4e-01 -6.7e-01  0.00000  0.0e+00   0.0000  0.0e+00
 [43,] -6.3e-02  8.0e-02 -1.1e-01  0.00000  0.0e+00   0.0000  0.0e+00
 [44,]  2.2e-03  4.8e-03  1.2e-04  0.04848  1.1e-01  -0.1782  1.5e-03
 [45,]  5.8e-01  7.0e-01 -3.0e-02 -2.15887 -2.6e+00  21.2257 -3.0e+00
 [46,]  5.9e-02 -6.6e-02 -1.0e-01  0.28764 -3.2e-01  -0.1464  8.3e-02
 [47,]  1.1e+00 -4.3e-01  1.1e-01 -1.03834  4.2e-01   3.5184 -2.6e+00
 [48,]  1.3e-02 -6.0e-03 -7.4e-03  1.49555 -7.0e-01  10.2693  6.6e-02
 [49,]  1.1e-02  8.6e-03 -1.1e-02 -0.15691 -1.2e-01  -0.2978 -4.8e-04
 [50,]  7.8e-01 -6.5e-02 -1.4e-01 -1.21956  1.0e-01   5.6911 -2.2e+00
 [51,] -9.6e-01 -2.4e-01 -9.7e-01  0.00000  0.0e+00   0.0000  0.0e+00
 [52,]  4.4e-03 -1.2e-04 -8.7e-03  0.00325 -9.3e-05  -0.1499  1.4e-03
 [53,]  1.6e-01 -7.0e-03 -7.0e-02  0.00018 -7.9e-06  -0.1373  1.8e-02
 [54,]  6.0e-02  8.2e-02  7.0e-03 -0.42569 -5.8e-01   0.2019 -3.0e-02
 [55,]  9.7e-02 -2.2e-02 -8.6e-02  0.02465 -5.6e-03  -0.1603  2.4e-02
 [56,]  1.8e-02  2.7e-02  6.0e-03  0.23101  3.5e-01  -0.2462  2.5e-02
 [57,] -3.0e-01  4.7e-01 -1.2e-01  0.00000  0.0e+00   0.0000  0.0e+00
 [58,]  2.1e-02  1.2e-02 -6.9e-04  0.74788  4.4e-01   1.9905  6.3e-02
 [59,]  5.7e-04  7.0e-05 -1.4e-03 -0.01521 -1.9e-03  -0.1580  1.8e-04
 [60,] -1.7e-01 -3.8e-02 -4.5e-01  0.00000  0.0e+00   0.0000  0.0e+00
 [61,]  6.5e-01  2.5e-01 -1.3e-01 -1.54076 -5.8e-01  10.0435 -2.3e+00
 [62,] -7.0e-01  3.5e-01 -4.6e-01  0.00000  0.0e+00   0.0000  0.0e+00
 [63,]  5.5e-01 -1.8e-01  1.5e-01  0.02352 -7.8e-03  -0.1348  7.8e-02
 [64,] -2.7e-01  2.8e-01 -2.8e-01  0.00000  0.0e+00   0.0000  0.0e+00
 [65,] -3.3e-01  3.5e-01 -2.7e-01  0.00000  0.0e+00   0.0000  0.0e+00
 [66,]  1.7e-02  5.2e-03 -3.6e-03  0.93835  2.8e-01   3.5525  6.1e-02
 [67,] -1.6e+00 -7.1e-01 -6.0e-01  0.00000  0.0e+00   0.0000  0.0e+00
 [68,]  5.4e-02  2.9e-03 -5.1e-02 -0.00804 -4.3e-04  -0.1471  6.9e-03
 [69,]  3.3e-01  3.1e-01  2.8e-01 -0.23412 -2.2e-01  -0.3074 -1.0e-01
 [70,]  4.6e-04  9.5e-04 -2.1e-04  0.06931  1.4e-01  -0.2218  4.6e-04
 [71,] -6.7e-02  3.3e-02 -1.6e-01  0.00000  0.0e+00   0.0000  0.0e+00
 [72,]  6.1e-01 -1.4e+00 -1.0e+00 -0.04319  1.0e-01  -0.1830 -2.7e-02
 [73,]  3.8e-01  3.9e-01 -1.8e-01 -1.97012 -2.0e+00  17.7763 -1.7e+00
 [74,]  1.1e+00 -8.0e-01  9.3e-01  0.06219 -4.4e-02  -0.1460  2.7e-01
 [75,]  8.8e-01 -6.1e-01  4.5e-01  0.06955 -4.8e-02  -0.1665  2.5e-01
 [76,]  1.9e-02  1.9e-02 -1.1e-02 -0.25221 -2.6e-01  -0.2270 -2.9e-03
 [77,]  8.7e-02 -2.5e-02 -8.7e-02  0.03346 -9.5e-03  -0.1739  2.6e-02
 [78,] -5.8e-01  7.1e-01 -8.4e-02  0.00000  0.0e+00   0.0000  0.0e+00
 [79,]  2.2e-01  4.1e-02 -3.2e-03 -0.02854 -5.2e-03  -0.1673  4.9e-03
 [80,]  1.0e-02 -1.4e-03 -1.9e-02  0.01662 -2.3e-03  -0.1581  3.7e-03
 [81,]  3.0e-01  1.7e-03  1.0e-02 -0.00866 -5.0e-05  -0.1364  1.7e-02
 [82,]  9.3e-01  3.6e-01  1.8e-01 -1.59219 -6.1e-01  10.4147 -3.5e+00
 [83,]  5.2e-01 -1.9e-01  9.0e-02  0.02973 -1.1e-02  -0.1438  8.7e-02
 [84,]  1.2e-02  7.7e-03 -1.3e-02 -0.11512 -7.4e-02  -0.2851 -1.2e-04
 [85,]  1.3e-01 -2.8e-02  6.0e-02  1.29466 -2.9e-01   7.6151  5.3e-01
 [86,] -7.7e-01 -2.5e-01 -1.1e+00  0.00000  0.0e+00   0.0000  0.0e+00
 [87,]  1.6e-01  1.7e-01  7.1e-02 -0.29637 -3.3e-01  -0.1818 -5.6e-02
 [88,]  6.8e-04  2.9e-04 -7.7e-04  0.85080  3.7e-01   2.7730  2.6e-03
 [89,]  2.3e-01 -7.6e-02 -1.0e-01  0.03355 -1.1e-02  -0.1640  5.4e-02
 [90,]  1.2e-01  1.4e-01  4.2e-02 -0.31802 -3.7e-01  -0.1289 -4.5e-02
 [91,]  1.9e-03  1.8e-03 -1.2e-03  0.49663  4.9e-01   0.5095  4.9e-03
 [92,]  4.5e-04  2.5e-04 -9.7e-04 -0.08961 -4.9e-02  -0.2627  3.6e-05
 [93,] -1.0e+00 -2.5e-01 -9.2e-01  0.00000  0.0e+00   0.0000  0.0e+00
 [94,]  4.9e-01 -3.1e-01 -4.1e-01 -0.79355  5.0e-01   1.9747 -8.0e-01
 [95,]  1.1e-02  1.5e-02 -6.3e-03 -0.41609 -5.7e-01   0.1841 -3.7e-03
 [96,] -2.5e-01  1.5e-01 -3.8e-01  0.00000  0.0e+00   0.0000  0.0e+00
 [97,]  8.8e-05  1.9e-04 -6.8e-05  0.04588  1.0e-01  -0.1720  8.2e-05
 [98,]  6.1e-02  9.3e-02  5.1e-02  0.21974  3.4e-01  -0.2484  7.1e-02
 [99,]  4.7e-02 -1.1e-02 -5.9e-02  0.02807 -6.6e-03  -0.1692  1.5e-02
[100,]  4.9e-01 -5.1e-01 -1.8e-01  0.20042 -2.1e-01  -0.1802  3.9e-01
[101,]  1.0e+00 -7.3e-01 -7.6e-02 -0.81853  5.8e-01   1.7667 -1.9e+00
[102,]  7.6e-04  2.0e-04 -8.9e-04  0.97339  2.5e-01   3.8668  3.2e-03
[103,]  1.6e-01 -3.9e-02 -9.9e-02  0.02526 -6.2e-03  -0.1569  3.5e-02
[104,]  4.8e-02 -1.7e-02 -1.4e-03  1.40121 -4.9e-01   8.9539  2.2e-01
[105,] -4.5e-01  4.3e-01 -3.0e-01  0.00000  0.0e+00   0.0000  0.0e+00
[106,] -2.9e+00  1.3e-01  4.8e+00  0.00000  0.0e+00   0.0000  0.0e+00
[107,]  4.1e-01 -3.3e-01 -1.5e-01  0.12343 -9.7e-02  -0.2334  2.3e-01
[108,] -1.6e-01  2.6e-01 -1.2e-01  0.00000  0.0e+00   0.0000  0.0e+00
[109,]  2.2e-01 -8.2e-02 -1.2e-01  0.04284 -1.6e-02  -0.1792  6.0e-02
[110,]  1.3e-01  1.2e-01  2.9e-02 -0.21605 -2.0e-01  -0.2868 -2.7e-02
[111,] -7.6e-01  4.3e-01 -3.7e-01  0.00000  0.0e+00   0.0000  0.0e+00
[112,]  4.4e-02  2.6e-02  1.2e-02  0.72913  4.4e-01   1.8725  1.2e-01
[113,] -2.0e-01  3.2e-01 -1.3e-01  0.00000  0.0e+00   0.0000  0.0e+00
[114,]  8.1e-01 -4.5e-02 -9.9e-02 -1.24531  6.9e-02   5.9498 -2.3e+00
[115,]  4.9e-01  2.6e-01 -2.0e-01 -1.61950 -8.4e-01  11.4622 -1.8e+00
[116,]  1.6e-04  4.8e-05 -4.2e-04 -0.04038 -1.2e-02  -0.1931  3.8e-05
[117,]  2.8e-02  3.0e-03 -2.6e-03  1.07538  1.1e-01   4.9224  1.1e-01
[118,] -7.5e-01  4.8e-01 -3.2e-01  0.00000  0.0e+00   0.0000  0.0e+00
[119,] -5.7e-01  4.8e-01 -3.1e-01  0.00000  0.0e+00   0.0000  0.0e+00
[120,]  3.9e-01 -4.0e-01 -2.2e-01  0.20931 -2.1e-01  -0.1900  3.3e-01
[121,] -4.3e-01 -5.1e-02 -7.6e-01  0.00000  0.0e+00   0.0000  0.0e+00
[122,] -6.6e-01  6.2e-01 -1.9e-01  0.00000  0.0e+00   0.0000  0.0e+00
[123,]  5.4e-01 -2.7e-01  6.9e-02  0.04728 -2.3e-02  -0.1654  1.3e-01
[124,] -4.9e-01  1.3e-01 -6.3e-01  0.00000  0.0e+00   0.0000  0.0e+00
[125,]  2.8e-04  5.2e-04 -2.0e-04  0.11852  2.2e-01  -0.2815  3.8e-04
[126,]  3.3e-01 -2.1e-01 -1.5e-01  0.09290 -6.1e-02  -0.2299  1.5e-01
[127,] -2.3e-01 -5.4e-02 -5.5e-01  0.00000  0.0e+00   0.0000  0.0e+00
[128,]  2.7e-01  2.1e-02  3.0e-03 -0.01628 -1.3e-03  -0.1463  1.1e-02
[129,] -1.2e-01  1.1e-01 -1.9e-01  0.00000  0.0e+00   0.0000  0.0e+00
[130,]  4.1e-04 -2.9e-05 -5.8e-04  1.20692 -8.6e-02   6.3789  2.0e-03
[131,]  4.3e-03  6.2e-03 -8.2e-04  0.26347  3.8e-01  -0.2050  7.3e-03
[132,] -1.6e+00 -7.2e-01 -6.0e-01  0.00000  0.0e+00   0.0000  0.0e+00
[133,]  7.5e-02  3.1e-03  2.2e-02  1.11378  4.6e-02   5.3852  2.8e-01
[134,]  1.1e-01 -4.5e-02 -1.1e-01  0.05564 -2.4e-02  -0.2071  4.2e-02
[135,] -2.6e-01  5.4e-01 -5.0e-03  0.00000  0.0e+00   0.0000  0.0e+00
[136,]  3.8e-03  4.3e-03 -4.1e-03 -0.29892 -3.4e-01  -0.1422 -5.2e-04
[137,] -2.3e-01  3.3e-01 -1.6e-01  0.00000  0.0e+00   0.0000  0.0e+00
[138,]  2.0e-01  1.5e-01  2.1e-01  0.62199  4.6e-01   1.2690  4.4e-01
[139,]  1.5e-07  2.8e-07 -3.2e-07  0.10108  1.9e-01  -0.2665  2.7e-07
[140,] -1.0e-01  1.5e-01 -1.3e-01  0.00000  0.0e+00   0.0000  0.0e+00
[141,]  6.2e-03  4.3e-03 -7.7e-03 -0.13166 -9.2e-02  -0.2933 -6.8e-05
[142,]  6.2e-01 -1.6e-01  2.8e-01  0.01300 -3.4e-03  -0.1230  6.1e-02
[143,] -2.1e-01  3.3e-01 -1.4e-01  0.00000  0.0e+00   0.0000  0.0e+00
[144,] -6.1e-01  9.2e-01  1.2e-01  0.00000  0.0e+00   0.0000  0.0e+00
[145,] -8.3e-01  1.3e+00  5.3e-01  0.00000  0.0e+00   0.0000  0.0e+00
[146,] -1.0e+00  5.3e-01 -1.7e-01  0.00000  0.0e+00   0.0000  0.0e+00
[147,] -3.3e-01  4.8e-01 -1.4e-01  0.00000  0.0e+00   0.0000  0.0e+00
[148,]  4.2e-01  2.9e-01  3.7e-01 -0.15165 -1.0e-01  -0.3428 -7.9e-02
[149,]  2.0e-07  4.3e-07 -4.2e-07  0.05999  1.3e-01  -0.2040  3.1e-07
[150,]  8.9e-02 -1.2e-01 -1.5e-01  0.36431 -4.7e-01   0.0538  1.4e-01
[151,] -1.0e+00 -8.2e-01 -1.5e+00  0.00000  0.0e+00   0.0000  0.0e+00
[152,]  1.8e-01  1.4e-01  1.9e-01  0.60610  4.7e-01   1.1660  4.0e-01
[153,]  3.4e-01  1.1e-01  1.5e-01 -0.05613 -1.9e-02  -0.2230 -1.2e-02
[154,]  1.2e+00 -1.2e+00  8.7e-01  0.13401 -1.4e-01  -0.1317  5.7e-01
[155,]  8.2e-01 -9.8e-02  7.5e-01 -0.00718  8.6e-04  -0.1257  2.3e-02
[156,]  1.1e-02 -3.0e-03 -2.9e-02 -0.95873  2.7e-01   3.7184 -1.5e-02
[157,] -1.1e+00 -6.2e-01 -1.2e+00  0.00000  0.0e+00   0.0000  0.0e+00
[158,]  2.3e-01 -8.6e-02 -1.1e-01  0.04089 -1.5e-02  -0.1753  6.2e-02
[159,]  8.2e-01  8.0e-01  1.9e-01 -2.02266 -2.0e+00  18.0177 -4.0e+00
[160,]  2.5e-02 -9.5e-03 -7.5e-03  1.42501 -5.3e-01   9.2602  1.2e-01
[161,]  3.0e-01  3.2e-01  2.6e-01 -0.28980 -3.1e-01  -0.2289 -1.2e-01
[162,]  5.1e-01 -5.3e-01 -1.8e-01  0.20842 -2.2e-01  -0.1682  4.1e-01
[163,]  1.2e+00 -1.5e+00  6.2e-01  0.22998 -2.9e-01   0.0089  9.1e-01
[164,]  8.5e-06  2.8e-05 -3.3e-06  0.00031  1.0e-03  -0.0025  7.8e-07
[165,]  8.9e-02 -3.7e-02 -9.7e-02  0.05549 -2.3e-02  -0.2083  3.7e-02
[166,] -8.5e-01 -2.5e-01 -1.0e+00  0.00000  0.0e+00   0.0000  0.0e+00
[167,]  3.7e-01  2.3e-01  2.7e-01 -0.13197 -8.4e-02  -0.3265 -5.5e-02
[168,] -2.2e-01  1.0e-01 -3.7e-01  0.00000  0.0e+00   0.0000  0.0e+00
[169,]  1.6e-01  8.4e-02  1.1e-02 -0.08845 -4.6e-02  -0.2678 -8.4e-03
[170,]  2.6e-01  9.7e-02  3.0e-01  0.85493  3.2e-01   3.0129  7.4e-01
[171,] -2.2e-01  4.8e-02 -4.4e-01  0.00000  0.0e+00   0.0000  0.0e+00
[172,] -1.8e+00 -1.2e-01  5.1e-01  0.00000  0.0e+00   0.0000  0.0e+00
[173,]  2.8e-02 -9.4e-04 -3.6e-02  0.00309 -1.1e-04  -0.1472  5.9e-03
[174,]  8.7e-04  1.9e-03 -2.1e-04  0.05504  1.2e-01  -0.1934  7.1e-04
[175,] -1.1e+00  8.3e-01  2.4e-01  0.00000  0.0e+00   0.0000  0.0e+00
[176,] -6.5e-01  7.1e-01 -9.8e-02  0.00000  0.0e+00   0.0000  0.0e+00
[177,] -4.2e-01 -1.6e-02 -7.3e-01  0.00000  0.0e+00   0.0000  0.0e+00
[178,]  5.9e-01  1.8e-01 -1.9e-01 -1.47870 -4.6e-01   9.2299 -2.0e+00
[179,]  2.8e-01  1.2e-01  1.1e-01 -0.07495 -3.3e-02  -0.2544 -1.5e-02
[180,] -1.3e+00  6.2e-01  3.1e-01  0.00000  0.0e+00   0.0000  0.0e+00
[181,]  8.8e-02 -9.4e-02  1.8e-03  1.93352 -2.1e+00  17.8915  5.2e-01
[182,]  2.4e-02  3.1e-02  7.6e-03  0.34699  4.4e-01  -0.0183  4.2e-02
[183,] -4.2e-01  1.5e-01 -5.6e-01  0.00000  0.0e+00   0.0000  0.0e+00
[184,] -8.1e-01  7.0e-01 -9.8e-02  0.00000  0.0e+00   0.0000  0.0e+00
[185,] -8.3e-01  2.0e-01 -5.9e-01  0.00000  0.0e+00   0.0000  0.0e+00
[186,] -8.1e-01  1.6e-01 -6.3e-01  0.00000  0.0e+00   0.0000  0.0e+00
[187,] -1.7e+00 -1.9e+00 -1.5e+00  0.00000  0.0e+00   0.0000  0.0e+00
[188,]  1.1e-01  8.9e-03 -6.0e-02 -0.01318 -1.1e-03  -0.1481  8.7e-03
[189,] -8.8e-01 -6.6e-01 -1.4e+00  0.00000  0.0e+00   0.0000  0.0e+00
[190,]  3.1e-01 -1.5e-01 -1.2e-01  0.05993 -3.0e-02  -0.1973  1.0e-01
[191,]  1.9e-01  4.0e-02 -2.0e-02 -0.03224 -6.9e-03  -0.1744  3.8e-03
[192,] -4.0e-01  1.3e-01 -5.6e-01  0.00000  0.0e+00   0.0000  0.0e+00
[193,]  9.5e-01  9.0e-02  1.2e+00 -0.03671 -3.5e-03  -0.1947 -3.4e-02
[194,]  1.6e-01 -1.5e-01 -1.8e-01  0.18148 -1.6e-01  -0.2591  1.4e-01
[195,]  3.2e-01 -4.2e-01 -2.8e-01  0.34807 -4.6e-01   0.0845  4.2e-01
[196,]  2.2e-04  4.5e-04 -3.0e-04 -0.80542 -1.6e+00   2.4073 -1.5e-04
[197,]  1.8e-01  1.1e-01  3.2e-02 -0.11075 -6.7e-02  -0.2927 -1.4e-02
[198,] -5.5e-01  6.9e-01 -9.1e-02  0.00000  0.0e+00   0.0000  0.0e+00
[199,]  1.4e+00 -8.4e-01  5.0e-01 -0.93759  5.7e-01   2.3959 -3.0e+00
[200,] -3.9e-01  4.7e-01 -2.2e-01  0.00000  0.0e+00   0.0000  0.0e+00
[201,]  2.8e-03  6.1e-03 -1.7e-03 -0.94312 -2.1e+00   3.5794 -3.2e-03
[202,]  3.4e-03  4.4e-03 -3.3e-03 -0.38950 -5.1e-01   0.0971 -7.8e-04
[203,] -6.2e-01  1.6e-01 -6.4e-01  0.00000  0.0e+00   0.0000  0.0e+00
[204,]  1.3e-01  6.9e-02  9.5e-02  0.75904  4.1e-01   2.1460  3.4e-01
[205,]  3.7e-02 -1.5e-02 -5.6e-02  0.05800 -2.4e-02  -0.2170  1.9e-02
[206,]  4.5e-02 -2.2e-02 -4.3e-03  1.49721 -7.1e-01  10.3382  2.2e-01
[207,]  2.0e-01 -1.6e-01 -1.8e-01  0.14142 -1.1e-01  -0.2642  1.4e-01
[208,]  1.2e-02 -7.3e-03 -2.5e-02  0.10015 -6.0e-02  -0.2714  1.1e-02
[209,]  4.7e-02  7.7e-02  7.0e-03 -0.58877 -9.7e-01   0.9442 -3.6e-02
[210,]  3.4e-02 -1.8e-03 -2.7e-03  1.18895 -6.4e-02   6.2017  1.4e-01
[211,]  2.2e-01  2.6e-02 -2.1e-02 -0.02017 -2.4e-03  -0.1532  8.6e-03
[212,]  5.3e-02  1.3e-02  1.1e-02  0.97421  2.4e-01   3.9215  1.8e-01
[213,] -1.8e+00 -2.2e+00 -1.6e+00  0.00000  0.0e+00   0.0000  0.0e+00
[214,]  9.0e-02 -4.7e-02  1.9e-02  1.51933 -7.8e-01  10.7329  4.4e-01
[215,]  3.5e-01 -3.5e-01 -2.2e-01  0.20035 -2.0e-01  -0.2074  2.9e-01
[216,]  3.9e-04  6.6e-04 -2.9e-04  0.17182  2.9e-01  -0.2926  6.2e-04
[217,] -1.3e+00  5.7e-01  1.7e-01  0.00000  0.0e+00   0.0000  0.0e+00
[218,]  1.4e+00 -9.8e-01  4.2e-01 -0.85903  6.2e-01   1.8106 -2.7e+00
[219,]  2.4e-01 -3.0e-01 -2.5e-01  0.32044 -4.0e-01  -0.0178  3.1e-01
[220,]  6.9e-01 -8.8e-01 -1.3e-01  0.29317 -3.8e-01   0.0405  7.1e-01
[221,] -4.9e-01  2.8e-01 -4.7e-01  0.00000  0.0e+00   0.0000  0.0e+00
[222,]  1.1e-01  6.5e-02 -1.1e-02 -0.11203 -6.9e-02  -0.2886 -6.8e-03
[223,]  1.2e-02  1.3e-02 -8.4e-03 -0.28954 -3.2e-01  -0.1627 -2.1e-03
[224,]  6.7e-02  4.7e-02 -1.8e-02 -0.13643 -9.7e-02  -0.2995 -5.0e-03
[225,]  1.1e+00 -4.1e-01  1.2e+00  0.01154 -4.2e-03  -0.1096  8.1e-02
[226,]  5.1e-01  3.0e-02  2.8e-01 -0.02003 -1.2e-03  -0.1497  6.9e-03
[227,] -3.1e-01  2.2e-01 -3.8e-01  0.00000  0.0e+00   0.0000  0.0e+00
[228,]  6.6e-01 -4.7e-01  9.1e-02  0.08884 -6.4e-02  -0.1962  2.5e-01
[229,]  1.8e-01  1.6e-01  7.4e-02 -0.20642 -1.8e-01  -0.3025 -4.0e-02
[230,]  3.9e-01 -3.9e-01 -2.2e-01  0.20628 -2.1e-01  -0.1943  3.3e-01
[231,]  1.8e-02  3.5e-02  1.1e-02  0.08835  1.7e-01  -0.2492  1.3e-02
[232,]  1.1e-02 -9.8e-04 -5.5e-03  1.21896 -1.1e-01   6.5352  4.8e-02
[233,]  1.2e-02  2.6e-03 -1.8e-02 -0.02768 -5.9e-03  -0.1722  1.5e-03
[234,] -8.8e-01  6.5e-01 -1.1e-01  0.00000  0.0e+00   0.0000  0.0e+00
[235,] -1.3e-01  7.7e-02 -2.6e-01  0.00000  0.0e+00   0.0000  0.0e+00
[236,] -2.5e-01  3.2e-01 -2.0e-01  0.00000  0.0e+00   0.0000  0.0e+00
[237,] -5.9e-01  1.1e-01 -6.9e-01  0.00000  0.0e+00   0.0000  0.0e+00
[238,]  2.8e-01  1.2e-01  1.0e-01 -0.07117 -3.0e-02  -0.2482 -1.4e-02
[239,]  6.6e-02  2.1e-02 -4.0e-02 -0.04600 -1.5e-02  -0.2000  1.8e-03
[240,]  9.6e-01 -7.5e-01 -1.9e-01 -0.75935  5.9e-01   1.4229 -1.6e+00
[241,]  4.5e-01 -3.6e-01 -1.2e-01  0.12165 -9.6e-02  -0.2284  2.4e-01
[242,]  6.8e-01 -3.4e-01 -3.2e-01 -0.90771  4.6e-01   2.7151 -1.3e+00
[243,]  1.6e-01  2.4e-01  1.1e-01 -0.51024 -7.6e-01   0.5022 -1.3e-01
[244,]  1.7e-01 -2.0e-01 -2.1e-01  0.28114 -3.2e-01  -0.1271  2.1e-01
[245,] -7.7e-01  1.4e-01 -6.7e-01  0.00000  0.0e+00   0.0000  0.0e+00
[246,]  1.6e-01  2.9e-01  1.3e-01 -0.76431 -1.5e+00   1.9944 -2.1e-01
[247,]  4.2e-02 -4.2e-03 -5.0e-02  0.01066 -1.1e-03  -0.1495  9.6e-03
[248,] -2.9e-01  3.9e-01 -1.8e-01  0.00000  0.0e+00   0.0000  0.0e+00
[249,] -4.5e-02  3.0e-02 -1.1e-01  0.00000  0.0e+00   0.0000  0.0e+00
[250,]  5.5e-02  2.7e-02 -3.0e-02 -0.07692 -3.7e-02  -0.2483 -3.9e-04
[251,]  9.3e-01 -3.5e-01  7.9e-01  0.01770 -6.6e-03  -0.1166  9.2e-02
[252,] -1.7e+00  9.6e-01  1.3e+00  0.00000  0.0e+00   0.0000  0.0e+00
[253,] -5.3e-01  1.8e-01 -5.9e-01  0.00000  0.0e+00   0.0000  0.0e+00
[254,] -1.4e+00 -1.3e-01 -3.5e-01  0.00000  0.0e+00   0.0000  0.0e+00
[255,] -1.5e+00 -2.4e+00 -2.4e+00  0.00000  0.0e+00   0.0000  0.0e+00
[256,]  2.2e-02 -2.0e-03 -3.2e-02  0.00985 -8.7e-04  -0.1509  5.9e-03
[257,]  6.1e-02  6.6e-02 -3.1e-03 -0.28027 -3.0e-01  -0.1900 -1.5e-02
[258,]  4.6e-03  2.9e-03 -2.4e-03  0.72024  4.5e-01   1.7840  1.5e-02
[259,]  2.5e-01 -2.9e-02 -5.0e-02  0.00586 -6.7e-04  -0.1335  2.8e-02
[260,]  9.1e-01 -1.4e+00 -5.7e-01 -0.31071  4.8e-01  -0.3516 -5.3e-01
[261,]  4.7e-01 -2.4e-01 -3.9e-01 -0.86180  4.5e-01   2.5126 -8.3e-01
[262,]  8.2e-01 -4.0e-01  4.7e-01  0.03644 -1.8e-02  -0.1386  1.4e-01
[263,]  1.4e-03  6.4e-05 -1.5e-03  1.12150  5.3e-02   5.3960  6.1e-03
[264,]  5.4e-01  7.0e-01  7.9e-01 -0.44369 -5.8e-01   0.0891 -4.3e-01
[265,]  2.6e-04  6.1e-04 -3.1e-04 -1.00851 -2.3e+00   4.2078 -2.8e-04
[266,]  8.9e-03  1.4e-02  9.0e-04  0.21931  3.4e-01  -0.2610  1.3e-02
[267,]  1.4e+00 -1.8e-01  7.3e-01 -1.27882  1.7e-01   5.7130 -4.2e+00
[268,] -1.8e-01  3.1e-01 -1.0e-01  0.00000  0.0e+00   0.0000  0.0e+00
[269,]  3.0e-01 -1.2e-01 -9.1e-02  0.04051 -1.6e-02  -0.1702  7.4e-02
[270,]  2.9e-01  2.6e-02  2.3e-02 -0.01816 -1.6e-03  -0.1487  1.0e-02
[271,]  4.0e-01  3.4e-01  3.9e-01 -0.20828 -1.8e-01  -0.3381 -1.1e-01
[272,]  1.6e-03  1.6e-03 -2.4e-03 -0.22445 -2.2e-01  -0.2591 -8.6e-05
[273,]  2.2e-02  1.5e-02 -1.7e-02 -0.12713 -8.7e-02  -0.2924 -7.7e-04
[274,] -4.0e-01  5.6e-01 -1.3e-01  0.00000  0.0e+00   0.0000  0.0e+00
[275,]  3.7e-02  3.1e-02 -1.6e-02 -0.18287 -1.6e-01  -0.2945 -3.8e-03
[276,] -3.6e-01  1.6e-01 -4.9e-01  0.00000  0.0e+00   0.0000  0.0e+00
[277,]  5.2e-01  9.1e-02  3.5e-01 -0.03572 -6.2e-03  -0.1834 -8.2e-03
[278,]  2.9e-01  2.2e-02  2.1e-02 -0.01644 -1.2e-03  -0.1461  1.1e-02
[279,]  5.6e-03  2.4e-03 -8.5e-03 -0.06330 -2.7e-02  -0.2287  3.5e-04
[280,] -1.5e+00 -3.8e-02 -4.0e-02  0.00000  0.0e+00   0.0000  0.0e+00
[281,]  1.2e+00 -2.0e+00 -3.8e-01 -0.27789  4.6e-01  -0.4641 -6.6e-01
[282,]  9.0e-02  6.6e-02 -9.2e-03 -0.14690 -1.1e-01  -0.3045 -8.8e-03
[283,]  1.8e-01  6.9e-02 -2.1e-01 -1.46721 -5.7e-01   9.6016 -5.5e-01
[284,]  6.4e-01 -1.7e-01  3.2e-01  0.01266 -3.4e-03  -0.1219  6.2e-02
[285,]  1.5e-03  1.7e-04 -1.5e-03  1.07089  1.3e-01   4.8484  6.4e-03
[286,]  1.9e-02  2.6e-03 -4.4e-03  1.05671  1.4e-01   4.7170  7.5e-02
[287,] -1.4e+00 -3.1e-01 -5.3e-01  0.00000  0.0e+00   0.0000  0.0e+00
[288,]  3.5e-04  5.7e-04 -2.7e-04  0.18435  3.0e-01  -0.2882  5.8e-04
[289,] -9.3e-01  2.0e-01 -5.4e-01  0.00000  0.0e+00   0.0000  0.0e+00
[290,]  1.8e-02  3.0e-03 -2.4e-02 -0.02147 -3.6e-03  -0.1632  2.3e-03
[291,]  2.9e-06  3.4e-06 -8.2e-06 -0.31630 -3.7e-01  -0.1035 -4.0e-08
[292,]  1.7e-01  1.7e-01  7.7e-02 -0.27742 -2.9e-01  -0.2176 -5.4e-02
[293,]  9.1e-02  1.0e-01  7.7e-02  0.39970  4.6e-01   0.1675  1.6e-01
[294,] -1.3e+00  7.5e-01  3.7e-01  0.00000  0.0e+00   0.0000  0.0e+00
[295,]  7.2e-02  1.4e-01  3.6e-02 -0.81910 -1.6e+00   2.4654 -9.6e-02
[296,]  1.0e-03  6.8e-05 -1.2e-03  1.10759  7.4e-02   5.2424  4.6e-03
[297,]  2.4e-03  4.5e-03 -3.0e-04  0.11197  2.1e-01  -0.2763  2.6e-03
[298,]  5.0e-02 -6.7e-02 -9.7e-02  0.40304 -5.4e-01   0.1626  9.1e-02
[299,] -7.0e-01 -1.5e-02 -8.3e-01  0.00000  0.0e+00   0.0000  0.0e+00
[300,] -1.1e+00 -1.3e+00 -2.0e+00  0.00000  0.0e+00   0.0000  0.0e+00
> # numeric gradients
> gradStartNum <- numericGradient( intLogLik, t0 = start )
> colnames( gradStartNum ) <- names( start )
> all.equal( as.data.frame( gradStart ), as.data.frame( gradStartNum ) )
[1] "Component \"betaS0\": Mean relative difference: 1.5e-08" 
[2] "Component \"betaS1\": Mean relative difference: 3.7e-08" 
[3] "Component \"betaO0\": Mean relative difference: 5e-08"   
[4] "Component \"betaO2\": Mean relative difference: 4.4e-08" 
[5] "Component \"atanRho\": Mean relative difference: 2.2e-08"
> library( "miscTools" )
> for( i in 1:ncol( gradStart ) ) {
+    compPlot( gradStart[ , i ], gradStartNum[ , i ], main = names( start )[i],
+       col = ifelse( !YS, "black",
+          ifelse( YO == 1, "blue",
+             ifelse( YO == 2, "blueviolet",
+                ifelse( YO == 3, "red", "green" ) ) ) ) )
+ }
> 
> # log-likelihood values and their gradients at estimated parameters
> logLikEst <- intLogLik( coef( res ) )
> print( c( logLikEst ) )
  [1] -0.4940 -1.7938 -0.7937 -1.9606 -0.4475 -0.7364 -0.4266 -0.3620 -0.1071
 [10] -0.0194 -1.1667 -0.8875 -1.4490 -0.4301 -2.2755 -0.7944 -0.4890 -1.4182
 [19] -2.0894 -1.7354 -0.4479 -0.2398 -0.5135 -0.3333 -0.5600 -0.0653 -0.5157
 [28] -0.8848 -0.0338 -0.9467 -1.8125 -0.4113 -0.4949 -1.3880 -1.2285 -0.4562
 [37] -0.4380 -2.0824 -0.4073 -1.4780 -1.5417 -0.3938 -0.0084 -0.5482 -3.0646
 [46] -0.5109 -2.2149 -2.1553 -0.4724 -2.0838 -0.6325 -0.3975 -0.4620 -0.6256
 [55] -0.4224 -0.8227 -0.1603 -1.3495 -0.4014 -0.0173 -2.3340 -0.4565 -0.8571
 [64] -0.0980 -0.1444 -1.5390 -1.7346 -0.4096 -0.7816 -0.5907 -0.0047 -0.8429
 [73] -2.8238 -1.8794 -1.3771 -0.5224 -0.4199 -0.4315 -0.5303 -0.3977 -0.5818
 [82] -2.5114 -0.8035 -0.4512 -2.2196 -0.3843 -0.6244 -1.4260 -0.5056 -0.6085
 [91] -1.0817 -0.4368 -0.7552 -1.5628 -0.6049 -0.0648 -0.5412 -0.8531 -0.4058
[100] -0.8194 -2.0351 -1.5497 -0.4526 -2.1418 -0.2379 -6.8100 -0.6924 -0.0560
[109] -0.4924 -0.5637 -0.5411 -1.3648 -0.0806 -2.1272 -2.3903 -0.4119 -1.7072
[118] -0.5522 -0.3549 -0.7081 -0.1238 -0.4799 -0.8345 -0.2028 -0.6709 -0.5938
[127] -0.0310 -0.5566 -0.0204 -1.7944 -0.8484 -1.7388 -1.8546 -0.4328 -0.1649
[136] -0.5434 -0.0933 -1.5222 -0.6447 -0.0228 -0.4588 -0.9682 -0.0864 -0.5291
[145] -0.9260 -0.9189 -0.1740 -0.8566 -0.5723 -0.5580 -0.6194 -1.4731 -0.6835
[154] -2.0846 -1.3790 -1.6640 -0.7747 -0.5034 -2.9197 -2.1066 -0.7712 -0.8373
[163] -2.0832 -0.2548 -0.4261 -0.4902 -0.7768 -0.0453 -0.5215 -1.9626 -0.0394
[172] -2.5294 -0.4004 -0.5622 -1.2228 -0.4985 -0.1259 -2.2513 -0.6293 -1.5955
[181] -3.0446 -0.9524 -0.1550 -0.6846 -0.5712 -0.5391 -1.6616 -0.4334 -0.4330
[190] -0.5677 -0.5017 -0.1365 -1.7311 -0.5101 -0.7147 -0.8266 -0.5467 -0.4006
[199] -2.5685 -0.2120 -0.9147 -0.5901 -0.3229 -1.5466 -0.4113 -2.2573 -0.5145
[208] -0.4223 -0.7068 -1.8473 -0.5154 -1.6455 -1.9004 -2.4265 -0.6663 -0.7416
[217] -1.4514 -2.5241 -0.6292 -1.1451 -0.2319 -0.4922 -0.5398 -0.4824 -1.9532
[226] -0.8647 -0.1038 -0.9926 -0.6033 -0.7024 -0.6354 -1.8290 -0.4071 -0.7791
[235] -0.0191 -0.0978 -0.2797 -0.6264 -0.4319 -1.9081 -0.7352 -1.7667 -0.7295
[244] -0.5620 -0.4781 -0.8520 -0.4031 -0.1324 -0.0027 -0.4444 -1.5254 -2.6000
[253] -0.2459 -1.4820 -1.0684 -0.3990 -0.5527 -1.3011 -0.5274 -1.5563 -1.6122
[262] -1.2770 -1.7045 -1.1434 -0.9587 -0.8025 -2.7112 -0.0733 -0.5620 -0.5798
[271] -0.8641 -0.5055 -0.4597 -0.2459 -0.4929 -0.1197 -0.9075 -0.5802 -0.4236
[280] -1.7990 -2.0007 -0.5011 -2.2151 -1.0120 -1.6514 -1.6688 -1.4255 -0.7569
[289] -0.7096 -0.4053 -0.5521 -0.6234 -1.0914 -1.5400 -0.8466 -1.6893 -0.6621
[298] -0.5610 -0.3604 -0.5449
> gradEst <- gradStart <- attr( logLikEst, "gradient" )
> colnames( gradEst ) <- names( start )
> print( gradEst )
         betaS0   betaS1   betaS2   betaO0   betaO2 logSigma  atanRho
  [1,]  1.5e-01 -8.6e-02 -1.1e-01  2.8e-02 -1.6e-02  -0.6889  8.2e-02
  [2,]  1.8e-01 -4.2e-02 -1.4e-01 -2.9e-01  6.7e-02   1.3509 -2.2e-01
  [3,]  1.0e-04  1.6e-04 -9.6e-05  1.7e-01  2.7e-01   0.1053  2.0e-04
  [4,]  5.5e-02  3.9e-03 -5.8e-02 -3.1e-01 -2.2e-02   1.6878 -6.6e-02
  [5,]  1.0e-01  1.3e-02 -4.5e-02 -2.0e-02 -2.6e-03  -0.7087  3.1e-02
  [6,]  4.8e-02  8.3e-02  1.6e-02 -1.4e-01 -2.3e-01  -0.2750 -1.2e-02
  [7,]  9.9e-05  4.5e-05 -2.0e-04 -4.1e-02 -1.9e-02  -0.6800  7.3e-05
  [8,] -5.0e-01  6.4e-01 -1.1e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
  [9,] -2.0e-01  1.4e-01 -2.4e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
 [10,] -4.8e-02  2.1e-02 -9.7e-02  0.0e+00  0.0e+00   0.0000  0.0e+00
 [11,] -1.1e+00 -1.4e+00 -1.5e+00  0.0e+00  0.0e+00   0.0000  0.0e+00
 [12,]  6.3e-01  2.3e-01  4.7e-01 -5.9e-02 -2.1e-02  -0.6792 -6.8e-02
 [13,]  8.8e-05  3.5e-05 -1.5e-04  2.6e-01  1.0e-01   0.9459  2.2e-04
 [14,]  7.0e-02  7.7e-03 -4.2e-02 -1.8e-02 -2.0e-03  -0.7109  2.5e-02
 [15,]  1.6e-01 -8.8e-02 -5.6e-02  3.3e-01 -1.8e-01   2.0347  3.5e-01
 [16,]  1.1e-01  2.0e-01  7.8e-02 -1.4e-01 -2.6e-01  -0.2310 -4.2e-02
 [17,]  1.2e-01  6.2e-02 -1.3e-02 -4.8e-02 -2.4e-02  -0.6678  1.6e-02
 [18,] -1.3e+00  2.5e+00  1.6e+00  0.0e+00  0.0e+00   0.0000  0.0e+00
 [19,]  9.4e-01  6.6e-01  1.6e+00  1.9e-01  1.4e-01   0.5605  1.2e+00
 [20,]  1.3e+00 -6.0e-01  1.2e+00 -2.4e-02  1.1e-02  -0.7342  1.2e-02
 [21,] -5.9e-01  6.3e-01 -1.4e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
 [22,] -3.7e-01  8.1e-02 -4.5e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
 [23,]  7.4e-02 -7.6e-02 -9.9e-02  6.6e-02 -6.8e-02  -0.6054  6.1e-02
 [24,] -4.7e-01  3.4e-01 -3.1e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
 [25,]  2.5e-01 -1.5e-01 -1.3e-01  2.9e-02 -1.8e-02  -0.6814  1.2e-01
 [26,] -1.3e-01  2.2e-01 -9.1e-02  0.0e+00  0.0e+00   0.0000  0.0e+00
 [27,]  8.1e-02  6.7e-02 -4.9e-03 -7.2e-02 -6.0e-02  -0.6012  3.9e-03
 [28,]  6.4e-01  9.8e-02  4.0e-01 -4.4e-02 -6.7e-03  -0.7023 -1.9e-02
 [29,] -7.7e-02  8.7e-02 -1.0e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
 [30,]  1.6e-02  2.0e-02  1.2e-04  1.9e-01  2.4e-01   0.2734  2.7e-02
 [31,]  5.4e-01  2.3e-01  5.5e-01  2.3e-01  9.8e-02   0.8353  8.2e-01
 [32,]  2.8e-02 -8.3e-03 -3.4e-02  1.4e-02 -4.1e-03  -0.7129  1.8e-02
 [33,]  9.3e-03  8.4e-03 -6.7e-03 -7.3e-02 -6.5e-02  -0.5916  2.2e-03
 [34,]  9.8e-01  8.6e-01  1.5e+00 -1.1e-01 -9.8e-02  -0.5654 -4.4e-01
 [35,]  1.1e-01  8.7e-02  4.0e-02  2.2e-01  1.8e-01   0.5646  1.8e-01
 [36,]  3.4e-05  2.3e-05 -7.0e-05 -5.7e-02 -3.9e-02  -0.6404  2.4e-05
 [37,]  1.8e-03  9.8e-04 -2.4e-03 -4.7e-02 -2.6e-02  -0.6654  9.0e-04
 [38,]  4.0e-01 -2.4e-02 -7.9e-02 -3.2e-01  2.0e-02   1.6005 -5.7e-01
 [39,] -5.5e-01  1.7e-01 -4.7e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
 [40,] -1.3e+00  5.0e-01  1.3e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
 [41,]  1.1e+00 -7.9e-01  7.1e-01 -1.9e-03  1.3e-03  -0.7067  1.6e-01
 [42,] -5.3e-01  1.1e-01 -5.1e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
 [43,] -2.3e-02  2.9e-02 -3.9e-02  0.0e+00  0.0e+00   0.0000  0.0e+00
 [44,]  1.8e-03  3.9e-03  1.0e-04  1.3e-01  2.9e-01  -0.1336  2.7e-03
 [45,]  1.1e-01  1.3e-01 -5.5e-03 -4.1e-01 -5.0e-01   3.4712 -1.9e-01
 [46,]  2.7e-02 -3.0e-02 -4.8e-02  7.5e-02 -8.4e-02  -0.5799  2.7e-02
 [47,]  7.8e-01 -3.1e-01  7.8e-02 -3.0e-01  1.2e-01   1.2704 -1.2e+00
 [48,]  8.3e-02 -3.9e-02 -4.7e-02  3.2e-01 -1.5e-01   1.9341  1.9e-01
 [49,]  4.8e-03  3.7e-03 -4.7e-03 -6.4e-02 -5.0e-02  -0.6202  1.6e-03
 [50,]  4.2e-01 -3.5e-02 -7.5e-02 -3.1e-01  2.6e-02   1.5785 -6.0e-01
 [51,] -7.5e-01 -1.9e-01 -7.6e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
 [52,]  5.8e-04 -1.7e-05 -1.2e-03 -4.6e-03  1.3e-04  -0.7189  4.9e-04
 [53,]  1.4e-01 -5.8e-03 -5.8e-02 -9.1e-03  3.9e-04  -0.7145  4.6e-02
 [54,]  5.0e-02  6.9e-02  5.9e-03 -1.1e-01 -1.5e-01  -0.4319 -5.6e-03
 [55,]  5.8e-02 -1.3e-02 -5.2e-02  7.5e-03 -1.7e-03  -0.7149  3.0e-02
 [56,]  2.6e-02  4.0e-02  8.8e-03  1.7e-01  2.6e-01   0.1258  4.0e-02
 [57,] -2.7e-01  4.2e-01 -1.1e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
 [58,]  5.6e-02  3.2e-02 -1.8e-03  2.4e-01  1.4e-01   0.7671  1.0e-01
 [59,]  2.7e-05  3.4e-06 -6.8e-05 -1.6e-02 -1.9e-03  -0.7135  2.6e-05
 [60,] -4.3e-02 -9.3e-03 -1.1e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
 [61,]  2.4e-01  9.1e-02 -4.9e-02 -3.5e-01 -1.3e-01   2.1580 -3.7e-01
 [62,] -5.9e-01  3.0e-01 -3.9e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
 [63,]  6.1e-01 -2.0e-01  1.7e-01 -7.1e-03  2.4e-03  -0.7125  1.1e-01
 [64,] -1.8e-01  1.9e-01 -1.9e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
 [65,] -2.5e-01  2.7e-01 -2.0e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
 [66,]  5.7e-02  1.7e-02 -1.2e-02  2.6e-01  7.9e-02   1.0319  1.1e-01
 [67,] -1.5e+00 -6.6e-01 -5.6e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
 [68,]  2.9e-02  1.6e-03 -2.8e-02 -1.2e-02 -6.2e-04  -0.7152  1.4e-02
 [69,]  4.3e-01  4.0e-01  3.7e-01 -9.3e-02 -8.5e-02  -0.5629 -1.1e-01
 [70,]  2.3e-04  4.6e-04 -1.0e-04  1.4e-01  2.9e-01  -0.0968  3.8e-04
 [71,] -1.4e-02  6.7e-03 -3.3e-02  0.0e+00  0.0e+00   0.0000  0.0e+00
 [72,]  4.3e-01 -9.8e-01 -7.0e-01 -1.5e-01  3.4e-01  -0.1339 -2.6e-01
 [73,]  5.2e-02  5.2e-02 -2.4e-02 -3.9e-01 -3.9e-01   3.0893 -8.2e-02
 [74,]  1.3e+00 -9.6e-01  1.1e+00 -9.6e-03  6.8e-03  -0.7195  1.1e-01
 [75,]  1.0e+00 -7.0e-01  5.2e-01  2.3e-03 -1.6e-03  -0.7007  1.8e-01
 [76,]  1.1e-02  1.1e-02 -6.5e-03 -8.3e-02 -8.5e-02  -0.5549  1.9e-03
 [77,]  4.9e-02 -1.4e-02 -4.9e-02  1.2e-02 -3.5e-03  -0.7128  2.8e-02
 [78,] -5.7e-01  7.0e-01 -8.2e-02  0.0e+00  0.0e+00   0.0000  0.0e+00
 [79,]  2.3e-01  4.2e-02 -3.3e-03 -2.9e-02 -5.3e-03  -0.7019  3.8e-02
 [80,]  2.1e-03 -2.9e-04 -3.7e-03  3.5e-03 -4.8e-04  -0.7190  1.6e-03
 [81,]  3.1e-01  1.8e-03  1.1e-02 -2.0e-02 -1.1e-04  -0.7108  5.7e-02
 [82,]  4.6e-01  1.8e-01  8.7e-02 -3.6e-01 -1.4e-01   2.2298 -7.7e-01
 [83,]  5.6e-01 -2.1e-01  9.7e-02 -2.2e-03  8.0e-04  -0.7095  1.2e-01
 [84,]  5.0e-03  3.2e-03 -5.2e-03 -5.4e-02 -3.5e-02  -0.6488  2.0e-03
 [85,]  4.6e-01 -1.0e-01  2.2e-01  2.8e-01 -6.3e-02   1.5211  8.5e-01
 [86,] -5.2e-01 -1.7e-01 -7.2e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
 [87,]  1.8e-01  1.9e-01  8.1e-02 -9.5e-02 -1.0e-01  -0.5213 -2.9e-02
 [88,]  1.5e-03  6.5e-04 -1.7e-03  2.5e-01  1.1e-01   0.9125  3.4e-03
 [89,]  2.0e-01 -6.5e-02 -8.6e-02  9.1e-03 -3.0e-03  -0.7085  7.9e-02
 [90,]  1.3e-01  1.5e-01  4.5e-02 -9.7e-02 -1.1e-01  -0.5070 -1.8e-02
 [91,]  2.5e-03  2.5e-03 -1.6e-03  2.1e-01  2.1e-01   0.4470  5.0e-03
 [92,]  3.2e-05  1.7e-05 -6.9e-05 -4.7e-02 -2.6e-02  -0.6665  2.4e-05
 [93,] -8.5e-01 -2.0e-01 -7.5e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
 [94,]  2.6e-01 -1.6e-01 -2.1e-01 -2.6e-01  1.7e-01   0.9406 -2.9e-01
 [95,]  5.0e-03  6.9e-03 -2.9e-03 -1.1e-01 -1.5e-01  -0.4394  5.1e-04
 [96,] -1.3e-01  7.9e-02 -2.0e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
 [97,]  2.4e-05  5.3e-05 -1.9e-05  1.3e-01  2.9e-01  -0.1389  4.2e-05
 [98,]  1.1e-01  1.6e-01  8.9e-02  1.7e-01  2.6e-01   0.1155  1.4e-01
 [99,]  2.0e-02 -4.7e-03 -2.5e-02  9.8e-03 -2.3e-03  -0.7158  1.3e-02
[100,]  4.9e-01 -5.0e-01 -1.7e-01  4.9e-02 -5.0e-02  -0.6171  2.5e-01
[101,]  8.1e-01 -5.7e-01 -5.9e-02 -2.8e-01  2.0e-01   0.9411 -1.1e+00
[102,]  2.2e-03  5.6e-04 -2.5e-03  2.7e-01  6.9e-02   1.0895  5.1e-03
[103,]  1.2e-01 -2.9e-02 -7.3e-02  6.7e-03 -1.7e-03  -0.7130  5.1e-02
[104,]  2.3e-01 -8.0e-02 -6.6e-03  3.1e-01 -1.1e-01   1.7365  4.8e-01
[105,] -3.7e-01  3.5e-01 -2.5e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[106,] -3.3e+00  1.5e-01  5.5e+00  0.0e+00  0.0e+00   0.0000  0.0e+00
[107,]  3.9e-01 -3.1e-01 -1.4e-01  3.5e-02 -2.7e-02  -0.6607  1.8e-01
[108,] -1.2e-01  1.9e-01 -8.8e-02  0.0e+00  0.0e+00   0.0000  0.0e+00
[109,]  1.7e-01 -6.6e-02 -9.3e-02  1.4e-02 -5.4e-03  -0.7054  7.6e-02
[110,]  1.4e-01  1.3e-01  3.2e-02 -8.0e-02 -7.4e-02  -0.5766 -7.9e-03
[111,] -6.7e-01  3.9e-01 -3.3e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[112,]  1.1e-01  7.0e-02  3.1e-02  2.4e-01  1.4e-01   0.7385  2.0e-01
[113,] -1.6e-01  2.5e-01 -1.0e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[114,]  4.4e-01 -2.5e-02 -5.4e-02 -3.2e-01  1.8e-02   1.6193 -6.5e-01
[115,]  1.3e-01  6.8e-02 -5.4e-02 -3.5e-01 -1.8e-01   2.3311 -2.0e-01
[116,]  4.6e-06  1.4e-06 -1.2e-05 -2.9e-02 -8.7e-03  -0.6996  4.5e-06
[117,]  1.1e-01  1.1e-02 -9.9e-03  2.7e-01  2.9e-02   1.2292  2.1e-01
[118,] -6.8e-01  4.4e-01 -2.9e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[119,] -4.9e-01  4.2e-01 -2.6e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[120,]  3.6e-01 -3.7e-01 -2.0e-01  5.4e-02 -5.5e-02  -0.6127  2.1e-01
[121,] -2.2e-01 -2.6e-02 -3.9e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[122,] -6.2e-01  5.8e-01 -1.8e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[123,]  5.8e-01 -2.8e-01  7.3e-02  5.7e-03 -2.8e-03  -0.7020  1.5e-01
[124,] -3.3e-01  8.3e-02 -4.1e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[125,]  1.2e-04  2.2e-04 -8.6e-05  1.5e-01  2.8e-01  -0.0220  2.2e-04
[126,]  2.9e-01 -1.9e-01 -1.3e-01  2.9e-02 -1.9e-02  -0.6784  1.3e-01
[127,] -7.1e-02 -1.7e-02 -1.7e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[128,]  2.8e-01  2.1e-02  3.1e-03 -2.4e-02 -1.8e-03  -0.7080  4.9e-02
[129,] -5.0e-02  4.8e-02 -8.2e-02  0.0e+00  0.0e+00   0.0000  0.0e+00
[130,]  1.7e-03 -1.2e-04 -2.4e-03  2.9e-01 -2.1e-02   1.4531  4.3e-03
[131,]  4.9e-03  7.0e-03 -9.3e-04  1.8e-01  2.6e-01   0.1643  8.3e-03
[132,] -1.5e+00 -6.6e-01 -5.6e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[133,]  2.6e-01  1.1e-02  7.9e-02  2.7e-01  1.1e-02   1.2671  4.9e-01
[134,]  6.1e-02 -2.6e-02 -6.2e-02  2.2e-02 -9.2e-03  -0.7035  3.7e-02
[135,] -2.8e-01  5.7e-01 -5.3e-03  0.0e+00  0.0e+00   0.0000  0.0e+00
[136,]  1.1e-03  1.3e-03 -1.2e-03 -9.0e-02 -1.0e-01  -0.5228  3.4e-04
[137,] -1.8e-01  2.6e-01 -1.3e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[138,]  4.4e-01  3.3e-01  4.8e-01  2.1e-01  1.6e-01   0.5892  6.3e-01
[139,]  3.5e-09  6.6e-09 -7.7e-09  1.5e-01  2.8e-01  -0.0472  8.2e-09
[140,] -5.5e-02  7.9e-02 -6.8e-02  0.0e+00  0.0e+00   0.0000  0.0e+00
[141,]  2.0e-03  1.4e-03 -2.4e-03 -5.8e-02 -4.1e-02  -0.6376  8.6e-04
[142,]  7.2e-01 -1.9e-01  3.3e-01 -1.7e-02  4.4e-03  -0.7173  7.7e-02
[143,] -1.7e-01  2.6e-01 -1.1e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[144,] -6.6e-01  1.0e+00  1.3e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[145,] -9.7e-01  1.6e+00  6.3e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[146,] -9.7e-01  5.1e-01 -1.6e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[147,] -2.9e-01  4.2e-01 -1.3e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[148,]  5.6e-01  3.8e-01  4.9e-01 -8.0e-02 -5.5e-02  -0.6199 -1.2e-01
[149,]  5.0e-09  1.1e-08 -1.0e-08  1.4e-01  2.9e-01  -0.1128  1.1e-08
[150,]  5.3e-02 -6.8e-02 -8.6e-02  8.6e-02 -1.1e-01  -0.5319  5.2e-02
[151,] -7.4e-01 -5.8e-01 -1.1e+00  0.0e+00  0.0e+00   0.0000  0.0e+00
[152,]  4.1e-01  3.1e-01  4.3e-01  2.1e-01  1.6e-01   0.5712  5.8e-01
[153,]  4.2e-01  1.4e-01  1.8e-01 -4.8e-02 -1.6e-02  -0.6839 -1.6e-03
[154,]  1.4e+00 -1.5e+00  1.0e+00  8.4e-03 -8.5e-03  -0.6826  2.5e-01
[155,]  1.0e+00 -1.2e-01  9.6e-01 -4.0e-02  4.8e-03  -0.7275 -6.5e-02
[156,]  2.6e-04 -7.3e-05 -6.9e-04 -2.8e-01  7.9e-02   1.2586 -1.8e-04
[157,] -8.6e-01 -4.9e-01 -9.6e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[158,]  1.9e-01 -7.1e-02 -9.3e-02  1.3e-02 -4.8e-03  -0.7058  8.1e-02
[159,]  2.6e-01  2.6e-01  6.0e-02 -4.0e-01 -3.9e-01   3.1185 -4.8e-01
[160,]  1.4e-01 -5.2e-02 -4.1e-02  3.1e-01 -1.2e-01   1.7960  3.0e-01
[161,]  3.9e-01  4.1e-01  3.4e-01 -1.0e-01 -1.1e-01  -0.5249 -1.1e-01
[162,]  5.1e-01 -5.3e-01 -1.8e-01  5.0e-02 -5.2e-02  -0.6125  2.6e-01
[163,]  1.4e+00 -1.8e+00  7.3e-01  2.8e-02 -3.5e-02  -0.6250  4.1e-01
[164,]  3.3e-06  1.1e-05 -1.3e-06  7.6e-02  2.5e-01  -0.2923  4.5e-06
[165,]  4.8e-02 -2.0e-02 -5.2e-02  2.2e-02 -9.2e-03  -0.7042  3.0e-02
[166,] -6.3e-01 -1.9e-01 -7.6e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[167,]  4.8e-01  3.1e-01  3.6e-01 -7.3e-02 -4.7e-02  -0.6324 -7.6e-02
[168,] -9.8e-02  4.7e-02 -1.7e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[169,]  1.7e-01  9.0e-02  1.1e-02 -5.2e-02 -2.7e-02  -0.6628  1.3e-02
[170,]  6.5e-01  2.4e-01  7.3e-01  2.3e-01  8.5e-02   0.8693  9.7e-01
[171,] -8.7e-02  1.9e-02 -1.7e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[172,] -1.9e+00 -1.2e-01  5.2e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[173,]  1.0e-02 -3.4e-04 -1.3e-02 -4.6e-03  1.6e-04  -0.7184  6.2e-03
[174,]  5.3e-04  1.1e-03 -1.3e-04  1.3e-01  2.9e-01  -0.1216  8.3e-04
[175,] -1.2e+00  8.7e-01  2.5e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[176,] -6.3e-01  6.9e-01 -9.6e-02  0.0e+00  0.0e+00   0.0000  0.0e+00
[177,] -2.2e-01 -8.5e-03 -3.8e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[178,]  2.1e-01  6.5e-02 -6.8e-02 -3.4e-01 -1.0e-01   2.0499 -3.1e-01
[179,]  3.4e-01  1.5e-01  1.3e-01 -5.3e-02 -2.3e-02  -0.6708 -1.9e-03
[180,] -1.4e+00  6.4e-01  3.2e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[181,]  5.3e-01 -5.6e-01  1.1e-02  3.5e-01 -3.7e-01   2.6671  1.2e+00
[182,]  4.2e-02  5.3e-02  1.3e-02  1.9e-01  2.4e-01   0.2662  6.6e-02
[183,] -2.6e-01  9.2e-02 -3.5e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[184,] -7.9e-01  6.8e-01 -9.6e-02  0.0e+00  0.0e+00   0.0000  0.0e+00
[185,] -7.0e-01  1.6e-01 -5.0e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[186,] -6.7e-01  1.3e-01 -5.2e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[187,] -1.4e+00 -1.6e+00 -1.3e+00  0.0e+00  0.0e+00   0.0000  0.0e+00
[188,]  7.8e-02  6.6e-03 -4.5e-02 -1.6e-02 -1.4e-03  -0.7119  2.8e-02
[189,] -5.7e-01 -4.3e-01 -9.3e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[190,]  2.7e-01 -1.4e-01 -1.0e-01  1.9e-02 -9.4e-03  -0.6958  1.1e-01
[191,]  1.9e-01  4.0e-02 -2.0e-02 -3.0e-02 -6.4e-03  -0.7002  3.5e-02
[192,] -2.4e-01  7.8e-02 -3.4e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[193,]  1.3e+00  1.2e-01  1.7e+00 -6.6e-02 -6.2e-03  -0.7239 -2.8e-01
[194,]  1.1e-01 -9.8e-02 -1.2e-01  5.5e-02 -4.9e-02  -0.6350  7.9e-02
[195,]  3.0e-01 -3.9e-01 -2.6e-01  7.8e-02 -1.0e-01  -0.5327  2.2e-01
[196,]  1.2e-05  2.4e-05 -1.6e-05 -1.6e-01 -3.1e-01  -0.1250  2.6e-06
[197,]  2.0e-01  1.2e-01  3.6e-02 -5.9e-02 -3.5e-02  -0.6472  4.1e-03
[198,] -5.4e-01  6.8e-01 -8.9e-02  0.0e+00  0.0e+00   0.0000  0.0e+00
[199,]  1.2e+00 -7.1e-01  4.2e-01 -3.0e-01  1.9e-01   1.1013 -1.8e+00
[200,] -3.4e-01  4.0e-01 -1.9e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[201,]  3.7e-04  8.1e-04 -2.2e-04 -1.7e-01 -3.8e-01   0.0026 -2.0e-05
[202,]  9.6e-04  1.3e-03 -9.5e-04 -1.0e-01 -1.4e-01  -0.4586  2.3e-04
[203,] -4.6e-01  1.2e-01 -4.7e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[204,]  3.2e-01  1.8e-01  2.4e-01  2.3e-01  1.3e-01   0.7651  5.1e-01
[205,]  1.3e-02 -5.3e-03 -1.9e-02  2.3e-02 -9.6e-03  -0.7054  9.6e-03
[206,]  2.4e-01 -1.1e-01 -2.3e-02  3.2e-01 -1.5e-01   1.9030  5.1e-01
[207,]  1.4e-01 -1.1e-01 -1.3e-01  4.5e-02 -3.6e-02  -0.6557  9.2e-02
[208,]  2.3e-03 -1.3e-03 -4.7e-03  3.7e-02 -2.2e-02  -0.6865  2.2e-03
[209,]  3.2e-02  5.3e-02  4.8e-03 -1.3e-01 -2.2e-01  -0.3086 -5.7e-03
[210,]  1.4e-01 -7.6e-03 -1.1e-02  2.9e-01 -1.5e-02   1.4011  2.8e-01
[211,]  2.1e-01  2.6e-02 -2.1e-02 -2.4e-02 -2.9e-03  -0.7065  4.3e-02
[212,]  1.7e-01  4.2e-02  3.7e-02  2.6e-01  6.3e-02   1.0712  3.2e-01
[213,] -1.6e+00 -1.9e+00 -1.4e+00  0.0e+00  0.0e+00   0.0000  0.0e+00
[214,]  4.1e-01 -2.1e-01  8.5e-02  3.1e-01 -1.6e-01   1.9067  8.3e-01
[215,]  3.2e-01 -3.2e-01 -2.0e-01  5.3e-02 -5.3e-02  -0.6184  1.9e-01
[216,]  2.0e-04  3.3e-04 -1.5e-04  1.6e-01  2.7e-01   0.0496  3.7e-04
[217,] -1.3e+00  5.8e-01  1.7e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[218,]  1.2e+00 -8.5e-01  3.6e-01 -3.0e-01  2.1e-01   0.9832 -1.7e+00
[219,]  2.0e-01 -2.5e-01 -2.1e-01  7.6e-02 -9.4e-02  -0.5516  1.5e-01
[220,]  7.5e-01 -9.7e-01 -1.4e-01  5.7e-02 -7.3e-02  -0.5656  3.9e-01
[221,] -3.6e-01  2.1e-01 -3.5e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[222,]  1.0e-01  6.3e-02 -1.1e-02 -5.6e-02 -3.5e-02  -0.6480  1.1e-02
[223,]  5.9e-03  6.6e-03 -4.2e-03 -8.9e-02 -9.9e-02  -0.5293  1.1e-03
[224,]  5.8e-02  4.1e-02 -1.6e-02 -6.1e-02 -4.3e-02  -0.6325  8.1e-03
[225,]  1.4e+00 -5.1e-01  1.6e+00 -3.7e-02  1.4e-02  -0.7470 -1.1e-01
[226,]  6.2e-01  3.7e-02  3.4e-01 -3.6e-02 -2.2e-03  -0.7090  9.2e-03
[227,] -1.9e-01  1.4e-01 -2.4e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[228,]  7.1e-01 -5.1e-01  9.8e-02  1.7e-02 -1.2e-02  -0.6817  2.1e-01
[229,]  2.1e-01  1.9e-01  8.7e-02 -8.1e-02 -7.1e-02  -0.5821 -2.3e-02
[230,]  3.6e-01 -3.7e-01 -2.0e-01  5.3e-02 -5.4e-02  -0.6145  2.1e-01
[231,]  2.5e-02  4.8e-02  1.5e-02  1.4e-01  2.8e-01  -0.0637  3.3e-02
[232,]  5.1e-02 -4.6e-03 -2.6e-02  2.9e-01 -2.6e-02   1.4640  1.1e-01
[233,]  3.6e-03  7.8e-04 -5.1e-03 -2.3e-02 -4.8e-03  -0.7071  2.2e-03
[234,] -8.6e-01  6.4e-01 -1.1e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[235,] -4.7e-02  2.7e-02 -9.2e-02  0.0e+00  0.0e+00   0.0000  0.0e+00
[236,] -1.8e-01  2.4e-01 -1.5e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[237,] -4.1e-01  7.6e-02 -4.8e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[238,]  3.4e-01  1.4e-01  1.2e-01 -5.1e-02 -2.1e-02  -0.6734  7.8e-04
[239,]  4.6e-02  1.5e-02 -2.8e-02 -3.2e-02 -1.0e-02  -0.6944  1.5e-02
[240,]  7.4e-01 -5.8e-01 -1.5e-01 -2.7e-01  2.1e-01   0.8603 -9.5e-01
[241,]  4.4e-01 -3.5e-01 -1.2e-01  3.3e-02 -2.6e-02  -0.6614  1.9e-01
[242,]  4.1e-01 -2.1e-01 -1.9e-01 -2.8e-01  1.4e-01   1.0932 -5.2e-01
[243,]  1.7e-01  2.5e-01  1.2e-01 -1.2e-01 -1.9e-01  -0.3681 -5.4e-02
[244,]  1.2e-01 -1.4e-01 -1.5e-01  7.2e-02 -8.2e-02  -0.5775  1.0e-01
[245,] -6.1e-01  1.1e-01 -5.3e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[246,]  1.3e-01  2.6e-01  1.2e-01 -1.5e-01 -2.9e-01  -0.1646 -6.1e-02
[247,]  1.8e-02 -1.8e-03 -2.2e-02  1.7e-05 -1.7e-06  -0.7185  1.1e-02
[248,] -2.3e-01  3.2e-01 -1.5e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[249,] -8.3e-03  5.5e-03 -2.0e-02  0.0e+00  0.0e+00   0.0000  0.0e+00
[250,]  4.0e-02  1.9e-02 -2.2e-02 -4.4e-02 -2.1e-02  -0.6738  1.1e-02
[251,]  1.1e+00 -4.3e-01  9.6e-01 -2.6e-02  9.6e-03  -0.7311  1.2e-02
[252,] -1.9e+00  1.1e+00  1.5e+00  0.0e+00  0.0e+00   0.0000  0.0e+00
[253,] -3.8e-01  1.3e-01 -4.2e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[254,] -1.3e+00 -1.2e-01 -3.3e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[255,] -1.1e+00 -1.7e+00 -1.8e+00  0.0e+00  0.0e+00   0.0000  0.0e+00
[256,]  6.9e-03 -6.1e-04 -1.0e-02 -4.4e-04  3.9e-05  -0.7190  4.6e-03
[257,]  5.4e-02  5.8e-02 -2.8e-03 -8.9e-02 -9.6e-02  -0.5345 -1.6e-04
[258,]  1.0e-02  6.6e-03 -5.5e-03  2.4e-01  1.5e-01   0.7331  2.1e-02
[259,]  2.4e-01 -2.7e-02 -4.7e-02 -8.0e-03  9.1e-04  -0.7137  6.7e-02
[260,]  8.0e-01 -1.2e+00 -5.0e-01 -2.2e-01  3.3e-01   0.2523 -8.1e-01
[261,]  2.3e-01 -1.2e-01 -1.9e-01 -2.7e-01  1.4e-01   1.0424 -2.6e-01
[262,]  9.6e-01 -4.7e-01  5.5e-01 -9.8e-03  4.8e-03  -0.7161  1.1e-01
[263,]  5.3e-03  2.5e-04 -5.8e-03  2.8e-01  1.3e-02   1.3154  1.3e-02
[264,]  7.1e-01  9.2e-01  1.0e+00 -1.3e-01 -1.7e-01  -0.4210 -3.7e-01
[265,]  1.0e-05  2.3e-05 -1.2e-05 -1.8e-01 -4.1e-01   0.0670  1.1e-06
[266,]  1.1e-02  1.7e-02  1.1e-03  1.7e-01  2.7e-01   0.1105  1.8e-02
[267,]  1.0e+00 -1.4e-01  5.4e-01 -3.4e-01  4.5e-02   1.6516 -1.7e+00
[268,] -1.5e-01  2.6e-01 -8.5e-02  0.0e+00  0.0e+00   0.0000  0.0e+00
[269,]  2.7e-01 -1.1e-01 -8.3e-02  1.1e-02 -4.1e-03  -0.7047  1.0e-01
[270,]  3.1e-01  2.7e-02  2.4e-02 -2.6e-02 -2.3e-03  -0.7070  4.7e-02
[271,]  5.4e-01  4.6e-01  5.2e-01 -9.1e-02 -7.7e-02  -0.5814 -1.4e-01
[272,]  3.2e-04  3.0e-04 -4.6e-04 -7.8e-02 -7.5e-02  -0.5742  1.4e-04
[273,]  1.2e-02  8.5e-03 -9.8e-03 -5.8e-02 -3.9e-02  -0.6403  3.8e-03
[274,] -3.8e-01  5.3e-01 -1.2e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[275,]  2.7e-02  2.3e-02 -1.2e-02 -7.0e-02 -6.0e-02  -0.6018  4.4e-03
[276,] -2.2e-01  9.6e-02 -3.0e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[277,]  6.6e-01  1.1e-01  4.4e-01 -4.6e-02 -8.1e-03  -0.7006 -3.0e-02
[278,]  3.1e-01  2.3e-02  2.2e-02 -2.5e-02 -1.8e-03  -0.7078  4.9e-02
[279,]  1.4e-03  5.8e-04 -2.0e-03 -3.8e-02 -1.6e-02  -0.6845  7.8e-04
[280,] -1.5e+00 -3.7e-02 -3.9e-02  0.0e+00  0.0e+00   0.0000  0.0e+00
[281,]  1.2e+00 -2.0e+00 -3.7e-01 -2.2e-01  3.7e-01   0.1792 -1.3e+00
[282,]  8.6e-02  6.3e-02 -8.8e-03 -6.4e-02 -4.7e-02  -0.6246  7.0e-03
[283,]  2.0e-02  7.7e-03 -2.4e-02 -3.4e-01 -1.3e-01   2.1037 -2.4e-02
[284,]  7.5e-01 -2.0e-01  3.8e-01 -1.8e-02  4.8e-03  -0.7183  7.2e-02
[285,]  5.4e-03  6.4e-04 -5.6e-03  2.8e-01  3.3e-02   1.2365  1.3e-02
[286,]  7.3e-02  9.8e-03 -1.7e-02  2.7e-01  3.7e-02   1.2053  1.5e-01
[287,] -1.3e+00 -2.9e-01 -4.9e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[288,]  1.7e-04  2.9e-04 -1.4e-04  1.7e-01  2.7e-01   0.0657  3.3e-04
[289,] -8.1e-01  1.8e-01 -4.7e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[290,]  6.2e-03  1.0e-03 -8.1e-03 -1.9e-02 -3.2e-03  -0.7104  3.5e-03
[291,]  2.5e-08  2.9e-08 -7.0e-08 -9.3e-02 -1.1e-01  -0.5105  2.1e-08
[292,]  1.9e-01  2.0e-01  8.8e-02 -9.2e-02 -9.7e-02  -0.5341 -3.0e-02
[293,]  1.8e-01  2.1e-01  1.5e-01  1.9e-01  2.2e-01   0.3300  2.6e-01
[294,] -1.4e+00  7.9e-01  3.9e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[295,]  4.6e-02  9.2e-02  2.3e-02 -1.6e-01 -3.2e-01  -0.1158 -1.6e-02
[296,]  3.9e-03  2.6e-04 -4.5e-03  2.8e-01  1.9e-02   1.2938  9.2e-03
[297,]  2.0e-03  3.7e-03 -2.5e-04  1.5e-01  2.8e-01  -0.0311  3.1e-03
[298,]  2.4e-02 -3.3e-02 -4.7e-02  9.2e-02 -1.2e-01  -0.5104  2.6e-02
[299,] -5.0e-01 -1.1e-02 -5.9e-01  0.0e+00  0.0e+00   0.0000  0.0e+00
[300,] -6.7e-01 -8.4e-01 -1.3e+00  0.0e+00  0.0e+00   0.0000  0.0e+00
> 
> 
> # tests with automatically generated starting values (ML estimation)
> resMl <- selection( yS ~ x1 + x2, yO ~ x1, data = dat, boundaries = bound, 
+    start = "ml", printLevel = 1 )
Tobit 2 model
0 invalid observations
         YS YSnumeric lower upper
1  (-Inf,5]         1  -Inf     5
2    (5,15]         2     5    15
3 (15, Inf]         3    15   Inf
YO observed: 209 times; not observed: 91 times:
Number of intervals:  3 
      YO
YS       1   2   3 <NA>
  0      0   0   0   91
  1     26 130  53    0
  <NA>   0   0   0    0
Boundaries:
[1] -Inf    5   15  Inf
Initial values:
(Intercept)          x1          x2 (Intercept)          x1    logSigma 
       0.98        0.97       -1.29       10.40        3.74        4.28 
    atanRho 
       0.23 
--------------
successive function values within tolerance limit 
20  iterations
estimate: 0.98 0.97 -1.3 10 2.7 1.6 0.28 
Function value: -275 
> print( resMl )

Call:
 selection(selection = yS ~ x1 + x2, outcome = yO ~ x1, data = dat,      start = "ml", boundaries = bound, printLevel = 1) 

Coefficients:
S:(Intercept)           S:x1           S:x2  O:(Intercept)           O:x1  
        0.982          0.967         -1.286         10.242          2.658  
     logSigma        atanRho  
        1.631          0.281  

> print( round( coef( resMl ), 2 ) )
S:(Intercept)           S:x1           S:x2  O:(Intercept)           O:x1  
         0.98           0.97          -1.29          10.24           2.66  
     logSigma        atanRho  
         1.63           0.28  
> print( round( coef( summary( resMl ) ), 2 ) )
            Estimate Std. error t value Pr(> t)
(Intercept)     0.98       0.11    9.05    0.00
x1              0.97       0.15    6.48    0.00
x2             -1.29       0.12  -10.64    0.00
(Intercept)    10.24       0.67   15.32    0.00
x1              2.66       0.59    4.49    0.00
logSigma        1.63       0.07   21.83    0.00
atanRho         0.28       0.31    0.92    0.36
> print( resMl$start )
(Intercept)          x1          x2 (Intercept)          x1    logSigma 
       0.98        0.97       -1.29       10.40        3.74        4.28 
    atanRho 
       0.23 
> print( summary( resMl ) )
--------------------------------------------
Tobit 2 model with interval outcome (sample selection model)
Maximum Likelihood estimation
BHHH maximisation, 20 iterations
Return code 2: successive function values within tolerance limit
Log-Likelihood: -275 
300 observations (91 censored and 209 observed)
7 free parameters (df = 293)
Probit selection equation:
            Estimate Std. error t value Pr(> t)    
(Intercept)    0.982      0.109    9.05 < 2e-16 ***
x1             0.967      0.149    6.48 8.9e-11 ***
x2            -1.286      0.121  -10.64 < 2e-16 ***
Outcome equation:
            Estimate Std. error t value Pr(> t)    
(Intercept)   10.242      0.668   15.32 < 2e-16 ***
x1             2.658      0.592    4.49 7.2e-06 ***
   Error terms:
         Estimate Std. error t value Pr(> t)    
logSigma   1.6307     0.0747   21.83  <2e-16 ***
atanRho    0.2812     0.3062    0.92    0.36    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
--------------------------------------------
> 
> resMl2 <- selection( yS ~ x1 + x2, yO ~ x1, data = dat, boundaries = bound )
> all.equal( resMl[ !names( resMl ) %in% c( "call", "control" ) ],
+    resMl2[ !names( resMl2 ) %in% c( "call", "control" ) ] )
[1] TRUE
> 
> 
> # tests with automatically generated starting values (2-step estimation)
> res2s <- selection( yS ~ x1 + x2, yO ~ x1, data = dat, boundaries = bound, 
+    start = "2step", printLevel = 1 )
Tobit 2 model
0 invalid observations
         YS YSnumeric lower upper
1  (-Inf,5]         1  -Inf     5
2    (5,15]         2     5    15
3 (15, Inf]         3    15   Inf
YO observed: 209 times; not observed: 91 times:
Number of intervals:  3 
      YO
YS       1   2   3 <NA>
  0      0   0   0   91
  1     26 130  53    0
  <NA>   0   0   0    0
Boundaries:
[1] -Inf    5   15  Inf
Initial values:
(Intercept)          x1          x2 (Intercept)          x1    logSigma 
       0.98        0.97       -1.28       10.35        3.76        4.28 
    atanRho 
       0.24 
--------------
successive function values within tolerance limit 
20  iterations
estimate: 0.98 0.97 -1.3 10 2.7 1.6 0.28 
Function value: -275 
> print( res2s )

Call:
 selection(selection = yS ~ x1 + x2, outcome = yO ~ x1, data = dat,      start = "2step", boundaries = bound, printLevel = 1) 

Coefficients:
S:(Intercept)           S:x1           S:x2  O:(Intercept)           O:x1  
        0.982          0.967         -1.286         10.242          2.658  
     logSigma        atanRho  
        1.631          0.281  

> print( round( coef( res2s ), 2 ) )
S:(Intercept)           S:x1           S:x2  O:(Intercept)           O:x1  
         0.98           0.97          -1.29          10.24           2.66  
     logSigma        atanRho  
         1.63           0.28  
> print( round( coef( summary( res2s ) ), 2 ) )
            Estimate Std. error t value Pr(> t)
(Intercept)     0.98       0.11    9.05    0.00
x1              0.97       0.15    6.48    0.00
x2             -1.29       0.12  -10.64    0.00
(Intercept)    10.24       0.67   15.32    0.00
x1              2.66       0.59    4.49    0.00
logSigma        1.63       0.07   21.83    0.00
atanRho         0.28       0.31    0.92    0.36
> print( res2s$start )
(Intercept)          x1          x2 (Intercept)          x1    logSigma 
       0.98        0.97       -1.28       10.35        3.76        4.28 
    atanRho 
       0.24 
> print( summary( res2s ) )
--------------------------------------------
Tobit 2 model with interval outcome (sample selection model)
Maximum Likelihood estimation
BHHH maximisation, 20 iterations
Return code 2: successive function values within tolerance limit
Log-Likelihood: -275 
300 observations (91 censored and 209 observed)
7 free parameters (df = 293)
Probit selection equation:
            Estimate Std. error t value Pr(> t)    
(Intercept)    0.982      0.109    9.05 < 2e-16 ***
x1             0.967      0.149    6.48 8.9e-11 ***
x2            -1.286      0.121  -10.64 < 2e-16 ***
Outcome equation:
            Estimate Std. error t value Pr(> t)    
(Intercept)   10.242      0.668   15.32 < 2e-16 ***
x1             2.658      0.592    4.49 7.2e-06 ***
   Error terms:
         Estimate Std. error t value Pr(> t)    
logSigma   1.6307     0.0747   21.83  <2e-16 ***
atanRho    0.2812     0.3062    0.92    0.36    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
--------------------------------------------
> 
> 
> # tests with incorrectly specified starting values
> try( selection( yS ~ x1 + x2, yO ~ x1, data = dat, boundaries = bound, 
+    start = "wrong" ) )
Error in tobit2Intfit(YS, XS, YO, XO, boundaries = boundaries, start = start,  : 
  argument 'start' must be "ml", "2step", or a numeric vector
> try( selection( yS ~ x1 + x2, yO ~ x1, data = dat, boundaries = bound, 
+    start = rep( 1, 11 ) ) )
Error in tobit2Intfit(YS, XS, YO, XO, boundaries = boundaries, start = start,  : 
  The vector of starting values has an incorrect length. Number of parameters: 7. Length of provided vector: 11
> 
> # tests with incorrectly specified boundaries
> try( selection( yS ~ x1 + x2, yO ~ x1, data = dat, boundaries = 1:6, 
+    start = start ) )
Error in tobit2Intfit(YS, XS, YO, XO, boundaries = boundaries, start = start,  : 
  argument 'boundaries' does not have (number of intervals + 1) 
      elements [4], or at least one interval is empty
> try( selection( yS ~ x1 + x2, yO ~ x1, data = dat, boundaries = 4:1, 
+    start = start ) )
Error in tobit2Intfit(YS, XS, YO, XO, boundaries = boundaries, start = start,  : 
  the boundaries in the vector definded by argument 'boundaries' must be in ascending order
> 
> ### tests with Mroz data
> data("Mroz87")
> 
> ## tests with different boundaries
> Mroz87$wage_5interval <- cut(Mroz87$wage, br=c(0,2.0,4.0,6.0,8.0,Inf),
+    labels=c(1,2,3,4,5))
> bound6 <- c(0,2.0,4.0,6.0,8.0,Inf)
> Mroz87$wage_6interval <- cut(Mroz87$wage, br=c(0,2.0,4.0,6.0,8.0,10.0,Inf),
+    labels=c(1,2,3,4,5,6))
> bound7 <- c(0,2.0,4.0,6.0,8.0,10.0,Inf)
> Mroz87$wage_7interval <- cut(Mroz87$wage, br=c(0,2.0,4.0,6.0,8.0,10.0,12.0,Inf),
+    labels=c(1,2,3,4,5,6,7))
> bound8 <- c(0,2.0,4.0,6.0,8.0,10.0,12.0,Inf)
> 
> Wage5 <- selection( lfp ~ huswage + kids5 + mtr + fatheduc + educ + city, 
+    wage_5interval ~ educ + city, data = Mroz87, boundaries = bound6 )
> print(summary(Wage5))
--------------------------------------------
Tobit 2 model with interval outcome (sample selection model)
Maximum Likelihood estimation
BHHH maximisation, 15 iterations
Return code 2: successive function values within tolerance limit
Log-Likelihood: -1072 
753 observations (325 censored and 428 observed)
12 free parameters (df = 741)
Probit selection equation:
            Estimate Std. error t value Pr(> t)    
(Intercept)   4.2008     0.8044    5.22 1.8e-07 ***
huswage      -0.1225     0.0167   -7.32 2.6e-13 ***
kids5        -0.4990     0.0934   -5.34 9.2e-08 ***
mtr          -6.2864     0.8761   -7.18 7.2e-13 ***
fatheduc     -0.0136     0.0143   -0.95    0.34    
educ          0.1159     0.0250    4.64 3.4e-06 ***
city         -0.0244     0.1084   -0.23    0.82    
Outcome equation:
            Estimate Std. error t value Pr(> t)    
(Intercept)  -0.0973     0.7959   -0.12    0.90    
educ          0.3571     0.0553    6.45 1.1e-10 ***
city          0.2899     0.2595    1.12    0.26    
   Error terms:
         Estimate Std. error t value Pr(> t)    
logSigma   0.7915     0.0596   13.29 < 2e-16 ***
atanRho   -0.4810     0.0896   -5.37 7.8e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
--------------------------------------------
> 
> Wage6 <- selection( lfp ~ huswage + kids5 + mtr + fatheduc + educ + city, 
+    wage_6interval ~ educ + city, data = Mroz87, boundaries = bound7 )
> print(summary(Wage6))
--------------------------------------------
Tobit 2 model with interval outcome (sample selection model)
Maximum Likelihood estimation
BHHH maximisation, 17 iterations
Return code 2: successive function values within tolerance limit
Log-Likelihood: -1111 
753 observations (325 censored and 428 observed)
12 free parameters (df = 741)
Probit selection equation:
            Estimate Std. error t value Pr(> t)    
(Intercept)   4.0324     0.8171    4.93 8.0e-07 ***
huswage      -0.1208     0.0169   -7.16 8.3e-13 ***
kids5        -0.5175     0.0943   -5.49 4.0e-08 ***
mtr          -6.0907     0.8880   -6.86 6.9e-12 ***
fatheduc     -0.0118     0.0145   -0.81    0.42    
educ          0.1172     0.0252    4.65 3.3e-06 ***
city         -0.0288     0.1082   -0.27    0.79    
Outcome equation:
            Estimate Std. error t value Pr(> t)    
(Intercept)  -0.4926     0.8516   -0.58    0.56    
educ          0.3854     0.0588    6.56 5.5e-11 ***
city          0.3274     0.2836    1.15    0.25    
   Error terms:
         Estimate Std. error t value Pr(> t)    
logSigma   0.8425     0.0532   15.84 < 2e-16 ***
atanRho   -0.4172     0.1048   -3.98 6.8e-05 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
--------------------------------------------
> 
> Wage7 <- selection( lfp ~ huswage + kids5 + mtr + fatheduc + educ + city, 
+    wage_7interval ~ educ + city, data = Mroz87, boundaries = bound8 )
Warning message:
In log(pmvnDiff[YS == 1]) : NaNs produced
> print(summary(Wage7))
--------------------------------------------
Tobit 2 model with interval outcome (sample selection model)
Maximum Likelihood estimation
BHHH maximisation, 23 iterations
Return code 2: successive function values within tolerance limit
Log-Likelihood: -1140 
753 observations (325 censored and 428 observed)
12 free parameters (df = 741)
Probit selection equation:
            Estimate Std. error t value Pr(> t)    
(Intercept)   3.8850     0.8268    4.70 2.6e-06 ***
huswage      -0.1189     0.0171   -6.94 4.0e-12 ***
kids5        -0.5285     0.0958   -5.52 3.4e-08 ***
mtr          -5.9175     0.8973   -6.59 4.3e-11 ***
fatheduc     -0.0107     0.0147   -0.73    0.47    
educ          0.1182     0.0254    4.66 3.2e-06 ***
city         -0.0328     0.1081   -0.30    0.76    
Outcome equation:
            Estimate Std. error t value Pr(> t)    
(Intercept)  -0.8186     0.8902   -0.92    0.36    
educ          0.4071     0.0615    6.62 3.6e-11 ***
city          0.3353     0.3054    1.10    0.27    
   Error terms:
         Estimate Std. error t value Pr(> t)    
logSigma   0.8880     0.0477   18.62  <2e-16 ***
atanRho   -0.3470     0.1205   -2.88   0.004 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
--------------------------------------------
> 
> ## tests with different specifications
> # low number of variables
> summary(selection( lfp ~ huswage + educ, 
+    wage_5interval ~ huswage, data = Mroz87, boundaries = bound6))
--------------------------------------------
Tobit 2 model with interval outcome (sample selection model)
Maximum Likelihood estimation
BHHH maximisation, 19 iterations
Return code 2: successive function values within tolerance limit
Log-Likelihood: -1134 
753 observations (325 censored and 428 observed)
7 free parameters (df = 746)
Probit selection equation:
            Estimate Std. error t value Pr(> t)    
(Intercept)  -1.7187     0.2581   -6.66 2.8e-11 ***
huswage      -0.0475     0.0125   -3.79 0.00015 ***
educ          0.1819     0.0215    8.48 < 2e-16 ***
Outcome equation:
            Estimate Std. error t value Pr(> t)    
(Intercept)   4.1024     0.3317   12.37 < 2e-16 ***
huswage       0.1497     0.0317    4.72 2.3e-06 ***
   Error terms:
         Estimate Std. error t value Pr(> t)    
logSigma   0.9785     0.0796    12.3  <2e-16 ***
atanRho   -0.6376     0.0553   -11.5  <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
--------------------------------------------
> 
> # adding wife's marginal tax rate (mtr)
> spec1 <- selection( lfp ~ huswage + educ + mtr, 
+    wage_5interval ~ educ, data = Mroz87, boundaries = bound6)
> print(summary(spec1))
--------------------------------------------
Tobit 2 model with interval outcome (sample selection model)
Maximum Likelihood estimation
BHHH maximisation, 13 iterations
Return code 2: successive function values within tolerance limit
Log-Likelihood: -1089 
753 observations (325 censored and 428 observed)
8 free parameters (df = 745)
Probit selection equation:
            Estimate Std. error t value Pr(> t)    
(Intercept)   4.8204     0.7656    6.30 3.1e-10 ***
huswage      -0.1283     0.0159   -8.07 7.0e-16 ***
educ          0.0830     0.0231    3.60 0.00032 ***
mtr          -6.9210     0.8323   -8.32 < 2e-16 ***
Outcome equation:
            Estimate Std. error t value Pr(> t)    
(Intercept)   0.1655     0.8390    0.20    0.84    
educ          0.3598     0.0547    6.58 4.8e-11 ***
   Error terms:
         Estimate Std. error t value Pr(> t)    
logSigma   0.8135     0.0685   11.88 < 2e-16 ***
atanRho   -0.5197     0.0919   -5.66 1.5e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
--------------------------------------------
> 
> # adding continuous variables only
> spec2 <- selection( lfp ~ huswage + educ + mtr + fatheduc, 
+    wage_5interval ~ educ + exper, data = Mroz87, boundaries = bound6)
> print(summary(spec2))
--------------------------------------------
Tobit 2 model with interval outcome (sample selection model)
Maximum Likelihood estimation
BHHH maximisation, 14 iterations
Return code 2: successive function values within tolerance limit
Log-Likelihood: -1085 
753 observations (325 censored and 428 observed)
10 free parameters (df = 743)
Probit selection equation:
            Estimate Std. error t value Pr(> t)    
(Intercept)   4.7585     0.7735    6.15 7.6e-10 ***
huswage      -0.1266     0.0161   -7.86 3.9e-15 ***
educ          0.0944     0.0241    3.93 8.7e-05 ***
mtr          -6.8331     0.8422   -8.11 4.9e-16 ***
fatheduc     -0.0170     0.0140   -1.21    0.23    
Outcome equation:
            Estimate Std. error t value Pr(> t)    
(Intercept)  -0.3889     0.8854   -0.44   0.660    
educ          0.3660     0.0537    6.81 9.5e-12 ***
exper         0.0316     0.0135    2.35   0.019 *  
   Error terms:
         Estimate Std. error t value Pr(> t)    
logSigma   0.7901     0.0679   11.64 < 2e-16 ***
atanRho   -0.4943     0.1077   -4.59 4.4e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
--------------------------------------------
> 
> # adding dummy variables (city, huscoll)
> spec3 <- selection( lfp ~ huswage + mtr + fatheduc + educ + city + huscoll, 
+    wage_5interval ~ educ + exper + city, data = Mroz87, boundaries = bound6)
> print(summary(spec3))
--------------------------------------------
Tobit 2 model with interval outcome (sample selection model)
Maximum Likelihood estimation
BHHH maximisation, 14 iterations
Return code 2: successive function values within tolerance limit
Log-Likelihood: -1082 
753 observations (325 censored and 428 observed)
13 free parameters (df = 740)
Probit selection equation:
             Estimate Std. error t value Pr(> t)    
(Intercept)    4.4657     0.7818    5.71 1.1e-08 ***
huswage       -0.1229     0.0164   -7.50 6.5e-14 ***
mtr           -7.0249     0.8528   -8.24 < 2e-16 ***
fatheduc      -0.0152     0.0142   -1.07   0.284    
educ           0.1134     0.0259    4.38 1.2e-05 ***
city           0.0162     0.1062    0.15   0.879    
huscollFALSE   0.2222     0.1210    1.84   0.066 .  
Outcome equation:
            Estimate Std. error t value Pr(> t)    
(Intercept)  -0.3080     0.8785   -0.35   0.726    
educ          0.3515     0.0560    6.28 3.4e-10 ***
exper         0.0304     0.0135    2.26   0.024 *  
city          0.2760     0.2560    1.08   0.281    
   Error terms:
         Estimate Std. error t value Pr(> t)    
logSigma   0.8012     0.0699   11.46 < 2e-16 ***
atanRho   -0.5230     0.0995   -5.26 1.5e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
--------------------------------------------
> 
> # only dummy variables as indepdent variables
> spec4 <- selection( lfp ~ city + wifecoll, 
+    wage_5interval ~ city, data = Mroz87, boundaries = bound6)
> print(summary(spec4))
--------------------------------------------
Tobit 2 model with interval outcome (sample selection model)
Maximum Likelihood estimation
BHHH maximisation, 20 iterations
Return code 2: successive function values within tolerance limit
Log-Likelihood: -1160 
753 observations (325 censored and 428 observed)
7 free parameters (df = 746)
Probit selection equation:
              Estimate Std. error t value Pr(> t)    
(Intercept)     0.6721     0.1092    6.15 7.5e-10 ***
city           -0.0608     0.0973   -0.63    0.53    
wifecollFALSE  -0.6495     0.1043   -6.23 4.7e-10 ***
Outcome equation:
            Estimate Std. error t value Pr(> t)    
(Intercept)    4.763      0.392    12.1  <2e-16 ***
city           0.552      0.276     2.0   0.045 *  
   Error terms:
         Estimate Std. error t value Pr(> t)    
logSigma   0.9729     0.1001    9.72 < 2e-16 ***
atanRho   -0.5977     0.0933   -6.41 1.5e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
--------------------------------------------
> 
> ## trying lrtest and waldtest
> library(lmtest)
Loading required package: zoo

Attaching package: 'zoo'

The following objects are masked from 'package:base':

    as.Date, as.Date.numeric

> lrtest(spec1,spec2)
Likelihood ratio test

Model 1: selection(selection = lfp ~ huswage + educ + mtr, outcome = wage_5interval ~ 
    educ, data = Mroz87, boundaries = bound6)
Model 2: selection(selection = lfp ~ huswage + educ + mtr + fatheduc, 
    outcome = wage_5interval ~ educ + exper, data = Mroz87, boundaries = bound6)
  #Df LogLik Df Chisq Pr(>Chisq)  
1   8  -1089                      
2  10  -1085  2  7.62      0.022 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> lrtest(spec2,spec3)
Likelihood ratio test

Model 1: selection(selection = lfp ~ huswage + educ + mtr + fatheduc, 
    outcome = wage_5interval ~ educ + exper, data = Mroz87, boundaries = bound6)
Model 2: selection(selection = lfp ~ huswage + mtr + fatheduc + educ + 
    city + huscoll, outcome = wage_5interval ~ educ + exper + 
    city, data = Mroz87, boundaries = bound6)
  #Df LogLik Df Chisq Pr(>Chisq)
1  10  -1085                    
2  13  -1082  3  5.24       0.15
> waldtest(spec1,spec2,spec3)
Wald test

Model 1: selection(selection = lfp ~ huswage + educ + mtr, outcome = wage_5interval ~ 
    educ, data = Mroz87, boundaries = bound6)
Model 2: selection(selection = lfp ~ huswage + educ + mtr + fatheduc, 
    outcome = wage_5interval ~ educ + exper, data = Mroz87, boundaries = bound6)
Model 3: selection(selection = lfp ~ huswage + mtr + fatheduc + educ + 
    city + huscoll, outcome = wage_5interval ~ educ + exper + 
    city, data = Mroz87, boundaries = bound6)
  Res.Df Df Chisq Pr(>Chisq)  
1    745                      
2    743  2  7.62      0.022 *
3    740  3  4.78      0.188  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> ## Trying different start value inputs
> try(selection( lfp ~ huswage + educ + mtr + fatheduc, 
+    wage_5interval ~ educ + exper, data = Mroz87, 
+    boundaries = bound6, start = c(1,-1,1,-1,-1,-1,1,1,0.5,-0.1) ))

Call:
 selection(selection = lfp ~ huswage + educ + mtr + fatheduc,      outcome = wage_5interval ~ educ + exper, data = Mroz87, start = c(1,          -1, 1, -1, -1, -1, 1, 1, 0.5, -0.1), boundaries = bound6) 

Coefficients:
S:(Intercept)      S:huswage         S:educ          S:mtr     S:fatheduc  
        1.811         -0.848          0.855         -4.652         -0.706  
O:(Intercept)         O:educ        O:exper       logSigma        atanRho  
      -10.531          1.127          1.012          0.353          0.104  

There were 38 warnings (use warnings() to see them)
> warnings()
Warning messages:
1: In log(pmvnDiff[YS == 1]) : NaNs produced
2: In log(pmvnDiff[YS == 1]) : NaNs produced
3: In log(pmvnDiff[YS == 1]) : NaNs produced
4: In log(pmvnDiff[YS == 1]) : NaNs produced
5: In log(pmvnDiff[YS == 1]) : NaNs produced
6: In log(pmvnDiff[YS == 1]) : NaNs produced
7: In log(pmvnDiff[YS == 1]) : NaNs produced
8: In log(pmvnDiff[YS == 1]) : NaNs produced
9: In log(pmvnDiff[YS == 1]) : NaNs produced
10: In log(pmvnDiff[YS == 1]) : NaNs produced
11: In log(pmvnDiff[YS == 1]) : NaNs produced
12: In log(pmvnDiff[YS == 1]) : NaNs produced
13: In log(pmvnDiff[YS == 1]) : NaNs produced
14: In log(pmvnDiff[YS == 1]) : NaNs produced
15: In log(pmvnDiff[YS == 1]) : NaNs produced
16: In log(pmvnDiff[YS == 1]) : NaNs produced
17: In log(pmvnDiff[YS == 1]) : NaNs produced
18: In log(pmvnDiff[YS == 1]) : NaNs produced
19: In log(pmvnDiff[YS == 1]) : NaNs produced
20: In log(pmvnDiff[YS == 1]) : NaNs produced
21: In log(pmvnDiff[YS == 1]) : NaNs produced
22: In log(pmvnDiff[YS == 1]) : NaNs produced
23: In log(pmvnDiff[YS == 1]) : NaNs produced
24: In log(pmvnDiff[YS == 1]) : NaNs produced
25: In log(pmvnDiff[YS == 1]) : NaNs produced
26: In log(pmvnDiff[YS == 1]) : NaNs produced
27: In log(pmvnDiff[YS == 1]) : NaNs produced
28: In log(pmvnDiff[YS == 1]) : NaNs produced
29: In log(pmvnDiff[YS == 1]) : NaNs produced
30: In log(pmvnDiff[YS == 1]) : NaNs produced
31: In log(pmvnDiff[YS == 1]) : NaNs produced
32: In log(pmvnDiff[YS == 1]) : NaNs produced
33: In log(pmvnDiff[YS == 1]) : NaNs produced
34: In log(pmvnDiff[YS == 1]) : NaNs produced
35: In log(pmvnDiff[YS == 1]) : NaNs produced
36: In log(pmvnDiff[YS == 1]) : NaNs produced
37: In log(pmvnDiff[YS == 1]) : NaNs produced
38: In log(pmvnDiff[YS == 1]) : NaNs produced
> 
> try(selection( lfp ~ huswage + educ + mtr + fatheduc, 
+    wage_5interval ~ educ + exper, data = Mroz87, 
+    boundaries = bound6, start = c(3,-0.5,0.2,-4,-0.1,-0.5,0.1,0.2,0.5,-0.1) ))

Call:
 selection(selection = lfp ~ huswage + educ + mtr + fatheduc,      outcome = wage_5interval ~ educ + exper, data = Mroz87, start = c(3,          -0.5, 0.2, -4, -0.1, -0.5, 0.1, 0.2, 0.5, -0.1), boundaries = bound6) 

Coefficients:
S:(Intercept)      S:huswage         S:educ          S:mtr     S:fatheduc  
       8.3669        -0.4696         0.1352        -9.3202        -0.0512  
O:(Intercept)         O:educ        O:exper       logSigma        atanRho  
       0.5535         0.2624         0.0512         0.7372        -0.5792  

There were 20 warnings (use warnings() to see them)
> warnings()
Warning messages:
1: In log(pmvnDiff[YS == 1]) : NaNs produced
2: In log(pmvnDiff[YS == 1]) : NaNs produced
3: In log(pmvnDiff[YS == 1]) : NaNs produced
4: In log(pmvnDiff[YS == 1]) : NaNs produced
5: In log(pmvnDiff[YS == 1]) : NaNs produced
6: In log(pmvnDiff[YS == 1]) : NaNs produced
7: In log(pmvnDiff[YS == 1]) : NaNs produced
8: In log(pmvnDiff[YS == 1]) : NaNs produced
9: In log(pmvnDiff[YS == 1]) : NaNs produced
10: In log(pmvnDiff[YS == 1]) : NaNs produced
11: In log(pmvnDiff[YS == 1]) : NaNs produced
12: In log(pmvnDiff[YS == 1]) : NaNs produced
13: In log(pmvnDiff[YS == 1]) : NaNs produced
14: In log(pmvnDiff[YS == 1]) : NaNs produced
15: In log(pmvnDiff[YS == 1]) : NaNs produced
16: In log(pmvnDiff[YS == 1]) : NaNs produced
17: In log(pmvnDiff[YS == 1]) : NaNs produced
18: In log(pmvnDiff[YS == 1]) : NaNs produced
19: In log(pmvnDiff[YS == 1]) : NaNs produced
20: In log(pmvnDiff[YS == 1]) : NaNs produced
> 
> try(selection( lfp ~ huswage + educ + mtr + fatheduc, 
+    wage_5interval ~ educ + exper, data = Mroz87, 
+    boundaries = bound6, start = c(3,-0.3,0.1,-5,-0.1,-0.4,0.2,0.1,0.5,-0.1) ))

Call:
 selection(selection = lfp ~ huswage + educ + mtr + fatheduc,      outcome = wage_5interval ~ educ + exper, data = Mroz87, start = c(3,          -0.3, 0.1, -5, -0.1, -0.4, 0.2, 0.1, 0.5, -0.1), boundaries = bound6) 

Coefficients:
S:(Intercept)      S:huswage         S:educ          S:mtr     S:fatheduc  
       4.7597        -0.1266         0.0944        -6.8340        -0.0169  
O:(Intercept)         O:educ        O:exper       logSigma        atanRho  
      -0.3897         0.3660         0.0316         0.7900        -0.4943  

> 
> ## Testing estimations with NAs
> # NAs in independent variables
> Mroz87$huswage[Mroz87$huswage < 4] <- NA 
> try(selection( lfp ~ huswage + educ + mtr + fatheduc, 
+    wage_5interval ~ educ + exper, data = Mroz87, boundaries = bound6))

Call:
 selection(selection = lfp ~ huswage + educ + mtr + fatheduc,      outcome = wage_5interval ~ educ + exper, data = Mroz87, boundaries = bound6) 

Coefficients:
S:(Intercept)      S:huswage         S:educ          S:mtr     S:fatheduc  
       4.6672        -0.1413         0.0921        -6.4430        -0.0148  
O:(Intercept)         O:educ        O:exper       logSigma        atanRho  
      -1.0205         0.4045         0.0423         0.7631        -0.4733  

> Mroz87$educ[Mroz87$educ > 12] <- NA
> try(selection( lfp ~ huswage + educ + mtr + fatheduc, 
+    wage_5interval ~ educ + exper, data = Mroz87, boundaries = bound6))

Call:
 selection(selection = lfp ~ huswage + educ + mtr + fatheduc,      outcome = wage_5interval ~ educ + exper, data = Mroz87, boundaries = bound6) 

Coefficients:
S:(Intercept)      S:huswage         S:educ          S:mtr     S:fatheduc  
      5.64758       -0.16770        0.08030       -7.47231       -0.00654  
O:(Intercept)         O:educ        O:exper       logSigma        atanRho  
      1.13064        0.20548        0.03925        0.57175       -0.45141  

> 
> # NAs in dependent variable
> Mroz87$wage_5interval[Mroz87$kids5 > 1] <- NA
> try(selection( lfp ~ huswage + educ + mtr + fatheduc, 
+    wage_5interval ~ educ + exper, data = Mroz87, boundaries = bound6))

Call:
 selection(selection = lfp ~ huswage + educ + mtr + fatheduc,      outcome = wage_5interval ~ educ + exper, data = Mroz87, boundaries = bound6) 

Coefficients:
S:(Intercept)      S:huswage         S:educ          S:mtr     S:fatheduc  
      5.68069       -0.16813        0.07930       -7.49765       -0.00707  
O:(Intercept)         O:educ        O:exper       logSigma        atanRho  
      1.08518        0.21010        0.03900        0.56813       -0.44780  

> 
> ### tests with Smoke data
> data(Smoke)
> 
> ## tests with different specifications
> bounds <- c(0,5,10,20,50,Inf)
> 
> # low number of variables
> Smoke_spec1 <- selection( smoker ~ educ + age, 
+    cigs_intervals ~ educ, data = Smoke, boundaries = bounds)
Warning messages:
1: In log(pmvnDiff[YS == 1]) : NaNs produced
2: In log(pmvnDiff[YS == 1]) : NaNs produced
3: In log(pmvnDiff[YS == 1]) : NaNs produced
> 
> #adding variables
> Smoke_spec2 <- selection( smoker ~ educ + age + restaurn, 
+    cigs_intervals ~ educ + income + restaurn, data = Smoke, boundaries = bounds)
Warning messages:
1: In log(pmvnDiff[YS == 1]) : NaNs produced
2: In log(pmvnDiff[YS == 1]) : NaNs produced
3: In log(pmvnDiff[YS == 1]) : NaNs produced
4: In log(pmvnDiff[YS == 1]) : NaNs produced
> 
> # testing models against each other
> lrtest(Smoke_spec1, Smoke_spec2)
Likelihood ratio test

Model 1: selection(selection = smoker ~ educ + age, outcome = cigs_intervals ~ 
    educ, data = Smoke, boundaries = bounds)
Model 2: selection(selection = smoker ~ educ + age + restaurn, outcome = cigs_intervals ~ 
    educ + income + restaurn, data = Smoke, boundaries = bounds)
  #Df LogLik Df Chisq Pr(>Chisq)  
1   7   -941                      
2  10   -936  3  8.47      0.037 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> waldtest(Smoke_spec1, Smoke_spec2)
Wald test

Model 1: selection(selection = smoker ~ educ + age, outcome = cigs_intervals ~ 
    educ, data = Smoke, boundaries = bounds)
Model 2: selection(selection = smoker ~ educ + age + restaurn, outcome = cigs_intervals ~ 
    educ + income + restaurn, data = Smoke, boundaries = bounds)
  Res.Df Df Chisq Pr(>Chisq)  
1    800                      
2    797  3  7.87      0.049 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> ## Test with empty interval
> Smoke$cigs_intervals2 <- cut(Smoke$cigs, br=c(0,5,10,20,50,51,Inf),
+    labels=c(1,2,3,4,5,6))
> table(Smoke$cigs_intervals2)

  1   2   3   4   5   6 
 26  38 138  98   0  10 
> bounds <- c(0,5,10,20,50,51,Inf)
> try(selection( smoker ~ educ + age + restaurn, 
+    cigs_intervals2 ~ educ + income + restaurn, data = Smoke, 
+    boundaries = bounds))
Error in tobit2Intfit(YS, XS, YO, XO, boundaries = boundaries, start = start,  : 
  argument 'boundaries' does not have (number of intervals + 1) 
      elements [6], or at least one interval is empty
> 
> ## tests with starting values
> bounds <- c(0,5,10,20,50,Inf)
> 
> # Trying different start value inputs
> try(selection( smoker ~ educ + age + restaurn, 
+    cigs_intervals ~ educ + income + restaurn, data = Smoke,
+    boundaries = bounds, start = 
+       c(1,-0.1,-0.1,-0.5,3,-1,0.01,-2,1,0.7)))
Error in tobit2Intfit(YS, XS, YO, XO, boundaries = boundaries, start = start,  : 
  maxLik: Return code 100: Initial value out of range
In addition: Warning message:
In log(pmvnDiff[YS == 1]) : NaNs produced
> 
> summary(selection( smoker ~ educ + age + restaurn, 
+    cigs_intervals ~ educ + income + restaurn, data = Smoke,
+    boundaries = bounds, start = 
+       c(0.6,-0.05,-0.006,-0.27,4,-0.3,0.0001,-4,2,0.7)))
--------------------------------------------
Tobit 2 model with interval outcome (sample selection model)
Maximum Likelihood estimation
BHHH maximisation, 31 iterations
Return code 2: successive function values within tolerance limit
Log-Likelihood: -936 
807 observations (497 censored and 310 observed)
10 free parameters (df = 797)
Probit selection equation:
            Estimate Std. error t value Pr(> t)   
(Intercept)  0.59089    0.23547    2.51  0.0121 * 
educ        -0.04741    0.01580   -3.00  0.0027 **
age         -0.00588    0.00202   -2.92  0.0035 **
restaurn    -0.27814    0.10592   -2.63  0.0086 **
Outcome equation:
             Estimate Std. error t value Pr(> t)  
(Intercept)  3.97e+00   4.06e+00    0.98   0.329  
educ        -2.90e-01   3.25e-01   -0.89   0.373  
income       6.03e-05   6.72e-05    0.90   0.369  
restaurn    -3.97e+00   2.13e+00   -1.86   0.063 .
   Error terms:
         Estimate Std. error t value Pr(> t)    
logSigma  2.95464    0.06125    48.2  <2e-16 ***
atanRho   0.77307    0.00747   103.5  <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
--------------------------------------------
> 
> proc.time()
   user  system elapsed 
 252.61    0.28  253.40 
