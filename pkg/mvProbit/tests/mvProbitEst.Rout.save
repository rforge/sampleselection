
R version 2.13.2 (2011-09-30)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i686-pc-linux-gnu (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( "mvProbit" )
Loading required package: mvtnorm
Loading required package: maxLik
Loading required package: miscTools
Loading required package: bayesm
> 
> ## generate a simulated data set
> set.seed( 123 )
> # number of observations
> nObs <- 50
> 
> # generate explanatory variables
> xMat <- cbind( 
+    const = rep( 1, nObs ),
+    x1 = as.numeric( rnorm( nObs ) > 0 ),
+    x2 = rnorm( nObs ) )
> 
> # model coefficients
> beta <- cbind( c(  0.8,  1.2, -0.8 ),
+                c( -0.6,  1.0, -1.6 ),
+                c(  0.5, -0.6,  1.2 ) )
> 
> # covariance matrix of error terms
> sigma <- symMatrix( c( 1, 0.2, 0.4, 1, -0.1, 1 ) )
> 
> # generate dependent variables
> yMatLin <- xMat %*% beta 
> yMat <- ( yMatLin + rmvnorm( nObs, sigma = sigma ) ) > 0
> colnames( yMat ) <- paste( "y", 1:3, sep = "" )
> 
> # estimation with the BHHH algorithm, two-sided gradients
> estResultBHHH <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), startSigma = sigma, method = "BHHH",
+    data = as.data.frame( cbind( xMat, yMat ) ), tol = 0.5 )
> summary( estResultBHHH )
--------------------------------------------
Maximum Likelihood estimation
BHHH maximisation, 1 iterations
Return code 2: successive function values within tolerance limit
Log-Likelihood: -56.90544 
12  free parameters
Estimates:
       Estimate Std. error t value Pr(> t)  
b_1_0  1.025085   0.445480  2.3011 0.02139 *
b_1_1  1.305364   0.735115  1.7757 0.07578 .
b_1_2 -1.028087   0.688515 -1.4932 0.13539  
b_2_0 -0.782477   0.387975 -2.0168 0.04371 *
b_2_1  1.143185   0.530259  2.1559 0.03109 *
b_2_2 -1.669378   0.813076 -2.0532 0.04006 *
b_3_0  0.582290   0.641066  0.9083 0.36371  
b_3_1 -0.696668   0.898180 -0.7756 0.43796  
b_3_2  1.232833   0.624523  1.9740 0.04838 *
R_1_2  0.863217  18.600710  0.0464 0.96299  
R_1_3  0.360217   0.647118  0.5566 0.57777  
R_2_3 -0.084062   0.349091 -0.2408 0.80971  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
--------------------------------------------
> estResultBHHHA <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta, sigma[ lower.tri( sigma ) ] ), method = "BHHH",
+    data = as.data.frame( cbind( xMat, yMat ) ), tol = 0.5 )
> all.equal( estResultBHHH, estResultBHHHA )
[1] "Component 12: target, current do not match when deparsed"
> 
> # estimation with the BHHH algorithm, one-sided gradients
> estResultBHHH1 <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), startSigma = sigma, method = "BHHH",
+    data = as.data.frame( cbind( xMat, yMat ) ), tol = 0.5,
+    oneSidedGrad = TRUE )
> summary( estResultBHHH1 )
--------------------------------------------
Maximum Likelihood estimation
BHHH maximisation, 1 iterations
Return code 2: successive function values within tolerance limit
Log-Likelihood: -56.90544 
12  free parameters
Estimates:
       Estimate Std. error t value Pr(> t)  
b_1_0  1.025085   0.445479  2.3011 0.02139 *
b_1_1  1.305364   0.735114  1.7757 0.07578 .
b_1_2 -1.028087   0.688514 -1.4932 0.13539  
b_2_0 -0.782477   0.387972 -2.0168 0.04371 *
b_2_1  1.143185   0.530259  2.1559 0.03109 *
b_2_2 -1.669378   0.813066 -2.0532 0.04005 *
b_3_0  0.582290   0.641063  0.9083 0.36371  
b_3_1 -0.696668   0.898174 -0.7756 0.43796  
b_3_2  1.232833   0.624522  1.9740 0.04838 *
R_1_2  0.863217  18.600400  0.0464 0.96298  
R_1_3  0.360217   0.647118  0.5566 0.57777  
R_2_3 -0.084062   0.349090 -0.2408 0.80971  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
--------------------------------------------
> all.equal( estResultBHHH, estResultBHHH1 )
[1] "Component 2: Mean relative difference: 1.181367e-07"     
[2] "Component 3: Mean relative difference: 1.490048e-06"     
[3] "Component 4: Mean relative difference: 4.756807e-07"     
[4] "Component 11: Mean relative difference: 4.579023e-07"    
[5] "Component 12: target, current do not match when deparsed"
> 
> # estimation with the BFGS algorithm, two-sided gradients
> estResultBFGS <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), startSigma = sigma, 
+    data = as.data.frame( cbind( xMat, yMat ) ), 
+    tol = 0.5 )
> summary( estResultBFGS )
--------------------------------------------
Maximum Likelihood estimation
BFGS maximisation, 4 iterations
Return code 0: successful convergence 
Log-Likelihood: -52.94456 
12  free parameters
Estimates:
       Estimate Std. error t value Pr(> t)  
b_1_0  0.536072   0.827086  0.6481 0.51689  
b_1_1  1.161006   0.915152  1.2686 0.20457  
b_1_2 -1.142125   0.938471 -1.2170 0.22360  
b_2_0 -0.449522   0.792154 -0.5675 0.57040  
b_2_1  1.054956   0.883984  1.1934 0.23271  
b_2_2 -1.576239   0.731868 -2.1537 0.03126 *
b_3_0  0.407511   0.488973  0.8334 0.40462  
b_3_1 -0.854005   0.848706 -1.0062 0.31430  
b_3_2  1.259584   0.680400  1.8512 0.06414 .
R_1_2  0.294826   1.858166  0.1587 0.87393  
R_1_3  0.328219   0.709232  0.4628 0.64352  
R_2_3 -0.023818   0.344664 -0.0691 0.94491  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
--------------------------------------------
> 
> # estimation with the BFGS algorithm, one-sided gradients
> estResultBFGS1 <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), startSigma = sigma, 
+    data = as.data.frame( cbind( xMat, yMat ) ), 
+    tol = 0.5, oneSidedGrad = TRUE )
> summary( estResultBFGS1 )
--------------------------------------------
Maximum Likelihood estimation
BFGS maximisation, 4 iterations
Return code 0: successful convergence 
Log-Likelihood: -52.94456 
12  free parameters
Estimates:
       Estimate Std. error t value Pr(> t)  
b_1_0  0.536071   0.827086  0.6481 0.51689  
b_1_1  1.161006   0.915152  1.2686 0.20457  
b_1_2 -1.142125   0.938471 -1.2170 0.22360  
b_2_0 -0.449523   0.792154 -0.5675 0.57040  
b_2_1  1.054956   0.883984  1.1934 0.23271  
b_2_2 -1.576240   0.731868 -2.1537 0.03126 *
b_3_0  0.407511   0.488973  0.8334 0.40462  
b_3_1 -0.854005   0.848706 -1.0062 0.31430  
b_3_2  1.259584   0.680400  1.8512 0.06414 .
R_1_2  0.294826   1.858166  0.1587 0.87393  
R_1_3  0.328219   0.709232  0.4628 0.64352  
R_2_3 -0.023819   0.344664 -0.0691 0.94490  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
--------------------------------------------
> all.equal( estResultBFGS, estResultBFGS1 )
[1] "Component 2: Mean relative difference: 3.039429e-07"     
[2] "Component 3: Mean relative difference: 1.044097e-06"     
[3] "Component 4: Mean relative difference: 4.568584e-07"     
[4] "Component 12: Mean relative difference: 2.912419e-07"    
[5] "Component 13: target, current do not match when deparsed"
> 
> # estimation with the BFGS algorithm, one-sided gradients, no starting values
> estResultBFGS1a <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    data = as.data.frame( cbind( xMat, yMat ) ), 
+    tol = 0.5, oneSidedGrad = TRUE )
> summary( estResultBFGS1a )
--------------------------------------------
Maximum Likelihood estimation
BFGS maximisation, 3 iterations
Return code 0: successful convergence 
Log-Likelihood: -49.36404 
12  free parameters
Estimates:
       Estimate Std. error t value Pr(> t)  
b_1_0  0.793530   0.904117  0.8777 0.38011  
b_1_1  1.883674   0.906682  2.0775 0.03775 *
b_1_2 -1.749220   0.974002 -1.7959 0.07251 .
b_2_0 -0.400356   0.690563 -0.5798 0.56208  
b_2_1  0.915772   0.979979  0.9345 0.35006  
b_2_2 -1.521057   0.720059 -2.1124 0.03465 *
b_3_0  0.977899   0.644966  1.5162 0.12947  
b_3_1 -1.694332   0.947881 -1.7875 0.07386 .
b_3_2  1.576251   0.733988  2.1475 0.03175 *
R_1_2  0.752701   4.327297  0.1739 0.86191  
R_1_3  0.237212   0.905347  0.2620 0.79331  
R_2_3 -0.034528   0.358894 -0.0962 0.92336  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
--------------------------------------------
> 
> # estimation with the BFGS algorithm, one-sided gradients, no starting values for beta
> estResultBFGS1b <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    startSigma = sigma, data = as.data.frame( cbind( xMat, yMat ) ), 
+    tol = 0.5, oneSidedGrad = TRUE )
> summary( estResultBFGS1b )
--------------------------------------------
Maximum Likelihood estimation
BFGS maximisation, 3 iterations
Return code 0: successful convergence 
Log-Likelihood: -49.57444 
12  free parameters
Estimates:
      Estimate Std. error t value Pr(> t)  
b_1_0  0.81103    0.92973  0.8723 0.38303  
b_1_1  1.90600    0.91602  2.0807 0.03746 *
b_1_2 -1.76267    1.01310 -1.7399 0.08188 .
b_2_0 -0.37696    0.70486 -0.5348 0.59279  
b_2_1  0.94406    1.03448  0.9126 0.36145  
b_2_2 -1.53320    0.75169 -2.0397 0.04138 *
b_3_0  0.93718    0.62914  1.4896 0.13632  
b_3_1 -1.74978    0.99956 -1.7505 0.08002 .
b_3_2  1.60242    0.78477  2.0419 0.04116 *
R_1_2  0.68168    3.40943  0.1999 0.84153  
R_1_3  0.40442    0.80239  0.5040 0.61425  
R_2_3  0.16634    0.33886  0.4909 0.62351  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
--------------------------------------------
> 
> # estimation with the BFGS algorithm, one-sided gradients, no starting values for sigma
> estResultBFGS1s <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), data = as.data.frame( cbind( xMat, yMat ) ), 
+    tol = 0.5, oneSidedGrad = TRUE )
> summary( estResultBFGS1s )
--------------------------------------------
Maximum Likelihood estimation
BFGS maximisation, 4 iterations
Return code 0: successful convergence 
Log-Likelihood: -52.78274 
12  free parameters
Estimates:
       Estimate Std. error t value Pr(> t)  
b_1_0  0.558139   0.866155  0.6444 0.51932  
b_1_1  1.149579   0.906074  1.2687 0.20453  
b_1_2 -1.127465   0.941915 -1.1970 0.23131  
b_2_0 -0.444257   0.855255 -0.5194 0.60345  
b_2_1  1.073250   0.993142  1.0807 0.27985  
b_2_2 -1.572262   0.785571 -2.0014 0.04535 *
b_3_0  0.372552   0.561719  0.6632 0.50718  
b_3_1 -0.854698   0.952140 -0.8977 0.36937  
b_3_2  1.230114   0.715057  1.7203 0.08538 .
R_1_2  0.349810   2.022890  0.1729 0.86271  
R_1_3 -0.011768   0.707759 -0.0166 0.98673  
R_2_3  0.094353   0.339196  0.2782 0.78088  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
--------------------------------------------
> 
> # estimation with the BFGS algorithm, Miwa algorithm for obtaining integrals
> estResultBFGSm <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), startSigma = sigma, 
+    data = as.data.frame( cbind( xMat, yMat ) ), 
+    tol = 0.5, algorithm = Miwa( steps = 64 ) )
Warning message:
In log(pmvnormWrap(upper = xBetaTmp, sigma = sigmaTmp, algorithm = algorithm,  :
  NaNs produced
> summary( estResultBFGSm )
--------------------------------------------
Maximum Likelihood estimation
BFGS maximisation, 4 iterations
Return code 0: successful convergence 
Log-Likelihood: -52.94417 
12  free parameters
Estimates:
       Estimate Std. error t value Pr(> t)  
b_1_0  0.536085   0.827019  0.6482 0.51685  
b_1_1  1.161016   0.915110  1.2687 0.20454  
b_1_2 -1.142134   0.938373 -1.2171 0.22355  
b_2_0 -0.449521   0.792153 -0.5675 0.57040  
b_2_1  1.054959   0.883857  1.1936 0.23264  
b_2_2 -1.576244   0.731730 -2.1541 0.03123 *
b_3_0  0.407529   0.488936  0.8335 0.40456  
b_3_1 -0.854000   0.848598 -1.0064 0.31424  
b_3_2  1.259598   0.680236  1.8517 0.06407 .
R_1_2  0.294913   1.857892  0.1587 0.87388  
R_1_3  0.328185   0.709027  0.4629 0.64346  
R_2_3 -0.023863   0.344684 -0.0692 0.94480  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
--------------------------------------------
> all.equal( estResultBFGS, estResultBFGSm )
[1] "Component 1: Mean relative difference: 7.343945e-06"     
[2] "Component 2: Mean relative difference: 2.68304e-05"      
[3] "Component 3: Mean relative difference: 0.0001800706"     
[4] "Component 4: Mean relative difference: 0.0001779414"     
[5] "Component 12: Mean relative difference: 0.000115282"     
[6] "Component 13: target, current do not match when deparsed"
> 
> # estimation with the BFGS algorithm, GHK algorithm for obtaining integrals
> estResultBFGSg <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), startSigma = sigma, 
+    data = as.data.frame( cbind( xMat, yMat ) ), 
+    tol = 0.5, algorithm = "GHK" )
There were 50 or more warnings (use warnings() to see the first 50)
> summary( estResultBFGSg )
--------------------------------------------
Maximum Likelihood estimation
BFGS maximisation, 4 iterations
Return code 0: successful convergence 
Log-Likelihood: -52.93771 
12  free parameters
Estimates:
       Estimate Std. error t value Pr(> t)  
b_1_0  0.535968   0.827294  0.6479 0.51708  
b_1_1  1.160710   0.914403  1.2694 0.20431  
b_1_2 -1.142391   0.938390 -1.2174 0.22345  
b_2_0 -0.451755   0.806637 -0.5600 0.57545  
b_2_1  1.053128   0.868607  1.2124 0.22535  
b_2_2 -1.575703   0.706958 -2.2288 0.02582 *
b_3_0  0.403853   0.487375  0.8286 0.40731  
b_3_1 -0.857103   0.848213 -1.0105 0.31227  
b_3_2  1.259769   0.678195  1.8575 0.06324 .
R_1_2  0.295300   1.854909  0.1592 0.87351  
R_1_3  0.324945   0.704493  0.4612 0.64462  
R_2_3 -0.020848   0.346164 -0.0602 0.95198  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
--------------------------------------------
> all.equal( estResultBFGS, estResultBFGSg )
[1] "Component 1: Mean relative difference: 0.000129477"      
[2] "Component 2: Mean relative difference: 0.00208213"       
[3] "Component 3: Mean relative difference: 0.01734211"       
[4] "Component 4: Mean relative difference: 0.01316397"       
[5] "Component 12: Mean relative difference: 0.00685237"      
[6] "Component 13: target, current do not match when deparsed"
> all.equal( estResultBFGSm, estResultBFGSg )
[1] "Component 1: Mean relative difference: 0.000122134"      
[2] "Component 2: Mean relative difference: 0.002077232"      
[3] "Component 3: Mean relative difference: 0.01738212"       
[4] "Component 4: Mean relative difference: 0.01309901"       
[5] "Component 12: Mean relative difference: 0.006838736"     
[6] "Component 13: target, current do not match when deparsed"
> 
> # estimation with the Nelder-Mead algorithm
> estResultNM <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), startSigma = sigma, 
+    data = as.data.frame( cbind( xMat, yMat ) ), 
+    method = "NM", reltol = 0.05 )
> summary( estResultNM )
--------------------------------------------
Maximum Likelihood estimation
Nelder-Mead maximisation, 13 iterations
Return code 0: successful convergence 
Log-Likelihood: -56.94782 
12  free parameters
Estimates:
      Estimate Std. error t value Pr(> t)  
b_1_0  0.80000    1.05415  0.7589 0.44791  
b_1_1  1.20000    0.74598  1.6086 0.10770  
b_1_2 -0.80000    0.91854 -0.8710 0.38378  
b_2_0 -0.44000    0.79679 -0.5522 0.58080  
b_2_1  1.00000    0.87067  1.1485 0.25075  
b_2_2 -1.60000    0.65779 -2.4324 0.01500 *
b_3_0  0.50000    0.51509  0.9707 0.33170  
b_3_1 -0.60000    0.77078 -0.7784 0.43631  
b_3_2  1.20000    0.61086  1.9645 0.04948 *
R_1_2  0.20000    2.41635  0.0828 0.93403  
R_1_3  0.40000    0.73210  0.5464 0.58481  
R_2_3 -0.10000    0.34158 -0.2928 0.76971  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
--------------------------------------------
> 
> # marginal effects based on estimated coefficients
> # unconditional marginal effects
> margEffUnc <- margEff( estResultBFGS )
> print( margEffUnc )
      d_y1_d_x1    d_y2_d_x1    d_y3_d_x1    d_y1_d_x2     d_y2_d_x2
1  0.3229491571 0.3836676992 -0.316955571 -0.441979916 -0.4386127078
2  0.2429445847 0.3993797590 -0.330144619 -0.387614512 -0.5794260400
3  0.2388601819 0.3982789455 -0.329783586 -0.099223749 -0.5013923968
4  0.4010839952 0.0557836101 -0.084205830 -0.451571736 -0.1886322555
5  0.1883227203 0.3691077222 -0.316570405 -0.067411731 -0.3961556790
6  0.3702088341 0.0348830182 -0.061413065 -0.455364197 -0.1278614687
7  0.0103207595 0.0220458595 -0.053123552 -0.001122225 -0.0060669427
8  0.4007100991 0.2907940042 -0.259618854 -0.451711635 -0.2456774131
9  0.2866645193 0.3996281228 -0.327737008 -0.421511449 -0.5108161192
10 0.3126554267 0.3897239251 -0.320854424 -0.436950408 -0.4603049276
11 0.3559814758 0.3554683195 -0.299468024 -0.205103323 -0.6288130112
12 0.1219655175 0.2849034003 -0.270662367 -0.034586201 -0.2369272203
13 0.1607955228 0.3407304015 -0.301945123 -0.052636441 -0.3318476745
14 0.0425053789 0.1103217794 -0.148796997 -0.007619505 -0.0545819828
15 0.0374442582 0.0966390781 -0.136761212 -0.096792632 -0.2915498518
16 0.3364458707 0.3738145586 -0.310770786 -0.183076398 -0.6237777824
17 0.3723866025 0.3359155654 -0.287500211 -0.225743149 -0.6256260659
18 0.2663398659 0.4021325788 -0.330275056 -0.406929888 -0.5455404372
19 0.4376429542 0.1696359685 -0.178946449 -0.370373203 -0.4388108527
20 0.2241585804 0.0042036728 -0.014953502 -0.089300446 -0.0007183302
21 0.1243685669 0.2889115851 -0.273009380 -0.249665699 -0.5965848233
22 0.0007459368 0.0006997555 -0.005794037 -0.002963512 -0.0038764260
23 0.4382229462 0.1426446470 -0.158983664 -0.377686061 -0.0793317558
24 0.0830536061 0.2095390165 -0.223402595 -0.184151430 -0.5029618392
25 0.0865903764 0.2172089609 -0.228508578 -0.190194230 -0.5140300922
26 0.4378382910 0.1365702837 -0.154340785 -0.372385737 -0.0744061888
27 0.1729600304 0.3543882323 -0.309111595 -0.058957089 -0.3607121362
28 0.0257893979 0.0644472362 -0.105597216 -0.003833087 -0.0256483436
29 0.3029664390 0.3943070184 -0.323906809 -0.431637731 -0.4798749184
30 0.2118732333 0.3863181844 -0.324795263 -0.081441034 -0.4476780388
31 0.2527667060 0.4012707688 -0.330599116 -0.109160768 -0.5263904901
32 0.3573773964 0.3539600682 -0.298544079 -0.453545721 -0.3597566943
33 0.1516902826 0.3293284563 -0.295806452 -0.048116319 -0.3098804129
34 0.4109693775 0.2693770277 -0.246106416 -0.287100465 -0.5780744976
35 0.1897254894 0.3703130155 -0.317166727 -0.068210588 -0.3993266523
36 0.3438409908 0.3674584553 -0.306835661 -0.191130998 -0.6266939812
37 0.4348121019 0.1159357570 -0.138075145 -0.412808406 -0.3345517685
38 0.3693685444 0.3398244945 -0.289893267 -0.455294843 -0.3300385704
39 0.1625954940 0.3428642991 -0.303078714 -0.301623340 -0.6275330282
40 0.4310083028 0.1021309736 -0.126696301 -0.337178116 -0.0488785748
41 0.4383602628 0.1464601354 -0.161869641 -0.380895849 -0.0824913410
42 0.3938189786 0.3033933328 -0.267470489 -0.453789429 -0.2652455675
43 0.3189542362 0.3861651946 -0.318550501 -0.440105656 -0.4471386008
44 0.0971786804 0.2391890488 -0.242745143 -0.024716381 -0.1761938533
45 0.4025240934 0.0571278504 -0.085567351 -0.451004212 -0.1923211012
46 0.1023270344 0.2493442534 -0.249136290 -0.216048167 -0.5558718553
47 0.1866549089 0.0021906375 -0.009700155 -0.066467854 -0.0003164631
48 0.3664195840 0.0330393066 -0.059215375 -0.217972882 -0.0103701668
49 0.1856983820 0.3667908424 -0.315417388 -0.065929410 -0.3901921735
50 0.0417272238 0.1082331002 -0.146997339 -0.105894033 -0.3177684702
     d_y3_d_x2
1  0.385921457
2  0.468985619
3  0.443346687
4  0.222238974
5  0.384718603
6  0.172171936
7  0.028392575
8  0.261220788
9  0.428728212
10 0.398908844
11 0.502249044
12 0.280689477
13 0.345312727
14 0.112624216
15 0.322287902
16 0.501467723
17 0.499011308
18 0.449048188
19 0.389108071
20 0.005756040
21 0.491440700
22 0.022018756
23 0.123707351
24 0.446573484
25 0.452240875
26 0.118602809
27 0.363374398
28 0.070196017
29 0.410521296
30 0.414264757
31 0.456293194
32 0.337325583
33 0.331118108
34 0.470092740
35 0.386586180
36 0.502296099
37 0.324544502
38 0.318287911
39 0.502499069
40 0.090013131
41 0.126925752
42 0.274927428
43 0.391041960
44 0.233697242
45 0.225088604
46 0.472883551
47 0.003381937
48 0.032673430
49 0.381188131
50 0.339567947
> 
> # conditional marginal effects
> # (assuming that all other dependent variables are as observed)
> margEffCondObs <- margEff( estResultBFGS, cond = TRUE )
> print( margEffCondObs )
      d_y1_d_x1    d_y2_d_x1    d_y3_d_x1    d_y1_d_x2     d_y2_d_x2
1  0.3232361962 0.3432683006 -0.355048446 -0.459509098 -0.4313201490
2  0.1153483935 0.3596761868 -0.361870523 -0.229189942 -0.5342318457
3  0.2375484575 0.3307600421 -0.361244529 -0.089536451 -0.4547362679
4  0.4122503067 0.0694645017 -0.053904996 -0.472083947 -0.2122800739
5  0.1847060250 0.3084425402 -0.343223755 -0.060445211 -0.3646545058
6  0.3787985990 0.0477528061 -0.033663433 -0.474756965 -0.1554861558
7  0.0100311239 0.0209668055 -0.053506160 -0.001106247 -0.0060166000
8  0.4110128568 0.1322373738 -0.403457903 -0.470548414 -0.1341642415
9  0.1474786223 0.3575139395 -0.360949263 -0.264433849 -0.4844316878
10 0.3116938786 0.3484655127 -0.361307996 -0.453660745 -0.4473769717
11 0.2058976400 0.3200081427 -0.328883694 -0.079864895 -0.5893156416
12 0.1177334095 0.2436538298 -0.287657466 -0.031148920 -0.2231415105
13 0.1471332486 0.3159154131 -0.349075440 -0.039228803 -0.3336039180
14 0.0406335999 0.0999068773 -0.152735168 -0.007155820 -0.0531209315
15 0.0358197254 0.0880153046 -0.139996990 -0.091958138 -0.2591680622
16 0.1882725183 0.3350175752 -0.342159787 -0.067926448 -0.5870797948
17 0.3833567161 0.2924153583 -0.314583141 -0.212937647 -0.5602548019
18 0.3979220186 0.2666187493 -0.404805015 -0.513151557 -0.3701386058
19 0.4437521978 0.1791338917 -0.160502351 -0.532987886 -0.4316406788
20 0.2259756659 0.0022584118 -0.019229939 -0.089444084 -0.0005387236
21 0.1201169117 0.2467991134 -0.290399333 -0.244509996 -0.5058124540
22 0.0007497926 0.0006978391 -0.005797477 -0.002951779 -0.0038207796
23 0.4535483129 0.0631045466 -0.259933151 -0.387912218 -0.0460271704
24 0.0233590201 0.2044569486 -0.233822492 -0.072712001 -0.4720414686
25 0.1747911246 0.1895312592 -0.261808609 -0.302155598 -0.4395843932
26 0.4530947663 0.0604711728 -0.252242094 -0.382153939 -0.0433433667
27 0.1689887911 0.2972946593 -0.333810139 -0.052838666 -0.3336920582
28 0.0247529328 0.0595893814 -0.107382268 -0.003670897 -0.0251760061
29 0.3008617678 0.2048889670 -0.428116554 -0.447474248 -0.2665140729
30 0.2090453560 0.3214423437 -0.354022707 -0.073180135 -0.4091058932
31 0.2455445912 0.3606360268 -0.379506727 -0.091829433 -0.5089267101
32 0.2072019348 0.3187872119 -0.327786882 -0.311947695 -0.3715008227
33 0.1474382857 0.2781589528 -0.317490037 -0.043152940 -0.2887484016
34 0.4881154710 0.2484746725 -0.250623067 -0.449373107 -0.5284208163
35 0.1861474778 0.3093531933 -0.343988258 -0.061166505 -0.3674094307
36 0.4662923136 0.3127833842 -0.339277170 -0.321772793 -0.5593117661
37 0.4496318140 0.0515675468 -0.224907158 -0.429079175 -0.1533983305
38 0.3756418193 0.3074074008 -0.313706240 -0.474844441 -0.3482839441
39 0.0638654116 0.3176168542 -0.326350396 -0.154807066 -0.5696465228
40 0.4453405495 0.0456337186 -0.205495492 -0.344289600 -0.0292378379
41 0.4537160101 0.1514742551 -0.139238355 -0.391407408 -0.1245240634
42 0.4031850053 0.1389606133 -0.411561969 -0.472975838 -0.1445333296
43 0.3187527097 0.1953852746 -0.433867720 -0.457330982 -0.2461844889
44 0.0933321287 0.2073153800 -0.255570394 -0.022420511 -0.1675168915
45 0.4138250511 0.0262438003 -0.134437144 -0.471512840 -0.0877855065
46 0.0320414287 0.2395251689 -0.262837614 -0.092981737 -0.5147062189
47 0.1877038485 0.0012227798 -0.011951812 -0.066531222 -0.0002453633
48 0.3747295024 0.0156619839 -0.089368038 -0.219843609 -0.0068112323
49 0.1820121476 0.3066912947 -0.341751326 -0.059108011 -0.3594666860
50 0.1059631809 0.0980984696 -0.167108498 -0.194204528 -0.2810062303
     d_y3_d_x2
1  0.360815948
2  0.497693369
3  0.453818047
4  0.175490812
5  0.390535156
6  0.120618005
7  0.028391238
8  0.378315289
9  0.445348474
10 0.379760171
11 0.524477068
12 0.282396164
13 0.371331912
14 0.112653252
15 0.334504219
16 0.522126289
17 0.522184293
18 0.605611100
19 0.385355560
20 0.006078859
21 0.528322176
22 0.022043552
23 0.167180008
24 0.474967844
25 0.512488332
26 0.159487780
27 0.368015826
28 0.070192644
29 0.574533205
30 0.422114838
31 0.493178952
32 0.328691011
33 0.334349642
34 0.495369678
35 0.392516251
36 0.542851699
37 0.512469883
38 0.267731303
39 0.541591921
40 0.117148027
41 0.061954778
42 0.398801119
43 0.554039711
44 0.234531669
45 0.362288294
46 0.506043388
47 0.003514004
48 0.038239307
49 0.386795047
50 0.384142824
> 
> # conditional marginal effects
> # (assuming that all other dependent variables are one)
> margEffCondOne <- margEff( estResultBFGS, cond = TRUE, othDepOne = TRUE )
> print( margEffCondOne )
      d_y1_d_x1    d_y2_d_x1    d_y3_d_x1     d_y1_d_x2    d_y2_d_x2
1  1.766878e-01 0.3432683006 -0.349264084 -2.905192e-01 -0.431320149
2  1.153484e-01 0.3596761868 -0.361870523 -2.291899e-01 -0.534231846
3  1.124992e-01 0.3590246655 -0.361244529 -2.793627e-02 -0.487346175
4  3.609633e-01 0.0694645017 -0.073360073 -2.641422e-01 -0.212280074
5  7.929731e-02 0.3381003317 -0.343223755 -1.566558e-02 -0.393227059
6  3.656145e-01 0.0477528061 -0.049586181 -2.816339e-01 -0.155486156
7  8.025561e-04 0.0243038218 -0.053506160 -1.527045e-05 -0.007237107
8  2.521476e-01 0.2683878274 -0.280778222 -3.333443e-01 -0.279546562
9  1.474786e-01 0.3575139395 -0.360949263 -2.644338e-01 -0.484431688
10 1.681334e-01 0.3484655127 -0.353640857 -2.833560e-01 -0.447376972
11 2.058976e-01 0.3200081427 -0.328883694 -7.986489e-02 -0.589315642
12 4.168856e-02 0.2699812896 -0.287657466 -5.571665e-03 -0.243054032
13 6.282471e-02 0.3159154131 -0.324960430 -1.073426e-02 -0.333603918
14 8.252791e-03 0.1126141858 -0.152735168 -4.572391e-04 -0.059829478
15 6.746420e-03 0.0994122211 -0.139996990 -2.632565e-02 -0.288927939
16 1.882725e-01 0.3350175752 -0.342159787 -6.792645e-02 -0.587079795
17 2.216808e-01 0.3042766603 -0.314583141 -9.149649e-02 -0.584884106
18 1.321608e-01 0.3605724669 -0.363116108 -2.485573e-01 -0.509670665
19 3.158634e-01 0.1708741211 -0.182528221 -1.857743e-01 -0.425124122
20 3.485063e-01 0.0089781736 -0.008180068 -2.345984e-01 -0.003748684
21 4.291995e-02 0.2733599693 -0.290399333 -1.159976e-01 -0.546465697
22 7.527641e-06 0.0008764661 -0.005797477 -5.392642e-05 -0.004697058
23 3.279646e-01 0.1482405271 -0.158642179 -3.376436e-01 -0.120972355
24 2.335902e-02 0.2044569486 -0.233822492 -7.271200e-02 -0.472041469
25 2.488912e-02 0.2112921915 -0.239529408 -7.643008e-02 -0.481082815
26 3.305961e-01 0.1430659182 -0.153133861 -3.367554e-01 -0.115360878
27 6.996050e-02 0.3267209724 -0.333810139 -1.277478e-02 -0.360544256
28 3.697711e-03 0.0677386518 -0.107382268 -1.382745e-04 -0.028962153
29 1.602838e-01 0.3525152587 -0.356977215 -2.764906e-01 -0.461795156
30 9.429876e-02 0.3508881318 -0.354022707 -2.082622e-02 -0.439897027
31 1.223036e-01 0.3606360268 -0.362878409 -3.215382e-02 -0.508926710
32 2.072019e-01 0.3187872119 -0.327786882 -3.119477e-01 -0.371500823
33 5.764014e-02 0.3067479621 -0.317490037 -9.343950e-03 -0.312912587
34 2.648576e-01 0.2513939487 -0.264277278 -1.285951e-01 -0.541550064
35 8.016769e-02 0.3390172205 -0.343988258 -1.594767e-02 -0.396128891
36 1.948154e-01 0.3297783990 -0.337571598 -7.222469e-02 -0.588794382
37 3.392636e-01 0.1252130591 -0.134006462 -2.200645e-01 -0.338577089
38 2.186971e-01 0.3074074008 -0.317457008 -3.185751e-01 -0.348283944
39 6.386541e-02 0.3176168542 -0.326350396 -1.548071e-01 -0.569646523
40 3.447918e-01 0.1129864533 -0.120815575 -3.296734e-01 -0.084487730
41 3.262940e-01 0.1514742551 -0.162075820 -3.381530e-01 -0.124524063
42 2.442291e-01 0.2783830069 -0.290342133 -3.304651e-01 -0.295930966
43 1.733393e-01 0.3453955758 -0.351067885 -2.876942e-01 -0.437623959
44 2.964178e-02 0.2306743304 -0.255570394 -3.255863e-03 -0.183536972
45 3.605765e-01 0.0708014583 -0.074824779 -2.630649e-01 -0.215616043
46 3.204143e-02 0.2395251689 -0.262837614 -9.298174e-02 -0.514706219
47 3.372268e-01 0.0053924513 -0.004646657 -2.167553e-01 -0.002057801
48 3.658413e-01 0.0457324170 -0.047379524 -2.956531e-01 -0.026781378
49 7.767693e-02 0.3363308212 -0.341751326 -1.514612e-02 -0.387759683
50 8.014647e-03 0.1106081689 -0.150825136 -3.042539e-02 -0.312672067
      d_y3_d_x2
1  0.3901083246
2  0.4976933692
3  0.4538180472
4  0.2097690589
5  0.3905351556
6  0.1540883666
7  0.0283912383
8  0.2361440548
9  0.4453484737
10 0.4068752267
11 0.5244770679
12 0.2823961636
13 0.3491159970
14 0.1126532519
15 0.3345042189
16 0.5221262890
17 0.5221842930
18 0.4717298385
19 0.4018382486
20 0.0012165804
21 0.5283221758
22 0.0220435518
23 0.0875151198
24 0.4749678438
25 0.4816140287
26 0.0826818551
27 0.3680158265
28 0.0701926442
29 0.4218168734
30 0.4221148378
31 0.4682078468
32 0.3286910106
33 0.3343496420
34 0.4927044673
35 0.3925162506
36 0.5235976290
37 0.3272971781
38 0.3050670493
39 0.5415919208
40 0.0569044619
41 0.0905951794
42 0.2524085675
43 0.3967870889
44 0.2345316689
45 0.2129895981
46 0.5060433879
47 0.0005616494
48 0.0141168596
49 0.3867950465
50 0.3535086387
> 
