
R version 2.13.2 (2011-09-30)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i686-pc-linux-gnu (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( "mvProbit" )
Loading required package: mvtnorm
Loading required package: maxLik
Loading required package: miscTools
Loading required package: bayesm
> 
> ## generate a simulated data set
> set.seed( 123 )
> # number of observations
> nObs <- 50
> 
> # generate explanatory variables
> xMat <- cbind( 
+    const = rep( 1, nObs ),
+    x1 = as.numeric( rnorm( nObs ) > 0 ),
+    x2 = rnorm( nObs ) )
> 
> # model coefficients
> beta <- cbind( c(  0.8,  1.2, -0.8 ),
+                c( -0.6,  1.0, -1.6 ),
+                c(  0.5, -0.6,  1.2 ) )
> 
> # covariance matrix of error terms
> sigma <- symMatrix( c( 1, 0.2, 0.4, 1, -0.1, 1 ) )
> 
> # generate dependent variables
> yMatLin <- xMat %*% beta 
> yMat <- ( yMatLin + rmvnorm( nObs, sigma = sigma ) ) > 0
> colnames( yMat ) <- paste( "y", 1:3, sep = "" )
> 
> # estimation with the BHHH algorithm, two-sided gradients
> estResultBHHH <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), startSigma = sigma, method = "BHHH",
+    data = as.data.frame( cbind( xMat, yMat ) ), tol = 0.5 )
> print( estResultBHHH )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), startSigma = sigma, method = "BHHH", 
    tol = 0.5)

Coefficients:
   b_1_0    b_1_1    b_1_2    b_2_0    b_2_1    b_2_2    b_3_0    b_3_1 
 1.02508  1.30536 -1.02809 -0.78248  1.14318 -1.66938  0.58229 -0.69667 
   b_3_2    R_1_2    R_1_3    R_2_3 
 1.23283  0.86322  0.36022 -0.08406 

> summary( estResultBHHH )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), startSigma = sigma, method = "BHHH", 
    tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0  1.02508    0.44548   2.301  0.0214 *
b_1_1  1.30536    0.73511   1.776  0.0758 .
b_1_2 -1.02809    0.68851  -1.493  0.1354  
b_2_0 -0.78248    0.38798  -2.017  0.0437 *
b_2_1  1.14318    0.53026   2.156  0.0311 *
b_2_2 -1.66938    0.81308  -2.053  0.0401 *
b_3_0  0.58229    0.64107   0.908  0.3637  
b_3_1 -0.69667    0.89818  -0.776  0.4380  
b_3_2  1.23283    0.62452   1.974  0.0484 *
R_1_2  0.86322   18.60071   0.046  0.9630  
R_1_3  0.36022    0.64712   0.557  0.5778  
R_2_3 -0.08406    0.34909  -0.241  0.8097  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

BHHH maximisation, 1 iterations
Return code 2: successive function values within tolerance limit
Log-likelihood: -56.90544 on 12 Df

> estResultBHHHA <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta, sigma[ lower.tri( sigma ) ] ), method = "BHHH",
+    data = as.data.frame( cbind( xMat, yMat ) ), tol = 0.5 )
> all.equal( estResultBHHH, estResultBHHHA )
[1] "Component 12: target, current do not match when deparsed"
> 
> # estimation with the BHHH algorithm, one-sided gradients
> estResultBHHH1 <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), startSigma = sigma, method = "BHHH",
+    data = as.data.frame( cbind( xMat, yMat ) ), tol = 0.5,
+    oneSidedGrad = TRUE )
> print( estResultBHHH1 )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), startSigma = sigma, method = "BHHH", 
    oneSidedGrad = TRUE, tol = 0.5)

Coefficients:
   b_1_0    b_1_1    b_1_2    b_2_0    b_2_1    b_2_2    b_3_0    b_3_1 
 1.02508  1.30536 -1.02809 -0.78248  1.14318 -1.66938  0.58229 -0.69667 
   b_3_2    R_1_2    R_1_3    R_2_3 
 1.23283  0.86322  0.36022 -0.08406 

> summary( estResultBHHH1 )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), startSigma = sigma, method = "BHHH", 
    oneSidedGrad = TRUE, tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0  1.02508    0.44548   2.301  0.0214 *
b_1_1  1.30536    0.73511   1.776  0.0758 .
b_1_2 -1.02809    0.68851  -1.493  0.1354  
b_2_0 -0.78248    0.38797  -2.017  0.0437 *
b_2_1  1.14318    0.53026   2.156  0.0311 *
b_2_2 -1.66938    0.81307  -2.053  0.0401 *
b_3_0  0.58229    0.64106   0.908  0.3637  
b_3_1 -0.69667    0.89817  -0.776  0.4380  
b_3_2  1.23283    0.62452   1.974  0.0484 *
R_1_2  0.86322   18.60040   0.046  0.9630  
R_1_3  0.36022    0.64712   0.557  0.5778  
R_2_3 -0.08406    0.34909  -0.241  0.8097  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

BHHH maximisation, 1 iterations
Return code 2: successive function values within tolerance limit
Log-likelihood: -56.90544 on 12 Df

> all.equal( estResultBHHH, estResultBHHH1 )
[1] "Component 2: Mean relative difference: 1.181367e-07"     
[2] "Component 3: Mean relative difference: 1.490048e-06"     
[3] "Component 4: Mean relative difference: 4.756807e-07"     
[4] "Component 11: Mean relative difference: 4.579023e-07"    
[5] "Component 12: target, current do not match when deparsed"
> 
> # estimation with the BFGS algorithm, two-sided gradients
> estResultBFGS <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), startSigma = sigma, 
+    data = as.data.frame( cbind( xMat, yMat ) ), 
+    tol = 0.5 )
> print( estResultBFGS )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), startSigma = sigma, tol = 0.5)

Coefficients:
   b_1_0    b_1_1    b_1_2    b_2_0    b_2_1    b_2_2    b_3_0    b_3_1 
 0.53607  1.16101 -1.14212 -0.44952  1.05496 -1.57624  0.40751 -0.85400 
   b_3_2    R_1_2    R_1_3    R_2_3 
 1.25958  0.29483  0.32822 -0.02382 

> summary( estResultBFGS )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), startSigma = sigma, tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0  0.53607    0.82709   0.648  0.5169  
b_1_1  1.16101    0.91515   1.269  0.2046  
b_1_2 -1.14212    0.93847  -1.217  0.2236  
b_2_0 -0.44952    0.79215  -0.567  0.5704  
b_2_1  1.05496    0.88398   1.193  0.2327  
b_2_2 -1.57624    0.73187  -2.154  0.0313 *
b_3_0  0.40751    0.48897   0.833  0.4046  
b_3_1 -0.85400    0.84871  -1.006  0.3143  
b_3_2  1.25958    0.68040   1.851  0.0641 .
R_1_2  0.29483    1.85817   0.159  0.8739  
R_1_3  0.32822    0.70923   0.463  0.6435  
R_2_3 -0.02382    0.34466  -0.069  0.9449  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

BFGS maximisation, 4 iterations
Return code 0: successful convergence 
Log-likelihood: -52.94456 on 12 Df

> 
> # estimation with the BFGS algorithm, one-sided gradients
> estResultBFGS1 <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), startSigma = sigma, 
+    data = as.data.frame( cbind( xMat, yMat ) ), 
+    tol = 0.5, oneSidedGrad = TRUE )
> print( estResultBFGS1 )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), startSigma = sigma, oneSidedGrad = TRUE, 
    tol = 0.5)

Coefficients:
   b_1_0    b_1_1    b_1_2    b_2_0    b_2_1    b_2_2    b_3_0    b_3_1 
 0.53607  1.16101 -1.14213 -0.44952  1.05496 -1.57624  0.40751 -0.85400 
   b_3_2    R_1_2    R_1_3    R_2_3 
 1.25958  0.29483  0.32822 -0.02382 

> summary( estResultBFGS1 )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), startSigma = sigma, oneSidedGrad = TRUE, 
    tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0  0.53607    0.82709   0.648  0.5169  
b_1_1  1.16101    0.91515   1.269  0.2046  
b_1_2 -1.14213    0.93847  -1.217  0.2236  
b_2_0 -0.44952    0.79215  -0.567  0.5704  
b_2_1  1.05496    0.88398   1.193  0.2327  
b_2_2 -1.57624    0.73187  -2.154  0.0313 *
b_3_0  0.40751    0.48897   0.833  0.4046  
b_3_1 -0.85400    0.84871  -1.006  0.3143  
b_3_2  1.25958    0.68040   1.851  0.0641 .
R_1_2  0.29483    1.85817   0.159  0.8739  
R_1_3  0.32822    0.70923   0.463  0.6435  
R_2_3 -0.02382    0.34466  -0.069  0.9449  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

BFGS maximisation, 4 iterations
Return code 0: successful convergence 
Log-likelihood: -52.94456 on 12 Df

> all.equal( estResultBFGS, estResultBFGS1 )
[1] "Component 2: Mean relative difference: 3.039429e-07"     
[2] "Component 3: Mean relative difference: 1.044097e-06"     
[3] "Component 4: Mean relative difference: 4.568584e-07"     
[4] "Component 12: Mean relative difference: 2.912419e-07"    
[5] "Component 13: target, current do not match when deparsed"
> 
> # estimation with the BFGS algorithm, one-sided gradients, no starting values
> estResultBFGS1a <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    data = as.data.frame( cbind( xMat, yMat ) ), 
+    tol = 0.5, oneSidedGrad = TRUE )
> print( estResultBFGS1a )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), oneSidedGrad = TRUE, tol = 0.5)

Coefficients:
   b_1_0    b_1_1    b_1_2    b_2_0    b_2_1    b_2_2    b_3_0    b_3_1 
 0.79353  1.88367 -1.74922 -0.40036  0.91577 -1.52106  0.97790 -1.69433 
   b_3_2    R_1_2    R_1_3    R_2_3 
 1.57625  0.75270  0.23721 -0.03453 

> summary( estResultBFGS1a )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), oneSidedGrad = TRUE, tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0  0.79353    0.90412   0.878  0.3801  
b_1_1  1.88367    0.90668   2.078  0.0378 *
b_1_2 -1.74922    0.97400  -1.796  0.0725 .
b_2_0 -0.40036    0.69056  -0.580  0.5621  
b_2_1  0.91577    0.97998   0.934  0.3501  
b_2_2 -1.52106    0.72006  -2.112  0.0347 *
b_3_0  0.97790    0.64497   1.516  0.1295  
b_3_1 -1.69433    0.94788  -1.787  0.0739 .
b_3_2  1.57625    0.73399   2.148  0.0318 *
R_1_2  0.75270    4.32730   0.174  0.8619  
R_1_3  0.23721    0.90535   0.262  0.7933  
R_2_3 -0.03453    0.35889  -0.096  0.9234  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

BFGS maximisation, 3 iterations
Return code 0: successful convergence 
Log-likelihood: -49.36404 on 12 Df

> 
> # estimation with the BFGS algorithm, one-sided gradients, no starting values for beta
> estResultBFGS1b <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    startSigma = sigma, data = as.data.frame( cbind( xMat, yMat ) ), 
+    tol = 0.5, oneSidedGrad = TRUE )
> print( estResultBFGS1b )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), startSigma = sigma, oneSidedGrad = TRUE, tol = 0.5)

Coefficients:
  b_1_0   b_1_1   b_1_2   b_2_0   b_2_1   b_2_2   b_3_0   b_3_1   b_3_2   R_1_2 
 0.8110  1.9060 -1.7627 -0.3770  0.9441 -1.5332  0.9372 -1.7498  1.6024  0.6817 
  R_1_3   R_2_3 
 0.4044  0.1663 

> summary( estResultBFGS1b )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), startSigma = sigma, oneSidedGrad = TRUE, tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0   0.8110     0.9297   0.872  0.3830  
b_1_1   1.9060     0.9160   2.081  0.0375 *
b_1_2  -1.7627     1.0131  -1.740  0.0819 .
b_2_0  -0.3770     0.7049  -0.535  0.5928  
b_2_1   0.9441     1.0345   0.913  0.3615  
b_2_2  -1.5332     0.7517  -2.040  0.0414 *
b_3_0   0.9372     0.6291   1.490  0.1363  
b_3_1  -1.7498     0.9996  -1.751  0.0800 .
b_3_2   1.6024     0.7848   2.042  0.0412 *
R_1_2   0.6817     3.4094   0.200  0.8415  
R_1_3   0.4044     0.8024   0.504  0.6143  
R_2_3   0.1663     0.3389   0.491  0.6235  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

BFGS maximisation, 3 iterations
Return code 0: successful convergence 
Log-likelihood: -49.57444 on 12 Df

> 
> # estimation with the BFGS algorithm, one-sided gradients, no starting values for sigma
> estResultBFGS1s <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), data = as.data.frame( cbind( xMat, yMat ) ), 
+    tol = 0.5, oneSidedGrad = TRUE )
> print( estResultBFGS1s )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), oneSidedGrad = TRUE, tol = 0.5)

Coefficients:
   b_1_0    b_1_1    b_1_2    b_2_0    b_2_1    b_2_2    b_3_0    b_3_1 
 0.55814  1.14958 -1.12747 -0.44426  1.07325 -1.57226  0.37255 -0.85470 
   b_3_2    R_1_2    R_1_3    R_2_3 
 1.23011  0.34981 -0.01177  0.09435 

> summary( estResultBFGS1s )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), oneSidedGrad = TRUE, tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0  0.55814    0.86615   0.644  0.5193  
b_1_1  1.14958    0.90607   1.269  0.2045  
b_1_2 -1.12747    0.94191  -1.197  0.2313  
b_2_0 -0.44426    0.85525  -0.519  0.6035  
b_2_1  1.07325    0.99314   1.081  0.2798  
b_2_2 -1.57226    0.78557  -2.001  0.0453 *
b_3_0  0.37255    0.56172   0.663  0.5072  
b_3_1 -0.85470    0.95214  -0.898  0.3694  
b_3_2  1.23011    0.71506   1.720  0.0854 .
R_1_2  0.34981    2.02289   0.173  0.8627  
R_1_3 -0.01177    0.70776  -0.017  0.9867  
R_2_3  0.09435    0.33920   0.278  0.7809  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

BFGS maximisation, 4 iterations
Return code 0: successful convergence 
Log-likelihood: -52.78274 on 12 Df

> 
> # estimation with the BFGS algorithm, Miwa algorithm for obtaining integrals
> estResultBFGSm <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), startSigma = sigma, 
+    data = as.data.frame( cbind( xMat, yMat ) ), 
+    tol = 0.5, algorithm = Miwa( steps = 64 ) )
Warning message:
In log(pmvnormWrap(upper = xBetaTmp, sigma = sigmaTmp, algorithm = algorithm,  :
  NaNs produced
> print( estResultBFGSm )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), startSigma = sigma, algorithm = Miwa(steps = 64), 
    tol = 0.5)

Coefficients:
   b_1_0    b_1_1    b_1_2    b_2_0    b_2_1    b_2_2    b_3_0    b_3_1 
 0.53609  1.16102 -1.14213 -0.44952  1.05496 -1.57624  0.40753 -0.85400 
   b_3_2    R_1_2    R_1_3    R_2_3 
 1.25960  0.29491  0.32819 -0.02386 

> summary( estResultBFGSm )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), startSigma = sigma, algorithm = Miwa(steps = 64), 
    tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0  0.53609    0.82702   0.648  0.5168  
b_1_1  1.16102    0.91511   1.269  0.2045  
b_1_2 -1.14213    0.93837  -1.217  0.2235  
b_2_0 -0.44952    0.79215  -0.567  0.5704  
b_2_1  1.05496    0.88386   1.194  0.2326  
b_2_2 -1.57624    0.73173  -2.154  0.0312 *
b_3_0  0.40753    0.48894   0.834  0.4046  
b_3_1 -0.85400    0.84860  -1.006  0.3142  
b_3_2  1.25960    0.68024   1.852  0.0641 .
R_1_2  0.29491    1.85789   0.159  0.8739  
R_1_3  0.32819    0.70903   0.463  0.6435  
R_2_3 -0.02386    0.34468  -0.069  0.9448  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

BFGS maximisation, 4 iterations
Return code 0: successful convergence 
Log-likelihood: -52.94417 on 12 Df

> all.equal( estResultBFGS, estResultBFGSm )
[1] "Component 1: Mean relative difference: 7.343945e-06"     
[2] "Component 2: Mean relative difference: 2.68304e-05"      
[3] "Component 3: Mean relative difference: 0.0001800706"     
[4] "Component 4: Mean relative difference: 0.0001779414"     
[5] "Component 12: Mean relative difference: 0.000115282"     
[6] "Component 13: target, current do not match when deparsed"
> 
> # estimation with the BFGS algorithm, GHK algorithm for obtaining integrals
> estResultBFGSg <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), startSigma = sigma, 
+    data = as.data.frame( cbind( xMat, yMat ) ), 
+    tol = 0.5, algorithm = "GHK" )
There were 50 or more warnings (use warnings() to see the first 50)
> print( estResultBFGSg )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), startSigma = sigma, algorithm = "GHK", 
    tol = 0.5)

Coefficients:
   b_1_0    b_1_1    b_1_2    b_2_0    b_2_1    b_2_2    b_3_0    b_3_1 
 0.53597  1.16071 -1.14239 -0.45176  1.05313 -1.57570  0.40385 -0.85710 
   b_3_2    R_1_2    R_1_3    R_2_3 
 1.25977  0.29530  0.32495 -0.02085 

> summary( estResultBFGSg )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), startSigma = sigma, algorithm = "GHK", 
    tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0  0.53597    0.82729   0.648  0.5171  
b_1_1  1.16071    0.91440   1.269  0.2043  
b_1_2 -1.14239    0.93839  -1.217  0.2235  
b_2_0 -0.45176    0.80664  -0.560  0.5754  
b_2_1  1.05313    0.86861   1.212  0.2253  
b_2_2 -1.57570    0.70696  -2.229  0.0258 *
b_3_0  0.40385    0.48737   0.829  0.4073  
b_3_1 -0.85710    0.84821  -1.010  0.3123  
b_3_2  1.25977    0.67819   1.858  0.0632 .
R_1_2  0.29530    1.85491   0.159  0.8735  
R_1_3  0.32495    0.70449   0.461  0.6446  
R_2_3 -0.02085    0.34616  -0.060  0.9520  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

BFGS maximisation, 4 iterations
Return code 0: successful convergence 
Log-likelihood: -52.93771 on 12 Df

> all.equal( estResultBFGS, estResultBFGSg )
[1] "Component 1: Mean relative difference: 0.000129477"      
[2] "Component 2: Mean relative difference: 0.00208213"       
[3] "Component 3: Mean relative difference: 0.01734211"       
[4] "Component 4: Mean relative difference: 0.01316397"       
[5] "Component 12: Mean relative difference: 0.00685237"      
[6] "Component 13: target, current do not match when deparsed"
> all.equal( estResultBFGSm, estResultBFGSg )
[1] "Component 1: Mean relative difference: 0.000122134"      
[2] "Component 2: Mean relative difference: 0.002077232"      
[3] "Component 3: Mean relative difference: 0.01738212"       
[4] "Component 4: Mean relative difference: 0.01309901"       
[5] "Component 12: Mean relative difference: 0.006838736"     
[6] "Component 13: target, current do not match when deparsed"
> 
> # estimation with the Nelder-Mead algorithm
> estResultNM <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), startSigma = sigma, 
+    data = as.data.frame( cbind( xMat, yMat ) ), 
+    method = "NM", reltol = 0.05 )
> print( estResultNM )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), startSigma = sigma, method = "NM", 
    reltol = 0.05)

Coefficients:
b_1_0 b_1_1 b_1_2 b_2_0 b_2_1 b_2_2 b_3_0 b_3_1 b_3_2 R_1_2 R_1_3 R_2_3 
 0.80  1.20 -0.80 -0.44  1.00 -1.60  0.50 -0.60  1.20  0.20  0.40 -0.10 

> summary( estResultNM )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), startSigma = sigma, method = "NM", 
    reltol = 0.05)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0   0.8000     1.0541   0.759  0.4479  
b_1_1   1.2000     0.7460   1.609  0.1077  
b_1_2  -0.8000     0.9185  -0.871  0.3838  
b_2_0  -0.4400     0.7968  -0.552  0.5808  
b_2_1   1.0000     0.8707   1.149  0.2507  
b_2_2  -1.6000     0.6578  -2.432  0.0150 *
b_3_0   0.5000     0.5151   0.971  0.3317  
b_3_1  -0.6000     0.7708  -0.778  0.4363  
b_3_2   1.2000     0.6109   1.964  0.0495 *
R_1_2   0.2000     2.4163   0.083  0.9340  
R_1_3   0.4000     0.7321   0.546  0.5848  
R_2_3  -0.1000     0.3416  -0.293  0.7697  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Nelder-Mead maximisation, 13 iterations
Return code 0: successful convergence 
Log-likelihood: -56.94782 on 12 Df

> 
> # marginal effects based on estimated coefficients with covariance matrix
> # unconditional marginal effects
> margEffUnc <- margEff( estResultBFGS, calcVCov = TRUE )
> print( margEffUnc )
      d_y1_d_x1    d_y2_d_x1    d_y3_d_x1    d_y1_d_x2     d_y2_d_x2
1  0.3229491571 0.3836676992 -0.316955571 -0.441979916 -0.4386127078
2  0.2429445847 0.3993797590 -0.330144619 -0.387614512 -0.5794260400
3  0.2388601819 0.3982789455 -0.329783586 -0.099223749 -0.5013923968
4  0.4010839952 0.0557836101 -0.084205830 -0.451571736 -0.1886322555
5  0.1883227203 0.3691077222 -0.316570405 -0.067411731 -0.3961556790
6  0.3702088341 0.0348830182 -0.061413065 -0.455364197 -0.1278614687
7  0.0103207595 0.0220458595 -0.053123552 -0.001122225 -0.0060669427
8  0.4007100991 0.2907940042 -0.259618854 -0.451711635 -0.2456774131
9  0.2866645193 0.3996281228 -0.327737008 -0.421511449 -0.5108161192
10 0.3126554267 0.3897239251 -0.320854424 -0.436950408 -0.4603049276
11 0.3559814758 0.3554683195 -0.299468024 -0.205103323 -0.6288130112
12 0.1219655175 0.2849034003 -0.270662367 -0.034586201 -0.2369272203
13 0.1607955228 0.3407304015 -0.301945123 -0.052636441 -0.3318476745
14 0.0425053789 0.1103217794 -0.148796997 -0.007619505 -0.0545819828
15 0.0374442582 0.0966390781 -0.136761212 -0.096792632 -0.2915498518
16 0.3364458707 0.3738145586 -0.310770786 -0.183076398 -0.6237777824
17 0.3723866025 0.3359155654 -0.287500211 -0.225743149 -0.6256260659
18 0.2663398659 0.4021325788 -0.330275056 -0.406929888 -0.5455404372
19 0.4376429542 0.1696359685 -0.178946449 -0.370373203 -0.4388108527
20 0.2241585804 0.0042036728 -0.014953502 -0.089300446 -0.0007183302
21 0.1243685669 0.2889115851 -0.273009380 -0.249665699 -0.5965848233
22 0.0007459368 0.0006997555 -0.005794037 -0.002963512 -0.0038764260
23 0.4382229462 0.1426446470 -0.158983664 -0.377686061 -0.0793317558
24 0.0830536061 0.2095390165 -0.223402595 -0.184151430 -0.5029618392
25 0.0865903764 0.2172089609 -0.228508578 -0.190194230 -0.5140300922
26 0.4378382910 0.1365702837 -0.154340785 -0.372385737 -0.0744061888
27 0.1729600304 0.3543882323 -0.309111595 -0.058957089 -0.3607121362
28 0.0257893979 0.0644472362 -0.105597216 -0.003833087 -0.0256483436
29 0.3029664390 0.3943070184 -0.323906809 -0.431637731 -0.4798749184
30 0.2118732333 0.3863181844 -0.324795263 -0.081441034 -0.4476780388
31 0.2527667060 0.4012707688 -0.330599116 -0.109160768 -0.5263904901
32 0.3573773964 0.3539600682 -0.298544079 -0.453545721 -0.3597566943
33 0.1516902826 0.3293284563 -0.295806452 -0.048116319 -0.3098804129
34 0.4109693775 0.2693770277 -0.246106416 -0.287100465 -0.5780744976
35 0.1897254894 0.3703130155 -0.317166727 -0.068210588 -0.3993266523
36 0.3438409908 0.3674584553 -0.306835661 -0.191130998 -0.6266939812
37 0.4348121019 0.1159357570 -0.138075145 -0.412808406 -0.3345517685
38 0.3693685444 0.3398244945 -0.289893267 -0.455294843 -0.3300385704
39 0.1625954940 0.3428642991 -0.303078714 -0.301623340 -0.6275330282
40 0.4310083028 0.1021309736 -0.126696301 -0.337178116 -0.0488785748
41 0.4383602628 0.1464601354 -0.161869641 -0.380895849 -0.0824913410
42 0.3938189786 0.3033933328 -0.267470489 -0.453789429 -0.2652455675
43 0.3189542362 0.3861651946 -0.318550501 -0.440105656 -0.4471386008
44 0.0971786804 0.2391890488 -0.242745143 -0.024716381 -0.1761938533
45 0.4025240934 0.0571278504 -0.085567351 -0.451004212 -0.1923211012
46 0.1023270344 0.2493442534 -0.249136290 -0.216048167 -0.5558718553
47 0.1866549089 0.0021906375 -0.009700155 -0.066467854 -0.0003164631
48 0.3664195840 0.0330393066 -0.059215375 -0.217972882 -0.0103701668
49 0.1856983820 0.3667908424 -0.315417388 -0.065929410 -0.3901921735
50 0.0417272238 0.1082331002 -0.146997339 -0.105894033 -0.3177684702
     d_y3_d_x2
1  0.385921457
2  0.468985619
3  0.443346687
4  0.222238974
5  0.384718603
6  0.172171936
7  0.028392575
8  0.261220788
9  0.428728212
10 0.398908844
11 0.502249044
12 0.280689477
13 0.345312727
14 0.112624216
15 0.322287902
16 0.501467723
17 0.499011308
18 0.449048188
19 0.389108071
20 0.005756040
21 0.491440700
22 0.022018756
23 0.123707351
24 0.446573484
25 0.452240875
26 0.118602809
27 0.363374398
28 0.070196017
29 0.410521296
30 0.414264757
31 0.456293194
32 0.337325583
33 0.331118108
34 0.470092740
35 0.386586180
36 0.502296099
37 0.324544502
38 0.318287911
39 0.502499069
40 0.090013131
41 0.126925752
42 0.274927428
43 0.391041960
44 0.233697242
45 0.225088604
46 0.472883551
47 0.003381937
48 0.032673430
49 0.381188131
50 0.339567947
> print( attr( margEffUnc, "vcov" )[ 1:5, , ] )
, , d_y1_d_x1

   d_y1_d_x1    d_y2_d_x1    d_y3_d_x1     d_y1_d_x2    d_y2_d_x2    d_y3_d_x2
1 0.03877687 -0.016279760 -0.006506543 -0.0085604628 -0.019544413  0.005454495
2 0.04152043 -0.040327021 -0.019207150  0.0004039578  0.007688329  0.012658695
3 0.04198335 -0.041152336 -0.019563310 -0.0163568642  0.028730816  0.004473284
4 0.07492160 -0.005167856  0.014058108 -0.0450827532  0.010013811 -0.020383802
5 0.04747089 -0.045578203 -0.021184702 -0.0229131266  0.016836757 -0.004204670

, , d_y2_d_x1

     d_y1_d_x1  d_y2_d_x1    d_y3_d_x1    d_y1_d_x2    d_y2_d_x2    d_y3_d_x2
1 -0.016279760 0.06838234  0.032611453 -0.030779758  0.036193890 -0.017506716
2 -0.040327021 0.09950789  0.038272789 -0.009152435 -0.007958842 -0.035968092
3 -0.041152336 0.10008456  0.037883511  0.029079583 -0.029120435 -0.014559543
4 -0.005167856 0.01254829 -0.003709549  0.016813011 -0.027228878  0.005377605
5 -0.045578203 0.09564278  0.028093463  0.025805563 -0.009550308  0.000680065

, , d_y3_d_x1

     d_y1_d_x1    d_y2_d_x1  d_y3_d_x1    d_y1_d_x2     d_y2_d_x2    d_y3_d_x2
1 -0.006506543  0.032611453 0.08668897 -0.031953129  0.0071230868  0.006490666
2 -0.019207150  0.038272789 0.09482705 -0.012355304 -0.0219639556 -0.020627972
3 -0.019563310  0.037883511 0.09443552  0.021009354 -0.0158719843 -0.006796949
4  0.014058108 -0.003709549 0.01349634 -0.003784978  0.0074849823 -0.017361398
5 -0.021184702  0.028093463 0.08326911  0.017102238 -0.0006137289  0.011688692

, , d_y1_d_x2

      d_y1_d_x1    d_y2_d_x1    d_y3_d_x1  d_y1_d_x2    d_y2_d_x2   d_y3_d_x2
1 -0.0085604628 -0.030779758 -0.031953129 0.10518187 -0.014240257 0.003875778
2  0.0004039578 -0.009152435 -0.012355304 0.04266973  0.010026482 0.004309213
3 -0.0163568642  0.029079583  0.021009354 0.03131155 -0.018749379 0.008669930
4 -0.0450827532  0.016813011 -0.003784978 0.14022295 -0.034603781 0.009482432
5 -0.0229131266  0.025805563  0.017102238 0.02538458 -0.007774925 0.010201668

, , d_y2_d_x2

     d_y1_d_x1    d_y2_d_x1     d_y3_d_x1    d_y1_d_x2  d_y2_d_x2    d_y3_d_x2
1 -0.019544413  0.036193890  0.0071230868 -0.014240257 0.04657781 -0.013946669
2  0.007688329 -0.007958842 -0.0219639556  0.010026482 0.03455111 -0.005994564
3  0.028730816 -0.029120435 -0.0158719843 -0.018749379 0.07267806 -0.010834351
4  0.010013811 -0.027228878  0.0074849823 -0.034603781 0.05971572 -0.010801635
5  0.016836757 -0.009550308 -0.0006137289 -0.007774925 0.04532259 -0.007452096

, , d_y3_d_x2

     d_y1_d_x1    d_y2_d_x1    d_y3_d_x1   d_y1_d_x2    d_y2_d_x2  d_y3_d_x2
1  0.005454495 -0.017506716  0.006490666 0.003875778 -0.013946669 0.02722081
2  0.012658695 -0.035968092 -0.020627972 0.004309213 -0.005994564 0.05602004
3  0.004473284 -0.014559543 -0.006796949 0.008669930 -0.010834351 0.04246623
4 -0.020383802  0.005377605 -0.017361398 0.009482432 -0.010801635 0.02390270
5 -0.004204670  0.000680065  0.011688692 0.010201668 -0.007452096 0.02699081

> print( drop( attr( margEffUnc, "vcov" )[ nObs, , ] ) )
             d_y1_d_x1    d_y2_d_x1    d_y3_d_x1    d_y1_d_x2    d_y2_d_x2
d_y1_d_x1  0.020288104 -0.002813578 -0.001572159 -0.031748650  0.014214701
d_y2_d_x1 -0.002813578  0.011445332 -0.006468166  0.005123624 -0.020289312
d_y3_d_x1 -0.001572159 -0.006468166  0.021217346  0.002632169  0.008919625
d_y1_d_x2 -0.031748650  0.005123624  0.002632169  0.050185078 -0.024144037
d_y2_d_x2  0.014214701 -0.020289312  0.008919625 -0.024144037  0.046800960
d_y3_d_x2  0.002396674  0.003782691 -0.015845524 -0.003700024 -0.004816391
             d_y3_d_x2
d_y1_d_x1  0.002396674
d_y2_d_x1  0.003782691
d_y3_d_x1 -0.015845524
d_y1_d_x2 -0.003700024
d_y2_d_x2 -0.004816391
d_y3_d_x2  0.019256472
> summary( margEffUnc )
                Estimate Std. error z value Pr(> z)   
1: d_y1_d_x1   0.3229492  0.1969184   1.640 0.10100   
1: d_y2_d_x1   0.3836677  0.2615002   1.467 0.14233   
1: d_y3_d_x1  -0.3169556  0.2944299  -1.077 0.28170   
1: d_y1_d_x2  -0.4419799  0.3243175  -1.363 0.17295   
1: d_y2_d_x2  -0.4386127  0.2158189  -2.032 0.04212 * 
1: d_y3_d_x2   0.3859215  0.1649873   2.339 0.01933 * 
2: d_y1_d_x1   0.2429446  0.2037656   1.192 0.23315   
2: d_y2_d_x1   0.3993798  0.3154487   1.266 0.20549   
2: d_y3_d_x1  -0.3301446  0.3079400  -1.072 0.28367   
2: d_y1_d_x2  -0.3876145  0.2065665  -1.876 0.06059 . 
2: d_y2_d_x2  -0.5794260  0.1858793  -3.117 0.00183 **
2: d_y3_d_x2   0.4689856  0.2366855   1.981 0.04754 * 
3: d_y1_d_x1   0.2388602  0.2048984   1.166 0.24372   
3: d_y2_d_x1   0.3982789  0.3163614   1.259 0.20805   
3: d_y3_d_x1  -0.3297836  0.3073036  -1.073 0.28320   
3: d_y1_d_x2  -0.0992237  0.1769507  -0.561 0.57497   
3: d_y2_d_x2  -0.5013924  0.2695887  -1.860 0.06291 . 
3: d_y3_d_x2   0.4433467  0.2060734   2.151 0.03144 * 
4: d_y1_d_x1   0.4010840  0.2737181   1.465 0.14283   
4: d_y2_d_x1   0.0557836  0.1120191   0.498 0.61850   
4: d_y3_d_x1  -0.0842058  0.1161738  -0.725 0.46856   
4: d_y1_d_x2  -0.4515717  0.3744635  -1.206 0.22785   
4: d_y2_d_x2  -0.1886323  0.2443680  -0.772 0.44016   
4: d_y3_d_x2   0.2222390  0.1546050   1.437 0.15059   
5: d_y1_d_x1   0.1883227  0.2178782   0.864 0.38740   
5: d_y2_d_x1   0.3691077  0.3092617   1.194 0.23267   
5: d_y3_d_x1  -0.3165704  0.2885639  -1.097 0.27262   
5: d_y1_d_x2  -0.0674117  0.1593254  -0.423 0.67222   
5: d_y2_d_x2  -0.3961557  0.2128910  -1.861 0.06277 . 
5: d_y3_d_x2   0.3847186  0.1642888   2.342 0.01920 * 
6: d_y1_d_x1   0.3702088  0.2479950   1.493 0.13549   
6: d_y2_d_x1   0.0348830  0.0858155   0.406 0.68438   
6: d_y3_d_x1  -0.0614131  0.1004444  -0.611 0.54093   
6: d_y1_d_x2  -0.4553642  0.3716905  -1.225 0.22053   
6: d_y2_d_x2  -0.1278615  0.2191677  -0.583 0.55963   
6: d_y3_d_x2   0.1721719  0.1590498   1.083 0.27903   
7: d_y1_d_x1   0.0103208  0.0578293   0.178 0.85835   
7: d_y2_d_x1   0.0220459  0.0389256   0.566 0.57115   
7: d_y3_d_x1  -0.0531236  0.0945413  -0.562 0.57418   
7: d_y1_d_x2  -0.0011222  0.0099550  -0.113 0.91024   
7: d_y2_d_x2  -0.0060669  0.0203080  -0.299 0.76513   
7: d_y3_d_x2   0.0283926  0.0809163   0.351 0.72567   
8: d_y1_d_x1   0.4007101  0.2513387   1.594 0.11087   
8: d_y2_d_x1   0.2907940  0.1839648   1.581 0.11395   
8: d_y3_d_x1  -0.2596189  0.2327124  -1.116 0.26458   
8: d_y1_d_x2  -0.4517116  0.3778807  -1.195 0.23194   
8: d_y2_d_x2  -0.2456774  0.2896792  -0.848 0.39638   
8: d_y3_d_x2   0.2612208  0.1389382   1.880 0.06009 . 
9: d_y1_d_x1   0.2866645  0.1948097   1.472 0.14115   
9: d_y2_d_x1   0.3996281  0.2934836   1.362 0.17330   
9: d_y3_d_x1  -0.3277370  0.3066371  -1.069 0.28516   
9: d_y1_d_x2  -0.4215114  0.2733550  -1.542 0.12308   
9: d_y2_d_x2  -0.5108161  0.1770212  -2.886 0.00391 **
9: d_y3_d_x2   0.4287282  0.1975083   2.171 0.02996 * 
10: d_y1_d_x1  0.3126554  0.1950652   1.603 0.10897   
10: d_y2_d_x1  0.3897239  0.2715355   1.435 0.15121   
10: d_y3_d_x1 -0.3208544  0.2989128  -1.073 0.28309   
10: d_y1_d_x2 -0.4369504  0.3106999  -1.406 0.15962   
10: d_y2_d_x2 -0.4603049  0.2025909  -2.272 0.02308 * 
10: d_y3_d_x2  0.3989088  0.1736260   2.298 0.02159 * 
11: d_y1_d_x1  0.3559815  0.2109879   1.687 0.09156 . 
11: d_y2_d_x1  0.3554683  0.2265475   1.569 0.11663   
11: d_y3_d_x1 -0.2994680  0.2745089  -1.091 0.27531   
11: d_y1_d_x2 -0.2051033  0.1687492  -1.215 0.22420   
11: d_y2_d_x2 -0.6288130  0.2931245  -2.145 0.03194 * 
11: d_y3_d_x2  0.5022490  0.2713812   1.851 0.06421 . 
12: d_y1_d_x1  0.1219655  0.2167209   0.563 0.57359   
12: d_y2_d_x1  0.2849034  0.2455108   1.160 0.24586   
12: d_y3_d_x1 -0.2706624  0.2345246  -1.154 0.24846   
12: d_y1_d_x2 -0.0345862  0.1172223  -0.295 0.76796   
12: d_y2_d_x2 -0.2369272  0.1553421  -1.525 0.12721   
12: d_y3_d_x2  0.2806895  0.1495339   1.877 0.06050 . 
13: d_y1_d_x1  0.1607955  0.2212149   0.727 0.46730   
13: d_y2_d_x1  0.3407304  0.2902802   1.174 0.24048   
13: d_y3_d_x1 -0.3019451  0.2699648  -1.118 0.26337   
13: d_y1_d_x2 -0.0526364  0.1441449  -0.365 0.71499   
13: d_y2_d_x2 -0.3318477  0.1847658  -1.796 0.07249 . 
13: d_y3_d_x2  0.3453127  0.1505265   2.294 0.02179 * 
14: d_y1_d_x1  0.0425054  0.1438735   0.295 0.76766   
14: d_y2_d_x1  0.1103218  0.1084386   1.017 0.30898   
14: d_y3_d_x1 -0.1487970  0.1464968  -1.016 0.30977   
14: d_y1_d_x2 -0.0076195  0.0438314  -0.174 0.86199   
14: d_y2_d_x2 -0.0545820  0.0865420  -0.631 0.52824   
14: d_y3_d_x2  0.1126242  0.1559835   0.722 0.47028   
15: d_y1_d_x1  0.0374443  0.1341184   0.279 0.78010   
15: d_y2_d_x1  0.0966391  0.0989303   0.977 0.32865   
15: d_y3_d_x1 -0.1367612  0.1410156  -0.970 0.33213   
15: d_y1_d_x2 -0.0967926  0.2197588  -0.440 0.65961   
15: d_y2_d_x2 -0.2915499  0.2035989  -1.432 0.15215   
15: d_y3_d_x2  0.3222879  0.1370546   2.352 0.01870 * 
16: d_y1_d_x1  0.3364459  0.2011069   1.673 0.09433 . 
16: d_y2_d_x1  0.3738146  0.2475442   1.510 0.13102   
16: d_y3_d_x1 -0.3107708  0.2873205  -1.082 0.27942   
16: d_y1_d_x2 -0.1830764  0.1735334  -1.055 0.29143   
16: d_y2_d_x2 -0.6237778  0.3086749  -2.021 0.04330 * 
16: d_y3_d_x2  0.5014677  0.2696797   1.859 0.06296 . 
17: d_y1_d_x1  0.3723866  0.2229194   1.670 0.09482 . 
17: d_y2_d_x1  0.3359156  0.2092497   1.605 0.10842   
17: d_y3_d_x1 -0.2875002  0.2613449  -1.100 0.27130   
17: d_y1_d_x2 -0.2257431  0.1652977  -1.366 0.17204   
17: d_y2_d_x2 -0.6256261  0.2720334  -2.300 0.02146 * 
17: d_y3_d_x2  0.4990113  0.2683471   1.860 0.06295 . 
18: d_y1_d_x1  0.2663399  0.1979782   1.345 0.17853   
18: d_y2_d_x1  0.4021326  0.3063279   1.313 0.18927   
18: d_y3_d_x1 -0.3302751  0.3090795  -1.069 0.28526   
18: d_y1_d_x2 -0.4069299  0.2422654  -1.680 0.09302 . 
18: d_y2_d_x2 -0.5455404  0.1716267  -3.179 0.00148 **
18: d_y3_d_x2  0.4490482  0.2164307   2.075 0.03801 * 
19: d_y1_d_x1  0.4376430  0.3057075   1.432 0.15227   
19: d_y2_d_x1  0.1696360  0.1652745   1.026 0.30471   
19: d_y3_d_x1 -0.1789464  0.1684535  -1.062 0.28810   
19: d_y1_d_x2 -0.3703732  0.2551284  -1.452 0.14658   
19: d_y2_d_x2 -0.4388109  0.1792129  -2.449 0.01434 * 
19: d_y3_d_x2  0.3891081  0.1720112   2.262 0.02369 * 
20: d_y1_d_x1  0.2241586  0.2203192   1.017 0.30895   
20: d_y2_d_x1  0.0042037  0.0189008   0.222 0.82400   
20: d_y3_d_x1 -0.0149535  0.0440352  -0.340 0.73417   
20: d_y1_d_x2 -0.0893004  0.1579429  -0.565 0.57180   
20: d_y2_d_x2 -0.0007183  0.0053674  -0.134 0.89353   
20: d_y3_d_x2  0.0057560  0.0253598   0.227 0.82044   
21: d_y1_d_x1  0.1243686  0.2174053   0.572 0.56728   
21: d_y2_d_x1  0.2889116  0.2488541   1.161 0.24565   
21: d_y3_d_x1 -0.2730094  0.2369908  -1.152 0.24933   
21: d_y1_d_x2 -0.2496657  0.1727234  -1.445 0.14833   
21: d_y2_d_x2 -0.5965848  0.3368275  -1.771 0.07653 . 
21: d_y3_d_x2  0.4914407  0.2550404   1.927 0.05399 . 
22: d_y1_d_x1  0.0007459  0.0072977   0.102 0.91859   
22: d_y2_d_x1  0.0006998  0.0029467   0.237 0.81229   
22: d_y3_d_x1 -0.0057940  0.0229384  -0.253 0.80058   
22: d_y1_d_x2 -0.0029635  0.0244689  -0.121 0.90360   
22: d_y2_d_x2 -0.0038764  0.0136505  -0.284 0.77643   
22: d_y3_d_x2  0.0220188  0.0686925   0.321 0.74856   
23: d_y1_d_x1  0.4382229  0.3090674   1.418 0.15622   
23: d_y2_d_x1  0.1426446  0.1604881   0.889 0.37410   
23: d_y3_d_x1 -0.1589837  0.1565509  -1.016 0.30985   
23: d_y1_d_x2 -0.3776861  0.2689832  -1.404 0.16028   
23: d_y2_d_x2 -0.0793318  0.1962802  -0.404 0.68608   
23: d_y3_d_x2  0.1237074  0.1476996   0.838 0.40228   
24: d_y1_d_x1  0.0830536  0.1955292   0.425 0.67101   
24: d_y2_d_x1  0.2095390  0.1829217   1.146 0.25200   
24: d_y3_d_x1 -0.2234026  0.1914376  -1.167 0.24322   
24: d_y1_d_x2 -0.1841514  0.2157799  -0.853 0.39343   
24: d_y2_d_x2 -0.5029618  0.3123984  -1.610 0.10740   
24: d_y3_d_x2  0.4465735  0.2031543   2.198 0.02793 * 
25: d_y1_d_x1  0.0865904  0.1983706   0.437 0.66247   
25: d_y2_d_x1  0.2172090  0.1891481   1.148 0.25082   
25: d_y3_d_x1 -0.2285086  0.1954931  -1.169 0.24245   
25: d_y1_d_x2 -0.1901942  0.2126062  -0.895 0.37101   
25: d_y2_d_x2 -0.5140301  0.3173586  -1.620 0.10529   
25: d_y3_d_x2  0.4522409  0.2089828   2.164 0.03046 * 
26: d_y1_d_x1  0.4378383  0.3091474   1.416 0.15669   
26: d_y2_d_x1  0.1365703  0.1589866   0.859 0.39034   
26: d_y3_d_x1 -0.1543408  0.1539501  -1.003 0.31608   
26: d_y1_d_x2 -0.3723857  0.2611060  -1.426 0.15381   
26: d_y2_d_x2 -0.0744062  0.1893737  -0.393 0.69439   
26: d_y3_d_x2  0.1186028  0.1466654   0.809 0.41871   
27: d_y1_d_x1  0.1729600  0.2202574   0.785 0.43230   
27: d_y2_d_x1  0.3543882  0.3000078   1.181 0.23750   
27: d_y3_d_x1 -0.3091116  0.2788965  -1.108 0.26772   
27: d_y1_d_x2 -0.0589571  0.1515984  -0.389 0.69735   
27: d_y2_d_x2 -0.3607121  0.1965386  -1.835 0.06646 . 
27: d_y3_d_x2  0.3633744  0.1553961   2.338 0.01937 * 
28: d_y1_d_x1  0.0257894  0.1073759   0.240 0.81019   
28: d_y2_d_x1  0.0644472  0.0761722   0.846 0.39751   
28: d_y3_d_x1 -0.1055972  0.1270193  -0.831 0.40578   
28: d_y1_d_x2 -0.0038331  0.0263374  -0.146 0.88429   
28: d_y2_d_x2 -0.0256483  0.0557281  -0.460 0.64534   
28: d_y3_d_x2  0.0701960  0.1320859   0.531 0.59511   
29: d_y1_d_x1  0.3029664  0.1942862   1.559 0.11891   
29: d_y2_d_x1  0.3943070  0.2803474   1.406 0.15958   
29: d_y3_d_x1 -0.3239068  0.3023941  -1.071 0.28411   
29: d_y1_d_x2 -0.4316377  0.2973664  -1.452 0.14663   
29: d_y2_d_x2 -0.4798749  0.1913417  -2.508 0.01214 * 
29: d_y3_d_x2  0.4105213  0.1822961   2.252 0.02433 * 
30: d_y1_d_x1  0.2118732  0.2124133   0.997 0.31854   
30: d_y2_d_x1  0.3863182  0.3169271   1.219 0.22286   
30: d_y3_d_x1 -0.3247953  0.2998024  -1.083 0.27865   
30: d_y1_d_x2 -0.0814410  0.1691704  -0.481 0.63022   
30: d_y2_d_x2 -0.4476780  0.2396194  -1.868 0.06172 . 
30: d_y3_d_x2  0.4142648  0.1822635   2.273 0.02303 * 
31: d_y1_d_x1  0.2527667  0.2011528   1.257 0.20890   
31: d_y2_d_x1  0.4012708  0.3124087   1.284 0.19899   
31: d_y3_d_x1 -0.3305991  0.3089367  -1.070 0.28457   
31: d_y1_d_x2 -0.1091608  0.1797601  -0.607 0.54368   
31: d_y2_d_x2 -0.5263905  0.2833655  -1.858 0.06322 . 
31: d_y3_d_x2  0.4562932  0.2183515   2.090 0.03664 * 
32: d_y1_d_x1  0.3573774  0.2118731   1.687 0.09165 . 
32: d_y2_d_x1  0.3539601  0.2250456   1.573 0.11576   
32: d_y3_d_x1 -0.2985441  0.2734764  -1.092 0.27498   
32: d_y1_d_x2 -0.4535457  0.3611997  -1.256 0.20924   
32: d_y2_d_x2 -0.3597567  0.2601907  -1.383 0.16677   
32: d_y3_d_x2  0.3373256  0.1429310   2.360 0.01827 * 
33: d_y1_d_x1  0.1516903  0.2212870   0.685 0.49303   
33: d_y2_d_x1  0.3293285  0.2816236   1.169 0.24225   
33: d_y3_d_x1 -0.2958065  0.2625654  -1.127 0.25991   
33: d_y1_d_x2 -0.0481163  0.1386534  -0.347 0.72857   
33: d_y2_d_x2 -0.3098804  0.1767189  -1.754 0.07951 . 
33: d_y3_d_x2  0.3311181  0.1483289   2.232 0.02559 * 
34: d_y1_d_x1  0.4109694  0.2640717   1.556 0.11964   
34: d_y2_d_x1  0.2693770  0.1773855   1.519 0.12886   
34: d_y3_d_x1 -0.2461064  0.2199809  -1.119 0.26324   
34: d_y1_d_x2 -0.2871005  0.1749986  -1.641 0.10088   
34: d_y2_d_x2 -0.5780745  0.1937823  -2.983 0.00285 **
34: d_y3_d_x2  0.4700927  0.2378605   1.976 0.04812 * 
35: d_y1_d_x1  0.1897255  0.2176062   0.872 0.38328   
35: d_y2_d_x1  0.3703130  0.3099381   1.195 0.23217   
35: d_y3_d_x1 -0.3171667  0.2893553  -1.096 0.27303   
35: d_y1_d_x2 -0.0682106  0.1597199  -0.427 0.66933   
35: d_y2_d_x2 -0.3993267  0.2143410  -1.863 0.06246 . 
35: d_y3_d_x2  0.3865862  0.1652344   2.340 0.01930 * 
36: d_y1_d_x1  0.3438410  0.2043023   1.683 0.09237 . 
36: d_y2_d_x1  0.3674585  0.2396459   1.533 0.12519   
36: d_y3_d_x1 -0.3068357  0.2828260  -1.085 0.27797   
36: d_y1_d_x2 -0.1911310  0.1717746  -1.113 0.26584   
36: d_y2_d_x2 -0.6266940  0.3038349  -2.063 0.03915 * 
36: d_y3_d_x2  0.5022961  0.2709245   1.854 0.06374 . 
37: d_y1_d_x1  0.4348121  0.3071966   1.415 0.15695   
37: d_y2_d_x1  0.1159358  0.1523350   0.761 0.44662   
37: d_y3_d_x1 -0.1380751  0.1452016  -0.951 0.34164   
37: d_y1_d_x2 -0.4128084  0.3170515  -1.302 0.19291   
37: d_y2_d_x2 -0.3345518  0.2260541  -1.480 0.13888   
37: d_y3_d_x2  0.3245445  0.1492057   2.175 0.02962 * 
38: d_y1_d_x1  0.3693685  0.2204735   1.675 0.09387 . 
38: d_y2_d_x1  0.3398245  0.2123516   1.600 0.10953   
38: d_y3_d_x1 -0.2898933  0.2639391  -1.098 0.27206   
38: d_y1_d_x2 -0.4552948  0.3700785  -1.230 0.21860   
38: d_y2_d_x2 -0.3300386  0.2727991  -1.210 0.22635   
38: d_y3_d_x2  0.3182879  0.1388321   2.293 0.02187 * 
39: d_y1_d_x1  0.1625955  0.2211322   0.735 0.46217   
39: d_y2_d_x1  0.3428643  0.2918528   1.175 0.24008   
39: d_y3_d_x1 -0.3030787  0.2713560  -1.117 0.26404   
39: d_y1_d_x2 -0.3016233  0.1438354  -2.097 0.03599 * 
39: d_y2_d_x2 -0.6275330  0.3060765  -2.050 0.04034 * 
39: d_y3_d_x2  0.5024991  0.2714000   1.852 0.06410 . 
40: d_y1_d_x1  0.4310083  0.3036672   1.419 0.15580   
40: d_y2_d_x1  0.1021310  0.1462658   0.698 0.48502   
40: d_y3_d_x1 -0.1266963  0.1392940  -0.910 0.36305   
40: d_y1_d_x2 -0.3371781  0.2125422  -1.586 0.11265   
40: d_y2_d_x2 -0.0488786  0.1471235  -0.332 0.73972   
40: d_y3_d_x2  0.0900131  0.1363985   0.660 0.50930   
41: d_y1_d_x1  0.4383603  0.3088804   1.419 0.15584   
41: d_y2_d_x1  0.1464601  0.1613405   0.908 0.36400   
41: d_y3_d_x1 -0.1618696  0.1581962  -1.023 0.30620   
41: d_y1_d_x2 -0.3808958  0.2738223  -1.391 0.16422   
41: d_y2_d_x2 -0.0824913  0.2005156  -0.411 0.68078   
41: d_y3_d_x2  0.1269258  0.1483169   0.856 0.39212   
42: d_y1_d_x1  0.3938190  0.2435193   1.617 0.10584   
42: d_y2_d_x1  0.3033933  0.1892822   1.603 0.10897   
42: d_y3_d_x1 -0.2674705  0.2404638  -1.112 0.26600   
42: d_y1_d_x2 -0.4537894  0.3786865  -1.198 0.23079   
42: d_y2_d_x2 -0.2652456  0.2886176  -0.919 0.35808   
42: d_y3_d_x2  0.2749274  0.1376015   1.998 0.04572 * 
43: d_y1_d_x1  0.3189542  0.1960673   1.627 0.10379   
43: d_y2_d_x1  0.3861652  0.2654683   1.455 0.14576   
43: d_y3_d_x1 -0.3185505  0.2962658  -1.075 0.28228   
43: d_y1_d_x2 -0.4401057  0.3191651  -1.379 0.16792   
43: d_y2_d_x2 -0.4471386  0.2106110  -2.123 0.03375 * 
43: d_y3_d_x2  0.3910420  0.1682870   2.324 0.02014 * 
44: d_y1_d_x1  0.0971787  0.2056705   0.472 0.63657   
44: d_y2_d_x1  0.2391890  0.2072537   1.154 0.24846   
44: d_y3_d_x1 -0.2427451  0.2075624  -1.170 0.24220   
44: d_y1_d_x2 -0.0247164  0.0966239  -0.256 0.79811   
44: d_y2_d_x2 -0.1761939  0.1405299  -1.254 0.20992   
44: d_y3_d_x2  0.2336972  0.1571824   1.487 0.13707   
45: d_y1_d_x1  0.4025241  0.2750818   1.463 0.14339   
45: d_y2_d_x1  0.0571279  0.1134119   0.504 0.61446   
45: d_y3_d_x1 -0.0855674  0.1170016  -0.731 0.46457   
45: d_y1_d_x2 -0.4510042  0.3740882  -1.206 0.22797   
45: d_y2_d_x2 -0.1923211  0.2450949  -0.785 0.43264   
45: d_y3_d_x2  0.2250886  0.1542689   1.459 0.14455   
46: d_y1_d_x1  0.1023270  0.2086179   0.490 0.62378   
46: d_y2_d_x1  0.2493443  0.2157179   1.156 0.24773   
46: d_y3_d_x1 -0.2491363  0.2133487  -1.168 0.24291   
46: d_y1_d_x2 -0.2160482  0.1966919  -1.098 0.27203   
46: d_y2_d_x2 -0.5558719  0.3326782  -1.671 0.09474 . 
46: d_y3_d_x2  0.4728836  0.2318943   2.039 0.04143 * 
47: d_y1_d_x1  0.1866549  0.2239000   0.834 0.40448   
47: d_y2_d_x1  0.0021906  0.0112184   0.195 0.84518   
47: d_y3_d_x1 -0.0097002  0.0326790  -0.297 0.76660   
47: d_y1_d_x2 -0.0664679  0.1464309  -0.454 0.64989   
47: d_y2_d_x2 -0.0003165  0.0026317  -0.120 0.90428   
47: d_y3_d_x2  0.0033819  0.0169006   0.200 0.84140   
48: d_y1_d_x1  0.3664196  0.2453495   1.493 0.13532   
48: d_y2_d_x1  0.0330393  0.0830093   0.398 0.69062   
48: d_y3_d_x1 -0.0592154  0.0986854  -0.600 0.54848   
48: d_y1_d_x2 -0.2179729  0.1421599  -1.533 0.12520   
48: d_y2_d_x2 -0.0103702  0.0485435  -0.214 0.83084   
48: d_y3_d_x2  0.0326734  0.0840152   0.389 0.69735   
49: d_y1_d_x1  0.1856984  0.2183644   0.850 0.39510   
49: d_y2_d_x1  0.3667908  0.3079205   1.191 0.23358   
49: d_y3_d_x1 -0.3154174  0.2870419  -1.099 0.27183   
49: d_y1_d_x2 -0.0659294  0.1580235  -0.417 0.67652   
49: d_y2_d_x2 -0.3901922  0.2099472  -1.859 0.06309 . 
49: d_y3_d_x2  0.3811881  0.1625829   2.345 0.01905 * 
50: d_y1_d_x1  0.0417272  0.1424363   0.293 0.76956   
50: d_y2_d_x1  0.1082331  0.1069829   1.012 0.31169   
50: d_y3_d_x1 -0.1469973  0.1456618  -1.009 0.31289   
50: d_y1_d_x2 -0.1058940  0.2240203  -0.473 0.63643   
50: d_y2_d_x2 -0.3177685  0.2163353  -1.469 0.14187   
50: d_y3_d_x2  0.3395679  0.1387677   2.447 0.01440 * 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> 
> # conditional marginal effects
> # (assuming that all other dependent variables are as observed)
> margEffCondObs <- margEff( estResultBFGS, cond = TRUE )
> print( margEffCondObs )
      d_y1_d_x1    d_y2_d_x1    d_y3_d_x1    d_y1_d_x2     d_y2_d_x2
1  0.3232361962 0.3432683006 -0.355048446 -0.459509098 -0.4313201490
2  0.1153483935 0.3596761868 -0.361870523 -0.229189942 -0.5342318457
3  0.2375484575 0.3307600421 -0.361244529 -0.089536451 -0.4547362679
4  0.4122503067 0.0694645017 -0.053904996 -0.472083947 -0.2122800739
5  0.1847060250 0.3084425402 -0.343223755 -0.060445211 -0.3646545058
6  0.3787985990 0.0477528061 -0.033663433 -0.474756965 -0.1554861558
7  0.0100311239 0.0209668055 -0.053506160 -0.001106247 -0.0060166000
8  0.4110128568 0.1322373738 -0.403457903 -0.470548414 -0.1341642415
9  0.1474786223 0.3575139395 -0.360949263 -0.264433849 -0.4844316878
10 0.3116938786 0.3484655127 -0.361307996 -0.453660745 -0.4473769717
11 0.2058976400 0.3200081427 -0.328883694 -0.079864895 -0.5893156416
12 0.1177334095 0.2436538298 -0.287657466 -0.031148920 -0.2231415105
13 0.1471332486 0.3159154131 -0.349075440 -0.039228803 -0.3336039180
14 0.0406335999 0.0999068773 -0.152735168 -0.007155820 -0.0531209315
15 0.0358197254 0.0880153046 -0.139996990 -0.091958138 -0.2591680622
16 0.1882725183 0.3350175752 -0.342159787 -0.067926448 -0.5870797948
17 0.3833567161 0.2924153583 -0.314583141 -0.212937647 -0.5602548019
18 0.3979220186 0.2666187493 -0.404805015 -0.513151557 -0.3701386058
19 0.4437521978 0.1791338917 -0.160502351 -0.532987886 -0.4316406788
20 0.2259756659 0.0022584118 -0.019229939 -0.089444084 -0.0005387236
21 0.1201169117 0.2467991134 -0.290399333 -0.244509996 -0.5058124540
22 0.0007497926 0.0006978391 -0.005797477 -0.002951779 -0.0038207796
23 0.4535483129 0.0631045466 -0.259933151 -0.387912218 -0.0460271704
24 0.0233590201 0.2044569486 -0.233822492 -0.072712001 -0.4720414686
25 0.1747911246 0.1895312592 -0.261808609 -0.302155598 -0.4395843932
26 0.4530947663 0.0604711728 -0.252242094 -0.382153939 -0.0433433667
27 0.1689887911 0.2972946593 -0.333810139 -0.052838666 -0.3336920582
28 0.0247529328 0.0595893814 -0.107382268 -0.003670897 -0.0251760061
29 0.3008617678 0.2048889670 -0.428116554 -0.447474248 -0.2665140729
30 0.2090453560 0.3214423437 -0.354022707 -0.073180135 -0.4091058932
31 0.2455445912 0.3606360268 -0.379506727 -0.091829433 -0.5089267101
32 0.2072019348 0.3187872119 -0.327786882 -0.311947695 -0.3715008227
33 0.1474382857 0.2781589528 -0.317490037 -0.043152940 -0.2887484016
34 0.4881154710 0.2484746725 -0.250623067 -0.449373107 -0.5284208163
35 0.1861474778 0.3093531933 -0.343988258 -0.061166505 -0.3674094307
36 0.4662923136 0.3127833842 -0.339277170 -0.321772793 -0.5593117661
37 0.4496318140 0.0515675468 -0.224907158 -0.429079175 -0.1533983305
38 0.3756418193 0.3074074008 -0.313706240 -0.474844441 -0.3482839441
39 0.0638654116 0.3176168542 -0.326350396 -0.154807066 -0.5696465228
40 0.4453405495 0.0456337186 -0.205495492 -0.344289600 -0.0292378379
41 0.4537160101 0.1514742551 -0.139238355 -0.391407408 -0.1245240634
42 0.4031850053 0.1389606133 -0.411561969 -0.472975838 -0.1445333296
43 0.3187527097 0.1953852746 -0.433867720 -0.457330982 -0.2461844889
44 0.0933321287 0.2073153800 -0.255570394 -0.022420511 -0.1675168915
45 0.4138250511 0.0262438003 -0.134437144 -0.471512840 -0.0877855065
46 0.0320414287 0.2395251689 -0.262837614 -0.092981737 -0.5147062189
47 0.1877038485 0.0012227798 -0.011951812 -0.066531222 -0.0002453633
48 0.3747295024 0.0156619839 -0.089368038 -0.219843609 -0.0068112323
49 0.1820121476 0.3066912947 -0.341751326 -0.059108011 -0.3594666860
50 0.1059631809 0.0980984696 -0.167108498 -0.194204528 -0.2810062303
     d_y3_d_x2
1  0.360815948
2  0.497693369
3  0.453818047
4  0.175490812
5  0.390535156
6  0.120618005
7  0.028391238
8  0.378315289
9  0.445348474
10 0.379760171
11 0.524477068
12 0.282396164
13 0.371331912
14 0.112653252
15 0.334504219
16 0.522126289
17 0.522184293
18 0.605611100
19 0.385355560
20 0.006078859
21 0.528322176
22 0.022043552
23 0.167180008
24 0.474967844
25 0.512488332
26 0.159487780
27 0.368015826
28 0.070192644
29 0.574533205
30 0.422114838
31 0.493178952
32 0.328691011
33 0.334349642
34 0.495369678
35 0.392516251
36 0.542851699
37 0.512469883
38 0.267731303
39 0.541591921
40 0.117148027
41 0.061954778
42 0.398801119
43 0.554039711
44 0.234531669
45 0.362288294
46 0.506043388
47 0.003514004
48 0.038239307
49 0.386795047
50 0.384142824
> 
> # conditional marginal effects with covariance matrix at sample mean
> # (assuming that all other dependent variables are at there modal values)
> margEffCondObsCov <- margEff( estResultBFGS, cond = TRUE,
+    data = as.data.frame( t( c( colMedians( yMat * 1 ), colMeans( xMat ) ) ) ), 
+    calcVCov = TRUE )
> print( margEffCondObsCov )
  d_y1_d_x1 d_y2_d_x1  d_y3_d_x1  d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1 0.2978649 0.3660972 -0.3860713 -0.2927278 -0.570811 0.5331238
> print( attr( margEffCondObsCov, "vcov" ) )
, , d_y1_d_x1

   d_y1_d_x1   d_y2_d_x1   d_y3_d_x1   d_y1_d_x2   d_y2_d_x2  d_y3_d_x2
1 0.03523631 -0.01920411 -0.02997125 -0.01586731 0.009959717 0.02138438

, , d_y2_d_x1

    d_y1_d_x1  d_y2_d_x1  d_y3_d_x1  d_y1_d_x2  d_y2_d_x2   d_y3_d_x2
1 -0.01920411 0.06545475 0.04082619 0.01246325 -0.0271125 -0.03392535

, , d_y3_d_x1

    d_y1_d_x1  d_y2_d_x1 d_y3_d_x1  d_y1_d_x2  d_y2_d_x2   d_y3_d_x2
1 -0.02997125 0.04082619 0.1631669 0.03913909 -0.0248204 -0.09114001

, , d_y1_d_x2

    d_y1_d_x1  d_y2_d_x1  d_y3_d_x1  d_y1_d_x2    d_y2_d_x2   d_y3_d_x2
1 -0.01586731 0.01246325 0.03913909 0.02906863 -0.007399346 -0.02717069

, , d_y2_d_x2

    d_y1_d_x1  d_y2_d_x1  d_y3_d_x1    d_y1_d_x2  d_y2_d_x2   d_y3_d_x2
1 0.009959717 -0.0271125 -0.0248204 -0.007399346 0.06177624 -0.01319181

, , d_y3_d_x2

   d_y1_d_x1   d_y2_d_x1   d_y3_d_x1   d_y1_d_x2   d_y2_d_x2 d_y3_d_x2
1 0.02138438 -0.03392535 -0.09114001 -0.02717069 -0.01319181 0.1129765

> print( drop( attr( margEffCondObsCov, "vcov" ) ) )
             d_y1_d_x1   d_y2_d_x1   d_y3_d_x1    d_y1_d_x2    d_y2_d_x2
d_y1_d_x1  0.035236310 -0.01920411 -0.02997125 -0.015867308  0.009959717
d_y2_d_x1 -0.019204110  0.06545475  0.04082619  0.012463251 -0.027112504
d_y3_d_x1 -0.029971254  0.04082619  0.16316691  0.039139092 -0.024820401
d_y1_d_x2 -0.015867308  0.01246325  0.03913909  0.029068627 -0.007399346
d_y2_d_x2  0.009959717 -0.02711250 -0.02482040 -0.007399346  0.061776241
d_y3_d_x2  0.021384384 -0.03392535 -0.09114001 -0.027170688 -0.013191810
            d_y3_d_x2
d_y1_d_x1  0.02138438
d_y2_d_x1 -0.03392535
d_y3_d_x1 -0.09114001
d_y1_d_x2 -0.02717069
d_y2_d_x2 -0.01319181
d_y3_d_x2  0.11297654
> summary( margEffCondObsCov )
             Estimate Std. error z value Pr(> z)  
1: d_y1_d_x1   0.2979     0.1877   1.587  0.1126  
1: d_y2_d_x1   0.3661     0.2558   1.431  0.1524  
1: d_y3_d_x1  -0.3861     0.4039  -0.956  0.3392  
1: d_y1_d_x2  -0.2927     0.1705  -1.717  0.0860 .
1: d_y2_d_x2  -0.5708     0.2485  -2.297  0.0216 *
1: d_y3_d_x2   0.5331     0.3361   1.586  0.1127  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> 
> # conditional marginal effects
> # (assuming that all other dependent variables are one)
> margEffCondOne <- margEff( estResultBFGS, cond = TRUE, othDepOne = TRUE )
> print( margEffCondOne )
      d_y1_d_x1    d_y2_d_x1    d_y3_d_x1     d_y1_d_x2    d_y2_d_x2
1  1.766878e-01 0.3432683006 -0.349264084 -2.905192e-01 -0.431320149
2  1.153484e-01 0.3596761868 -0.361870523 -2.291899e-01 -0.534231846
3  1.124992e-01 0.3590246655 -0.361244529 -2.793627e-02 -0.487346175
4  3.609633e-01 0.0694645017 -0.073360073 -2.641422e-01 -0.212280074
5  7.929731e-02 0.3381003317 -0.343223755 -1.566558e-02 -0.393227059
6  3.656145e-01 0.0477528061 -0.049586181 -2.816339e-01 -0.155486156
7  8.025561e-04 0.0243038218 -0.053506160 -1.527045e-05 -0.007237107
8  2.521476e-01 0.2683878274 -0.280778222 -3.333443e-01 -0.279546562
9  1.474786e-01 0.3575139395 -0.360949263 -2.644338e-01 -0.484431688
10 1.681334e-01 0.3484655127 -0.353640857 -2.833560e-01 -0.447376972
11 2.058976e-01 0.3200081427 -0.328883694 -7.986489e-02 -0.589315642
12 4.168856e-02 0.2699812896 -0.287657466 -5.571665e-03 -0.243054032
13 6.282471e-02 0.3159154131 -0.324960430 -1.073426e-02 -0.333603918
14 8.252791e-03 0.1126141858 -0.152735168 -4.572391e-04 -0.059829478
15 6.746420e-03 0.0994122211 -0.139996990 -2.632565e-02 -0.288927939
16 1.882725e-01 0.3350175752 -0.342159787 -6.792645e-02 -0.587079795
17 2.216808e-01 0.3042766603 -0.314583141 -9.149649e-02 -0.584884106
18 1.321608e-01 0.3605724669 -0.363116108 -2.485573e-01 -0.509670665
19 3.158634e-01 0.1708741211 -0.182528221 -1.857743e-01 -0.425124122
20 3.485063e-01 0.0089781736 -0.008180068 -2.345984e-01 -0.003748684
21 4.291995e-02 0.2733599693 -0.290399333 -1.159976e-01 -0.546465697
22 7.527641e-06 0.0008764661 -0.005797477 -5.392642e-05 -0.004697058
23 3.279646e-01 0.1482405271 -0.158642179 -3.376436e-01 -0.120972355
24 2.335902e-02 0.2044569486 -0.233822492 -7.271200e-02 -0.472041469
25 2.488912e-02 0.2112921915 -0.239529408 -7.643008e-02 -0.481082815
26 3.305961e-01 0.1430659182 -0.153133861 -3.367554e-01 -0.115360878
27 6.996050e-02 0.3267209724 -0.333810139 -1.277478e-02 -0.360544256
28 3.697711e-03 0.0677386518 -0.107382268 -1.382745e-04 -0.028962153
29 1.602838e-01 0.3525152587 -0.356977215 -2.764906e-01 -0.461795156
30 9.429876e-02 0.3508881318 -0.354022707 -2.082622e-02 -0.439897027
31 1.223036e-01 0.3606360268 -0.362878409 -3.215382e-02 -0.508926710
32 2.072019e-01 0.3187872119 -0.327786882 -3.119477e-01 -0.371500823
33 5.764014e-02 0.3067479621 -0.317490037 -9.343950e-03 -0.312912587
34 2.648576e-01 0.2513939487 -0.264277278 -1.285951e-01 -0.541550064
35 8.016769e-02 0.3390172205 -0.343988258 -1.594767e-02 -0.396128891
36 1.948154e-01 0.3297783990 -0.337571598 -7.222469e-02 -0.588794382
37 3.392636e-01 0.1252130591 -0.134006462 -2.200645e-01 -0.338577089
38 2.186971e-01 0.3074074008 -0.317457008 -3.185751e-01 -0.348283944
39 6.386541e-02 0.3176168542 -0.326350396 -1.548071e-01 -0.569646523
40 3.447918e-01 0.1129864533 -0.120815575 -3.296734e-01 -0.084487730
41 3.262940e-01 0.1514742551 -0.162075820 -3.381530e-01 -0.124524063
42 2.442291e-01 0.2783830069 -0.290342133 -3.304651e-01 -0.295930966
43 1.733393e-01 0.3453955758 -0.351067885 -2.876942e-01 -0.437623959
44 2.964178e-02 0.2306743304 -0.255570394 -3.255863e-03 -0.183536972
45 3.605765e-01 0.0708014583 -0.074824779 -2.630649e-01 -0.215616043
46 3.204143e-02 0.2395251689 -0.262837614 -9.298174e-02 -0.514706219
47 3.372268e-01 0.0053924513 -0.004646657 -2.167553e-01 -0.002057801
48 3.658413e-01 0.0457324170 -0.047379524 -2.956531e-01 -0.026781378
49 7.767693e-02 0.3363308212 -0.341751326 -1.514612e-02 -0.387759683
50 8.014647e-03 0.1106081689 -0.150825136 -3.042539e-02 -0.312672067
      d_y3_d_x2
1  0.3901083246
2  0.4976933692
3  0.4538180472
4  0.2097690589
5  0.3905351556
6  0.1540883666
7  0.0283912383
8  0.2361440548
9  0.4453484737
10 0.4068752267
11 0.5244770679
12 0.2823961636
13 0.3491159970
14 0.1126532519
15 0.3345042189
16 0.5221262890
17 0.5221842930
18 0.4717298385
19 0.4018382486
20 0.0012165804
21 0.5283221758
22 0.0220435518
23 0.0875151198
24 0.4749678438
25 0.4816140287
26 0.0826818551
27 0.3680158265
28 0.0701926442
29 0.4218168734
30 0.4221148378
31 0.4682078468
32 0.3286910106
33 0.3343496420
34 0.4927044673
35 0.3925162506
36 0.5235976290
37 0.3272971781
38 0.3050670493
39 0.5415919208
40 0.0569044619
41 0.0905951794
42 0.2524085675
43 0.3967870889
44 0.2345316689
45 0.2129895981
46 0.5060433879
47 0.0005616494
48 0.0141168596
49 0.3867950465
50 0.3535086387
> 
> # conditional marginal effects with covariance matrix at sample mean
> # (assuming that all other dependent variables are one)
> margEffCondOneCov <- margEff( estResultBFGS, cond = TRUE, othDepOne = TRUE,
+    data = as.data.frame( t( colMeans( xMat ) ) ), calcVCov = TRUE )
> print( margEffCondOneCov )
  d_y1_d_x1 d_y2_d_x1  d_y3_d_x1  d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1 0.1494547 0.3660972 -0.3729411 -0.1438174 -0.570811 0.5246618
> print( attr( margEffCondOneCov, "vcov" ) )
, , d_y1_d_x1

  d_y1_d_x1   d_y2_d_x1  d_y3_d_x1  d_y1_d_x2    d_y2_d_x2 d_y3_d_x2
1  0.756922 -0.04368791 -0.2423521 -0.7770755 0.0008366279 0.2066929

, , d_y2_d_x1

    d_y1_d_x1  d_y2_d_x1  d_y3_d_x1 d_y1_d_x2  d_y2_d_x2   d_y3_d_x2
1 -0.04368791 0.06545475 0.04634214 0.0399438 -0.0271125 -0.04036237

, , d_y3_d_x1

   d_y1_d_x1  d_y2_d_x1 d_y3_d_x1 d_y1_d_x2   d_y2_d_x2  d_y3_d_x2
1 -0.2423521 0.04634214 0.2067528 0.2524415 -0.03120445 -0.1231091

, , d_y1_d_x2

   d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2     d_y2_d_x2  d_y3_d_x2
1 -0.7770755 0.0399438 0.2524415 0.8068653 -0.0001406115 -0.2126708

, , d_y2_d_x2

     d_y1_d_x1  d_y2_d_x1   d_y3_d_x1     d_y1_d_x2  d_y2_d_x2    d_y3_d_x2
1 0.0008366279 -0.0271125 -0.03120445 -0.0001406115 0.06177624 -0.004186032

, , d_y3_d_x2

  d_y1_d_x1   d_y2_d_x1  d_y3_d_x1  d_y1_d_x2    d_y2_d_x2 d_y3_d_x2
1 0.2066929 -0.04036237 -0.1231091 -0.2126708 -0.004186032 0.1320453

> print( drop( attr( margEffCondOneCov, "vcov" ) ) )
              d_y1_d_x1   d_y2_d_x1   d_y3_d_x1     d_y1_d_x2     d_y2_d_x2
d_y1_d_x1  0.7569219637 -0.04368791 -0.24235211 -0.7770755100  0.0008366279
d_y2_d_x1 -0.0436879096  0.06545475  0.04634214  0.0399437964 -0.0271125040
d_y3_d_x1 -0.2423521100  0.04634214  0.20675276  0.2524414624 -0.0312044503
d_y1_d_x2 -0.7770755100  0.03994380  0.25244146  0.8068653198 -0.0001406115
d_y2_d_x2  0.0008366279 -0.02711250 -0.03120445 -0.0001406115  0.0617762409
d_y3_d_x2  0.2066928726 -0.04036237 -0.12310913 -0.2126708276 -0.0041860319
             d_y3_d_x2
d_y1_d_x1  0.206692873
d_y2_d_x1 -0.040362370
d_y3_d_x1 -0.123109132
d_y1_d_x2 -0.212670828
d_y2_d_x2 -0.004186032
d_y3_d_x2  0.132045272
> summary( margEffCondOneCov )
             Estimate Std. error z value Pr(> z)  
1: d_y1_d_x1   0.1495     0.8700   0.172  0.8636  
1: d_y2_d_x1   0.3661     0.2558   1.431  0.1524  
1: d_y3_d_x1  -0.3729     0.4547  -0.820  0.4121  
1: d_y1_d_x2  -0.1438     0.8983  -0.160  0.8728  
1: d_y2_d_x2  -0.5708     0.2485  -2.297  0.0216 *
1: d_y3_d_x2   0.5247     0.3634   1.444  0.1488  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> 
> 
> 
