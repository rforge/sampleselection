
R version 2.15.2 (2012-10-26) -- "Trick or Treat"
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( "mvProbit" )
Loading required package: mvtnorm
Loading required package: maxLik
Loading required package: miscTools
Loading required package: abind
> 
> ## generate a simulated data set
> set.seed( 123 )
> # number of observations
> nObs <- 50
> 
> # generate explanatory variables
> xMat <- cbind( 
+    const = rep( 1, nObs ),
+    x1 = as.numeric( rnorm( nObs ) > 0 ),
+    x2 = rnorm( nObs ) )
> 
> # model coefficients
> beta <- cbind( c(  0.8,  1.2, -0.8 ),
+                c( -0.6,  1.0, -1.6 ),
+                c(  0.5, -0.6,  1.2 ) )
> 
> # covariance matrix of error terms
> sigma <- miscTools::symMatrix( c( 1, 0.2, 0.4, 1, -0.1, 1 ) )
> 
> # generate dependent variables
> yMatLin <- xMat %*% beta 
> yMat <- ( yMatLin + rmvnorm( nObs, sigma = sigma ) ) > 0
> colnames( yMat ) <- paste( "y", 1:3, sep = "" )
> 
> # estimation with the BHHH algorithm, two-sided gradients
> estResultBHHH <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), startSigma = sigma,
+    data = as.data.frame( cbind( xMat, yMat ) ), tol = 0.5,
+    algorithm = GenzBretz() )
> print( estResultBHHH )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), startSigma = sigma, algorithm = GenzBretz(), 
    tol = 0.5)

Coefficients:
   b_1_0    b_1_1    b_1_2    b_2_0    b_2_1    b_2_2    b_3_0    b_3_1 
 1.02508  1.30536 -1.02809 -0.78248  1.14318 -1.66938  0.58229 -0.69667 
   b_3_2    R_1_2    R_1_3    R_2_3 
 1.23283  0.86322  0.36022 -0.08406 

> summary( estResultBHHH )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), startSigma = sigma, algorithm = GenzBretz(), 
    tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0  1.02508    0.44548   2.301  0.0214 *
b_1_1  1.30536    0.73511   1.776  0.0758 .
b_1_2 -1.02809    0.68851  -1.493  0.1354  
b_2_0 -0.78248    0.38798  -2.017  0.0437 *
b_2_1  1.14318    0.53026   2.156  0.0311 *
b_2_2 -1.66938    0.81308  -2.053  0.0401 *
b_3_0  0.58229    0.64107   0.908  0.3637  
b_3_1 -0.69667    0.89818  -0.776  0.4380  
b_3_2  1.23283    0.62452   1.974  0.0484 *
R_1_2  0.86322   18.60071   0.046  0.9630  
R_1_3  0.36022    0.64712   0.557  0.5778  
R_2_3 -0.08406    0.34909  -0.241  0.8097  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

BHHH maximisation, 1 iterations
Return code 2: successive function values within tolerance limit
Log-likelihood: -56.90544 on 12 Df

> logLik( estResultBHHH )
'log Lik.' -56.90544 (df=12)
> estResultBHHHA <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta, sigma[ lower.tri( sigma ) ] ),
+    data = as.data.frame( cbind( xMat, yMat ) ), tol = 0.5,
+    algorithm = GenzBretz() )
> all.equal( estResultBHHH, estResultBHHHA )
[1] "Component 12: target, current do not match when deparsed"
> 
> # estimation with the BHHH algorithm, one-sided gradients
> estResultBHHH1 <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), startSigma = sigma,
+    data = as.data.frame( cbind( xMat, yMat ) ), tol = 0.5,
+    algorithm = GenzBretz(), oneSidedGrad = TRUE )
> print( estResultBHHH1 )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), startSigma = sigma, algorithm = GenzBretz(), 
    oneSidedGrad = TRUE, tol = 0.5)

Coefficients:
   b_1_0    b_1_1    b_1_2    b_2_0    b_2_1    b_2_2    b_3_0    b_3_1 
 1.02508  1.30536 -1.02809 -0.78248  1.14318 -1.66938  0.58229 -0.69667 
   b_3_2    R_1_2    R_1_3    R_2_3 
 1.23283  0.86322  0.36022 -0.08406 

> summary( estResultBHHH1 )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), startSigma = sigma, algorithm = GenzBretz(), 
    oneSidedGrad = TRUE, tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0  1.02508    0.44548   2.301  0.0214 *
b_1_1  1.30536    0.73511   1.776  0.0758 .
b_1_2 -1.02809    0.68851  -1.493  0.1354  
b_2_0 -0.78248    0.38797  -2.017  0.0437 *
b_2_1  1.14318    0.53026   2.156  0.0311 *
b_2_2 -1.66938    0.81307  -2.053  0.0401 *
b_3_0  0.58229    0.64106   0.908  0.3637  
b_3_1 -0.69667    0.89817  -0.776  0.4380  
b_3_2  1.23283    0.62452   1.974  0.0484 *
R_1_2  0.86322   18.60041   0.046  0.9630  
R_1_3  0.36022    0.64712   0.557  0.5778  
R_2_3 -0.08406    0.34909  -0.241  0.8097  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

BHHH maximisation, 1 iterations
Return code 2: successive function values within tolerance limit
Log-likelihood: -56.90544 on 12 Df

> logLik( estResultBHHH1 )
'log Lik.' -56.90544 (df=12)
> all.equal( estResultBHHH, estResultBHHH1 )
[1] "Component 1: Mean relative difference: 1.835846e-08"     
[2] "Component 2: Mean relative difference: 1.179581e-07"     
[3] "Component 3: Mean relative difference: 1.254582e-06"     
[4] "Component 4: Mean relative difference: 4.702786e-07"     
[5] "Component 11: Mean relative difference: 4.498904e-07"    
[6] "Component 12: target, current do not match when deparsed"
> 
> # estimation with the BFGS algorithm, two-sided gradients
> estResultBFGS <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), startSigma = sigma, method = "BFGS",
+    data = as.data.frame( cbind( xMat, yMat ) ), 
+    tol = 0.5, algorithm = GenzBretz() )
> print( estResultBFGS )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), startSigma = sigma, method = "BFGS", 
    algorithm = GenzBretz(), tol = 0.5)

Coefficients:
   b_1_0    b_1_1    b_1_2    b_2_0    b_2_1    b_2_2    b_3_0    b_3_1 
 0.53607  1.16101 -1.14212 -0.44952  1.05496 -1.57624  0.40751 -0.85400 
   b_3_2    R_1_2    R_1_3    R_2_3 
 1.25958  0.29483  0.32822 -0.02382 

> summary( estResultBFGS )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), startSigma = sigma, method = "BFGS", 
    algorithm = GenzBretz(), tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0  0.53607    0.82709   0.648  0.5169  
b_1_1  1.16101    0.91515   1.269  0.2046  
b_1_2 -1.14212    0.93847  -1.217  0.2236  
b_2_0 -0.44952    0.79215  -0.567  0.5704  
b_2_1  1.05496    0.88398   1.193  0.2327  
b_2_2 -1.57624    0.73187  -2.154  0.0313 *
b_3_0  0.40751    0.48897   0.833  0.4046  
b_3_1 -0.85400    0.84871  -1.006  0.3143  
b_3_2  1.25958    0.68040   1.851  0.0641 .
R_1_2  0.29483    1.85817   0.159  0.8739  
R_1_3  0.32822    0.70923   0.463  0.6435  
R_2_3 -0.02382    0.34466  -0.069  0.9449  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

BFGS maximisation, 4 iterations
Return code 0: successful convergence 
Log-likelihood: -52.94456 on 12 Df

> logLik( estResultBFGS )
'log Lik.' -52.94456 (df=12)
> 
> # estimation with the BFGS algorithm, one-sided gradients
> estResultBFGS1 <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), startSigma = sigma, method = "BFGS", 
+    data = as.data.frame( cbind( xMat, yMat ) ), 
+    tol = 0.5, algorithm = GenzBretz(), oneSidedGrad = TRUE )
> print( estResultBFGS1 )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), startSigma = sigma, method = "BFGS", 
    algorithm = GenzBretz(), oneSidedGrad = TRUE, tol = 0.5)

Coefficients:
   b_1_0    b_1_1    b_1_2    b_2_0    b_2_1    b_2_2    b_3_0    b_3_1 
 0.53607  1.16101 -1.14213 -0.44952  1.05496 -1.57624  0.40751 -0.85400 
   b_3_2    R_1_2    R_1_3    R_2_3 
 1.25958  0.29483  0.32822 -0.02382 

> summary( estResultBFGS1 )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), startSigma = sigma, method = "BFGS", 
    algorithm = GenzBretz(), oneSidedGrad = TRUE, tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0  0.53607    0.82709   0.648  0.5169  
b_1_1  1.16101    0.91515   1.269  0.2046  
b_1_2 -1.14213    0.93847  -1.217  0.2236  
b_2_0 -0.44952    0.79215  -0.567  0.5704  
b_2_1  1.05496    0.88398   1.193  0.2327  
b_2_2 -1.57624    0.73187  -2.154  0.0313 *
b_3_0  0.40751    0.48897   0.833  0.4046  
b_3_1 -0.85400    0.84871  -1.006  0.3143  
b_3_2  1.25958    0.68040   1.851  0.0641 .
R_1_2  0.29483    1.85817   0.159  0.8739  
R_1_3  0.32822    0.70923   0.463  0.6435  
R_2_3 -0.02382    0.34466  -0.069  0.9449  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

BFGS maximisation, 4 iterations
Return code 0: successful convergence 
Log-likelihood: -52.94456 on 12 Df

> logLik( estResultBFGS1 )
'log Lik.' -52.94456 (df=12)
> all.equal( estResultBFGS, estResultBFGS1 )
[1] "Component 2: Mean relative difference: 2.633371e-07"     
[2] "Component 3: Mean relative difference: 8.516566e-07"     
[3] "Component 4: Mean relative difference: 4.317973e-07"     
[4] "Component 12: Mean relative difference: 2.455142e-07"    
[5] "Component 13: target, current do not match when deparsed"
> 
> # estimation with the BFGS algorithm, one-sided gradients, no starting values
> estResultBFGS1a <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    data = as.data.frame( cbind( xMat, yMat ) ), method = "BFGS",
+    tol = 0.5, algorithm = GenzBretz(), oneSidedGrad = TRUE )
> print( estResultBFGS1a )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), method = "BFGS", algorithm = GenzBretz(), oneSidedGrad = TRUE, 
    tol = 0.5)

Coefficients:
   b_1_0    b_1_1    b_1_2    b_2_0    b_2_1    b_2_2    b_3_0    b_3_1 
 0.79353  1.88367 -1.74922 -0.40036  0.91577 -1.52106  0.97790 -1.69433 
   b_3_2    R_1_2    R_1_3    R_2_3 
 1.57625  0.75270  0.23721 -0.03453 

> summary( estResultBFGS1a )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), method = "BFGS", algorithm = GenzBretz(), oneSidedGrad = TRUE, 
    tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0  0.79353    0.90412   0.878  0.3801  
b_1_1  1.88367    0.90668   2.078  0.0378 *
b_1_2 -1.74922    0.97400  -1.796  0.0725 .
b_2_0 -0.40036    0.69056  -0.580  0.5621  
b_2_1  0.91577    0.97998   0.934  0.3501  
b_2_2 -1.52106    0.72006  -2.112  0.0347 *
b_3_0  0.97790    0.64497   1.516  0.1295  
b_3_1 -1.69433    0.94788  -1.787  0.0739 .
b_3_2  1.57625    0.73399   2.148  0.0318 *
R_1_2  0.75270    4.32729   0.174  0.8619  
R_1_3  0.23721    0.90535   0.262  0.7933  
R_2_3 -0.03453    0.35889  -0.096  0.9234  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

BFGS maximisation, 3 iterations
Return code 0: successful convergence 
Log-likelihood: -49.36404 on 12 Df

> logLik( estResultBFGS1a )
'log Lik.' -49.36404 (df=12)
> 
> # estimation with the BFGS algorithm, one-sided gradients, no starting values for beta
> estResultBFGS1b <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    startSigma = sigma, data = as.data.frame( cbind( xMat, yMat ) ), 
+    method = "BFGS", tol = 0.5, algorithm = GenzBretz(), oneSidedGrad = TRUE )
> print( estResultBFGS1b )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), startSigma = sigma, method = "BFGS", algorithm = GenzBretz(), 
    oneSidedGrad = TRUE, tol = 0.5)

Coefficients:
  b_1_0   b_1_1   b_1_2   b_2_0   b_2_1   b_2_2   b_3_0   b_3_1   b_3_2   R_1_2 
 0.8110  1.9060 -1.7627 -0.3770  0.9441 -1.5332  0.9372 -1.7498  1.6024  0.6817 
  R_1_3   R_2_3 
 0.4044  0.1663 

> summary( estResultBFGS1b )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), startSigma = sigma, method = "BFGS", algorithm = GenzBretz(), 
    oneSidedGrad = TRUE, tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0   0.8110     0.9297   0.872  0.3830  
b_1_1   1.9060     0.9160   2.081  0.0375 *
b_1_2  -1.7627     1.0131  -1.740  0.0819 .
b_2_0  -0.3770     0.7049  -0.535  0.5928  
b_2_1   0.9441     1.0345   0.913  0.3615  
b_2_2  -1.5332     0.7517  -2.040  0.0414 *
b_3_0   0.9372     0.6291   1.490  0.1363  
b_3_1  -1.7498     0.9996  -1.751  0.0800 .
b_3_2   1.6024     0.7848   2.042  0.0412 *
R_1_2   0.6817     3.4094   0.200  0.8415  
R_1_3   0.4044     0.8024   0.504  0.6143  
R_2_3   0.1663     0.3389   0.491  0.6235  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

BFGS maximisation, 3 iterations
Return code 0: successful convergence 
Log-likelihood: -49.57444 on 12 Df

> logLik( estResultBFGS1b )
'log Lik.' -49.57444 (df=12)
> 
> # estimation with the BFGS algorithm, one-sided gradients, no starting values for sigma
> estResultBFGS1s <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), data = as.data.frame( cbind( xMat, yMat ) ), 
+    method = "BFGS", tol = 0.5, algorithm = GenzBretz(), oneSidedGrad = TRUE )
> print( estResultBFGS1s )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), method = "BFGS", algorithm = GenzBretz(), 
    oneSidedGrad = TRUE, tol = 0.5)

Coefficients:
   b_1_0    b_1_1    b_1_2    b_2_0    b_2_1    b_2_2    b_3_0    b_3_1 
 0.55814  1.14958 -1.12747 -0.44426  1.07325 -1.57226  0.37255 -0.85470 
   b_3_2    R_1_2    R_1_3    R_2_3 
 1.23011  0.34981 -0.01177  0.09435 

> summary( estResultBFGS1s )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), method = "BFGS", algorithm = GenzBretz(), 
    oneSidedGrad = TRUE, tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0  0.55814    0.86615   0.644  0.5193  
b_1_1  1.14958    0.90607   1.269  0.2045  
b_1_2 -1.12747    0.94191  -1.197  0.2313  
b_2_0 -0.44426    0.85526  -0.519  0.6035  
b_2_1  1.07325    0.99314   1.081  0.2798  
b_2_2 -1.57226    0.78557  -2.001  0.0453 *
b_3_0  0.37255    0.56172   0.663  0.5072  
b_3_1 -0.85470    0.95214  -0.898  0.3694  
b_3_2  1.23011    0.71506   1.720  0.0854 .
R_1_2  0.34981    2.02289   0.173  0.8627  
R_1_3 -0.01177    0.70776  -0.017  0.9867  
R_2_3  0.09435    0.33920   0.278  0.7809  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

BFGS maximisation, 4 iterations
Return code 0: successful convergence 
Log-likelihood: -52.78274 on 12 Df

> logLik( estResultBFGS1s )
'log Lik.' -52.78274 (df=12)
> 
> # estimation with the BFGS algorithm, Miwa algorithm for obtaining integrals
> estResultBFGSm <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), startSigma = sigma, 
+    data = as.data.frame( cbind( xMat, yMat ) ), method = "BFGS",
+    tol = 0.5, algorithm = Miwa( steps = 64 ) )
There were 13 warnings (use warnings() to see them)
> print( estResultBFGSm )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), startSigma = sigma, method = "BFGS", 
    algorithm = Miwa(steps = 64), tol = 0.5)

Coefficients:
   b_1_0    b_1_1    b_1_2    b_2_0    b_2_1    b_2_2    b_3_0    b_3_1 
 0.53609  1.16102 -1.14213 -0.44952  1.05496 -1.57624  0.40753 -0.85400 
   b_3_2    R_1_2    R_1_3    R_2_3 
 1.25960  0.29491  0.32819 -0.02386 

> summary( estResultBFGSm )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), startSigma = sigma, method = "BFGS", 
    algorithm = Miwa(steps = 64), tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0  0.53609    0.82702   0.648  0.5168  
b_1_1  1.16102    0.91511   1.269  0.2045  
b_1_2 -1.14213    0.93837  -1.217  0.2235  
b_2_0 -0.44952    0.79215  -0.567  0.5704  
b_2_1  1.05496    0.88386   1.194  0.2326  
b_2_2 -1.57624    0.73173  -2.154  0.0312 *
b_3_0  0.40753    0.48894   0.834  0.4046  
b_3_1 -0.85400    0.84860  -1.006  0.3142  
b_3_2  1.25960    0.68024   1.852  0.0641 .
R_1_2  0.29491    1.85789   0.159  0.8739  
R_1_3  0.32819    0.70903   0.463  0.6435  
R_2_3 -0.02386    0.34468  -0.069  0.9448  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

BFGS maximisation, 4 iterations
Return code 0: successful convergence 
Log-likelihood: -52.94417 on 12 Df

> logLik( estResultBFGSm )
'log Lik.' -52.94417 (df=12)
> all.equal( estResultBFGS, estResultBFGSm )
[1] "Component 1: Mean relative difference: 7.343932e-06"     
[2] "Component 2: Mean relative difference: 2.683045e-05"     
[3] "Component 3: Mean relative difference: 0.0001800715"     
[4] "Component 4: Mean relative difference: 0.0001779414"     
[5] "Component 12: Mean relative difference: 0.000115282"     
[6] "Component 13: target, current do not match when deparsed"
> 
> # estimation with the BFGS algorithm, GHK algorithm for obtaining integrals
> estResultBFGSg <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), startSigma = sigma, 
+    data = as.data.frame( cbind( xMat, yMat ) ), method = "BFGS",
+    tol = 0.5 )
There were 50 or more warnings (use warnings() to see the first 50)
> print( estResultBFGSg )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), startSigma = sigma, method = "BFGS", 
    tol = 0.5)

Coefficients:
   b_1_0    b_1_1    b_1_2    b_2_0    b_2_1    b_2_2    b_3_0    b_3_1 
 0.53597  1.16071 -1.14239 -0.45176  1.05313 -1.57570  0.40385 -0.85710 
   b_3_2    R_1_2    R_1_3    R_2_3 
 1.25977  0.29530  0.32495 -0.02085 

> summary( estResultBFGSg )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), startSigma = sigma, method = "BFGS", 
    tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0  0.53597    0.82729   0.648  0.5171  
b_1_1  1.16071    0.91440   1.269  0.2043  
b_1_2 -1.14239    0.93839  -1.217  0.2235  
b_2_0 -0.45176    0.80664  -0.560  0.5754  
b_2_1  1.05313    0.86861   1.212  0.2253  
b_2_2 -1.57570    0.70696  -2.229  0.0258 *
b_3_0  0.40385    0.48737   0.829  0.4073  
b_3_1 -0.85710    0.84821  -1.010  0.3123  
b_3_2  1.25977    0.67819   1.858  0.0632 .
R_1_2  0.29530    1.85491   0.159  0.8735  
R_1_3  0.32495    0.70449   0.461  0.6446  
R_2_3 -0.02085    0.34616  -0.060  0.9520  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

BFGS maximisation, 4 iterations
Return code 0: successful convergence 
Log-likelihood: -52.93771 on 12 Df

> logLik( estResultBFGSg )
'log Lik.' -52.93771 (df=12)
> all.equal( estResultBFGS, estResultBFGSg )
[1] "Component 1: Mean relative difference: 0.0001294771"     
[2] "Component 2: Mean relative difference: 0.00208213"       
[3] "Component 3: Mean relative difference: 0.01734211"       
[4] "Component 4: Mean relative difference: 0.01316396"       
[5] "Component 12: Mean relative difference: 0.006852369"     
[6] "Component 13: target, current do not match when deparsed"
> all.equal( estResultBFGSm, estResultBFGSg )
[1] "Component 1: Mean relative difference: 0.000122134"      
[2] "Component 2: Mean relative difference: 0.002077232"      
[3] "Component 3: Mean relative difference: 0.01738212"       
[4] "Component 4: Mean relative difference: 0.01309901"       
[5] "Component 12: Mean relative difference: 0.006838735"     
[6] "Component 13: target, current do not match when deparsed"
> 
> # estimation with the Nelder-Mead algorithm
> estResultNM <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), startSigma = sigma, 
+    data = as.data.frame( cbind( xMat, yMat ) ), 
+    method = "NM", reltol = 0.05, algorithm = GenzBretz() )
> print( estResultNM )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), startSigma = sigma, method = "NM", 
    algorithm = GenzBretz(), reltol = 0.05)

Coefficients:
b_1_0 b_1_1 b_1_2 b_2_0 b_2_1 b_2_2 b_3_0 b_3_1 b_3_2 R_1_2 R_1_3 R_2_3 
 0.80  1.20 -0.80 -0.44  1.00 -1.60  0.50 -0.60  1.20  0.20  0.40 -0.10 

> summary( estResultNM )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = as.data.frame(cbind(xMat, 
    yMat)), start = c(beta), startSigma = sigma, method = "NM", 
    algorithm = GenzBretz(), reltol = 0.05)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0   0.8000     1.0541   0.759  0.4479  
b_1_1   1.2000     0.7460   1.609  0.1077  
b_1_2  -0.8000     0.9185  -0.871  0.3838  
b_2_0  -0.4400     0.7968  -0.552  0.5808  
b_2_1   1.0000     0.8707   1.149  0.2507  
b_2_2  -1.6000     0.6578  -2.432  0.0150 *
b_3_0   0.5000     0.5151   0.971  0.3317  
b_3_1  -0.6000     0.7708  -0.778  0.4363  
b_3_2   1.2000     0.6109   1.964  0.0495 *
R_1_2   0.2000     2.4163   0.083  0.9340  
R_1_3   0.4000     0.7321   0.546  0.5848  
R_2_3  -0.1000     0.3416  -0.293  0.7697  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Nelder-Mead maximisation, 13 iterations
Return code 0: successful convergence 
Log-likelihood: -56.94782 on 12 Df

> logLik( estResultNM )
'log Lik.' -56.94782 (df=12)
> 
> 
> ## testing the logLik method
> # argument 'coef'
> all.equal( logLik( estResultBHHH ), 
+    logLik( estResultBHHH, coef = coef( estResultBHHH ) ) )
[1] TRUE
> logLik( estResultBHHH ) -
+    logLik( estResultBHHH, coef = coef( estResultBHHH ) * 0.999 )
'log Lik.' -0.004270927 (df=12)
> 
> # argument 'data'
> all.equal( logLik( estResultBHHH ), 
+    logLik( estResultBHHH, data = as.data.frame( cbind( xMat, yMat ) ) ) )
[1] TRUE
> logLik( estResultBHHH ) -
+    logLik( estResultBHHH, data = as.data.frame( cbind( xMat * 0.999, yMat ) ) )
'log Lik.' 0.01228506 (df=12)
> 
> # argument 'algorithm'
> all.equal( logLik( estResultBHHH ), 
+    logLik( estResultBHHH, algorithm = GenzBretz() ) )
[1] TRUE
> logLik( estResultBHHH ) -
+    logLik( estResultBHHH, algorithm = Miwa() )
'log Lik.' -0.001091556 (df=12)
> 
> # argument 'nGHK'
> all.equal( logLik( estResultBHHH ), 
+    logLik( estResultBHHH, nGHK = 5555 ) )
[1] TRUE
> logLik( estResultBHHH, algorithm = "GHK" ) -
+    logLik( estResultBHHH, algorithm = "GHK", nGHK = 2000 )
'log Lik.' -0.1316356 (df=12)
> 
> # argument 'random.seed'
> all.equal( logLik( estResultBHHH ), 
+    logLik( estResultBHHH, random.seed = 123 ) )
[1] TRUE
> logLik( estResultBHHH ) -
+    logLik( estResultBHHH, random.seed = 1234 )
'log Lik.' -0.006403428 (df=12)
> 
> 
> # marginal effects based on estimated coefficients with covariance matrix
> # unconditional marginal effects (with Jacobian)
> margEffUnc <- margEff( estResultBFGS, calcVCov = TRUE, returnJacobian = TRUE )
> round( margEffUnc, 4 )
   d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1     0.3229    0.3837   -0.3170   -0.4420   -0.4386    0.3859
2     0.2429    0.3994   -0.3301   -0.3876   -0.5794    0.4690
3     0.2389    0.3983   -0.3298   -0.0992   -0.5014    0.4433
4     0.4011    0.0558   -0.0842   -0.4516   -0.1886    0.2222
5     0.1883    0.3691   -0.3166   -0.0674   -0.3962    0.3847
6     0.3702    0.0349   -0.0614   -0.4554   -0.1279    0.1722
7     0.0103    0.0220   -0.0531   -0.0011   -0.0061    0.0284
8     0.4007    0.2908   -0.2596   -0.4517   -0.2457    0.2612
9     0.2867    0.3996   -0.3277   -0.4215   -0.5108    0.4287
10    0.3127    0.3897   -0.3209   -0.4370   -0.4603    0.3989
11    0.3560    0.3555   -0.2995   -0.2051   -0.6288    0.5022
12    0.1220    0.2849   -0.2707   -0.0346   -0.2369    0.2807
13    0.1608    0.3407   -0.3019   -0.0526   -0.3318    0.3453
14    0.0425    0.1103   -0.1488   -0.0076   -0.0546    0.1126
15    0.0374    0.0966   -0.1368   -0.0968   -0.2915    0.3223
16    0.3364    0.3738   -0.3108   -0.1831   -0.6238    0.5015
17    0.3724    0.3359   -0.2875   -0.2257   -0.6256    0.4990
18    0.2663    0.4021   -0.3303   -0.4069   -0.5455    0.4490
19    0.4376    0.1696   -0.1789   -0.3704   -0.4388    0.3891
20    0.2242    0.0042   -0.0150   -0.0893   -0.0007    0.0058
21    0.1244    0.2889   -0.2730   -0.2497   -0.5966    0.4914
22    0.0007    0.0007   -0.0058   -0.0030   -0.0039    0.0220
23    0.4382    0.1426   -0.1590   -0.3777   -0.0793    0.1237
24    0.0831    0.2095   -0.2234   -0.1842   -0.5030    0.4466
25    0.0866    0.2172   -0.2285   -0.1902   -0.5140    0.4522
26    0.4378    0.1366   -0.1543   -0.3724   -0.0744    0.1186
27    0.1730    0.3544   -0.3091   -0.0590   -0.3607    0.3634
28    0.0258    0.0644   -0.1056   -0.0038   -0.0256    0.0702
29    0.3030    0.3943   -0.3239   -0.4316   -0.4799    0.4105
30    0.2119    0.3863   -0.3248   -0.0814   -0.4477    0.4143
31    0.2528    0.4013   -0.3306   -0.1092   -0.5264    0.4563
32    0.3574    0.3540   -0.2985   -0.4535   -0.3598    0.3373
33    0.1517    0.3293   -0.2958   -0.0481   -0.3099    0.3311
34    0.4110    0.2694   -0.2461   -0.2871   -0.5781    0.4701
35    0.1897    0.3703   -0.3172   -0.0682   -0.3993    0.3866
36    0.3438    0.3675   -0.3068   -0.1911   -0.6267    0.5023
37    0.4348    0.1159   -0.1381   -0.4128   -0.3346    0.3245
38    0.3694    0.3398   -0.2899   -0.4553   -0.3300    0.3183
39    0.1626    0.3429   -0.3031   -0.3016   -0.6275    0.5025
40    0.4310    0.1021   -0.1267   -0.3372   -0.0489    0.0900
41    0.4384    0.1465   -0.1619   -0.3809   -0.0825    0.1269
42    0.3938    0.3034   -0.2675   -0.4538   -0.2652    0.2749
43    0.3190    0.3862   -0.3186   -0.4401   -0.4471    0.3910
44    0.0972    0.2392   -0.2427   -0.0247   -0.1762    0.2337
45    0.4025    0.0571   -0.0856   -0.4510   -0.1923    0.2251
46    0.1023    0.2493   -0.2491   -0.2160   -0.5559    0.4729
47    0.1867    0.0022   -0.0097   -0.0665   -0.0003    0.0034
48    0.3664    0.0330   -0.0592   -0.2180   -0.0104    0.0327
49    0.1857    0.3668   -0.3154   -0.0659   -0.3902    0.3812
50    0.0417    0.1082   -0.1470   -0.1059   -0.3178    0.3396
> round( attr( margEffUnc, "vcov" )[ 1:5, , ], 5 )
, , d_y1_d_x1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1   0.03878  -0.01628  -0.00651  -0.00854  -0.01955   0.00545
2   0.04152  -0.04033  -0.01921   0.00042   0.00770   0.01265
3   0.04198  -0.04115  -0.01956  -0.01635   0.02869   0.00446
4   0.07492  -0.00517   0.01406  -0.04513   0.01001  -0.02040
5   0.04747  -0.04558  -0.02118  -0.02288   0.01683  -0.00420

, , d_y2_d_x1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1  -0.01628   0.06838   0.03261  -0.03080   0.03620  -0.01750
2  -0.04033   0.09951   0.03827  -0.00917  -0.00797  -0.03596
3  -0.04115   0.10008   0.03788   0.02909  -0.02906  -0.01453
4  -0.00517   0.01255  -0.00371   0.01682  -0.02722   0.00538
5  -0.04558   0.09564   0.02809   0.02577  -0.00955   0.00067

, , d_y3_d_x1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1  -0.00651   0.03261   0.08669  -0.03197   0.00712   0.00652
2  -0.01921   0.03827   0.09483  -0.01236  -0.02197  -0.02062
3  -0.01956   0.03788   0.09444   0.02102  -0.01585  -0.00676
4   0.01406  -0.00371   0.01350  -0.00379   0.00748  -0.01737
5  -0.02118   0.02809   0.08327   0.01708  -0.00061   0.01166

, , d_y1_d_x2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1  -0.00854  -0.03080  -0.03197   0.10523  -0.01426   0.00387
2   0.00042  -0.00917  -0.01236   0.04267   0.01003   0.00431
3  -0.01635   0.02909   0.02102   0.03135  -0.01873   0.00869
4  -0.04513   0.01682  -0.00379   0.14036  -0.03461   0.00952
5  -0.02288   0.02577   0.01708   0.02534  -0.00776   0.01019

, , d_y2_d_x2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1  -0.01955   0.03620   0.00712  -0.01426   0.04658  -0.01395
2   0.00770  -0.00797  -0.02197   0.01003   0.03456  -0.00599
3   0.02869  -0.02906  -0.01585  -0.01873   0.07254  -0.01084
4   0.01001  -0.02722   0.00748  -0.03461   0.05969  -0.01081
5   0.01683  -0.00955  -0.00061  -0.00776   0.04532  -0.00745

, , d_y3_d_x2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1   0.00545  -0.01750   0.00652   0.00387  -0.01395   0.02723
2   0.01265  -0.03596  -0.02062   0.00431  -0.00599   0.05598
3   0.00446  -0.01453  -0.00676   0.00869  -0.01084   0.04245
4  -0.02040   0.00538  -0.01737   0.00952  -0.01081   0.02393
5  -0.00420   0.00067   0.01166   0.01019  -0.00745   0.02699

> round( drop( attr( margEffUnc, "vcov" )[ nObs, , ] ), 5 )
          d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
d_y1_d_x1   0.02029  -0.00281  -0.00157  -0.03176   0.01423   0.00240
d_y2_d_x1  -0.00281   0.01145  -0.00647   0.00513  -0.02030   0.00378
d_y3_d_x1  -0.00157  -0.00647   0.02122   0.00263   0.00892  -0.01584
d_y1_d_x2  -0.03176   0.00513   0.00263   0.05022  -0.02418  -0.00370
d_y2_d_x2   0.01423  -0.02030   0.00892  -0.02418   0.04688  -0.00482
d_y3_d_x2   0.00240   0.00378  -0.01584  -0.00370  -0.00482   0.01925
> round( attr( margEffUnc, "jacobian" )[ 1:5, , ], 5 )
, , b_1_0

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1  -0.23887         0         0   0.10892         0         0
2  -0.25000         0         0   0.22038         0         0
3  -0.24932         0         0   0.17321         0         0
4   0.15995         0         0   0.06036         0         0
5  -0.23207         0         0   0.13162         0         0

, , b_1_1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1   0.14811         0         0   0.00000         0         0
2   0.08938         0         0   0.00000         0         0
3   0.08688         0         0   0.17334         0         0
4   0.39538         0         0   0.06036         0         0
5   0.05902         0         0   0.13175         0         0

, , b_1_2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1  -0.06051         0         0   0.41462         0         0
2   0.00714         0         0   0.33304         0         0
3   0.01069         0         0   0.07952         0         0
4   0.21891         0         0   0.47818         0         0
5   0.05240         0         0   0.02922         0         0

, , b_2_0

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1         0   0.11229         0         0  -0.37231         0
2         0  -0.04472         0         0  -0.23432         0
3         0  -0.05278         0         0   0.33705         0
4         0   0.10633         0         0  -0.29268         0
5         0  -0.14587         0         0   0.38080         0

, , b_2_1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1         0   0.39056         0         0   0.00000         0
2         0   0.32288         0         0   0.00000         0
3         0   0.31809         0         0   0.33722         0
4         0   0.11967         0         0  -0.29272         0
5         0   0.25133         0         0   0.38080         0

, , b_2_2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1         0   0.02845         0         0   0.18394         0
2         0   0.00128         0         0   0.37434         0
3         0   0.00226         0         0   0.30357         0
4         0   0.14552         0         0  -0.28092         0
5         0   0.03293         0         0   0.16541         0

, , b_3_0

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1         0         0   0.08933         0         0  -0.28066
2         0         0  -0.01722         0         0  -0.17424
3         0         0  -0.02280         0         0   0.22207
4         0         0   0.13528         0         0  -0.28402
5         0         0  -0.09050         0         0   0.28122

, , b_3_1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1         0         0   0.39572         0         0   0.00000
2         0         0   0.35511         0         0   0.00000
3         0         0   0.35198         0         0   0.22207
4         0         0   0.17644         0         0  -0.28402
5         0         0   0.30543         0         0   0.28112

, , b_3_2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1         0         0   0.02263         0         0   0.23535
2         0         0   0.00049         0         0   0.37723
3         0         0   0.00098         0         0   0.34247
4         0         0   0.18514         0         0  -0.21204
5         0         0   0.02043         0         0   0.24198

, , R_1_2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1         0         0         0         0         0         0
2         0         0         0         0         0         0
3         0         0         0         0         0         0
4         0         0         0         0         0         0
5         0         0         0         0         0         0

, , R_1_3

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1         0         0         0         0         0         0
2         0         0         0         0         0         0
3         0         0         0         0         0         0
4         0         0         0         0         0         0
5         0         0         0         0         0         0

, , R_2_3

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1         0         0         0         0         0         0
2         0         0         0         0         0         0
3         0         0         0         0         0         0
4         0         0         0         0         0         0
5         0         0         0         0         0         0

> round( drop( attr( margEffUnc, "jacobian" )[ nObs, , ] ), 5 )
             b_1_0  b_1_1    b_1_2    b_2_0   b_2_1    b_2_2    b_3_0   b_3_1
d_y1_d_x1 -0.08621 0.0065  0.08849  0.00000 0.00000  0.00000  0.00000 0.00000
d_y2_d_x1  0.00000 0.0000  0.00000 -0.16791 0.03369  0.17234  0.00000 0.00000
d_y3_d_x1  0.00000 0.0000  0.00000  0.00000 0.00000  0.00000 -0.18169 0.08789
d_y1_d_x2  0.18095 0.0000 -0.09292  0.00000 0.00000  0.00000  0.00000 0.00000
d_y2_d_x2  0.00000 0.0000  0.00000  0.37152 0.00000 -0.17955  0.00000 0.00000
d_y3_d_x2  0.00000 0.0000  0.00000  0.00000 0.00000  0.00000  0.30059 0.00000
             b_3_2 R_1_2 R_1_3 R_2_3
d_y1_d_x1  0.00000     0     0     0
d_y2_d_x1  0.00000     0     0     0
d_y3_d_x1  0.18649     0     0     0
d_y1_d_x2  0.00000     0     0     0
d_y2_d_x2  0.00000     0     0     0
d_y3_d_x2 -0.03894     0     0     0
> print( summary( margEffUnc ), digits = 3 )
               Estimate Std. error z value Pr(> z)   
1: d_y1_d_x1   0.322949   0.196918    1.64  0.1010   
1: d_y2_d_x1   0.383668   0.261500    1.47  0.1423   
1: d_y3_d_x1  -0.316956   0.294430   -1.08  0.2817   
1: d_y1_d_x2  -0.441980   0.324390   -1.36  0.1730   
1: d_y2_d_x2  -0.438613   0.215833   -2.03  0.0421 * 
1: d_y3_d_x2   0.385921   0.165028    2.34  0.0194 * 
2: d_y1_d_x1   0.242945   0.203766    1.19  0.2332   
2: d_y2_d_x1   0.399380   0.315449    1.27  0.2055   
2: d_y3_d_x1  -0.330145   0.307940   -1.07  0.2837   
2: d_y1_d_x2  -0.387615   0.206572   -1.88  0.0606 . 
2: d_y2_d_x2  -0.579426   0.185897   -3.12  0.0018 **
2: d_y3_d_x2   0.468986   0.236600    1.98  0.0475 * 
3: d_y1_d_x1   0.238860   0.204898    1.17  0.2437   
3: d_y2_d_x1   0.398279   0.316361    1.26  0.2081   
3: d_y3_d_x1  -0.329784   0.307304   -1.07  0.2832   
3: d_y1_d_x2  -0.099224   0.177047   -0.56  0.5752   
3: d_y2_d_x2  -0.501392   0.269339   -1.86  0.0627 . 
3: d_y3_d_x2   0.443347   0.206027    2.15  0.0314 * 
4: d_y1_d_x1   0.401084   0.273718    1.47  0.1428   
4: d_y2_d_x1   0.055784   0.112019    0.50  0.6185   
4: d_y3_d_x1  -0.084206   0.116174   -0.72  0.4686   
4: d_y1_d_x2  -0.451572   0.374648   -1.21  0.2281   
4: d_y2_d_x2  -0.188632   0.244310   -0.77  0.4401   
4: d_y3_d_x2   0.222239   0.154678    1.44  0.1508   
5: d_y1_d_x1   0.188323   0.217878    0.86  0.3874   
5: d_y2_d_x1   0.369108   0.309262    1.19  0.2327   
5: d_y3_d_x1  -0.316570   0.288564   -1.10  0.2726   
5: d_y1_d_x2  -0.067412   0.159173   -0.42  0.6719   
5: d_y2_d_x2  -0.396156   0.212880   -1.86  0.0628 . 
5: d_y3_d_x2   0.384719   0.164295    2.34  0.0192 * 
6: d_y1_d_x1   0.370209   0.247995    1.49  0.1355   
6: d_y2_d_x1   0.034883   0.085815    0.41  0.6844   
6: d_y3_d_x1  -0.061413   0.100444   -0.61  0.5409   
6: d_y1_d_x2  -0.455364   0.371544   -1.23  0.2203   
6: d_y2_d_x2  -0.127861   0.219164   -0.58  0.5596   
6: d_y3_d_x2   0.172172   0.158976    1.08  0.2788   
7: d_y1_d_x1   0.010321   0.057829    0.18  0.8584   
7: d_y2_d_x1   0.022046   0.038926    0.57  0.5712   
7: d_y3_d_x1  -0.053124   0.094541   -0.56  0.5742   
7: d_y1_d_x2  -0.001122   0.010014   -0.11  0.9108   
7: d_y2_d_x2  -0.006067   0.020284   -0.30  0.7649   
7: d_y3_d_x2   0.028393   0.080909    0.35  0.7256   
8: d_y1_d_x1   0.400710   0.251339    1.59  0.1109   
8: d_y2_d_x1   0.290794   0.183965    1.58  0.1139   
8: d_y3_d_x1  -0.259619   0.232712   -1.12  0.2646   
8: d_y1_d_x2  -0.451712   0.377936   -1.20  0.2320   
8: d_y2_d_x2  -0.245677   0.289635   -0.85  0.3963   
8: d_y3_d_x2   0.261221   0.138885    1.88  0.0600 . 
9: d_y1_d_x1   0.286665   0.194810    1.47  0.1412   
9: d_y2_d_x1   0.399628   0.293484    1.36  0.1733   
9: d_y3_d_x1  -0.327737   0.306637   -1.07  0.2852   
9: d_y1_d_x2  -0.421511   0.273416   -1.54  0.1232   
9: d_y2_d_x2  -0.510816   0.176872   -2.89  0.0039 **
9: d_y3_d_x2   0.428728   0.197373    2.17  0.0298 * 
10: d_y1_d_x1  0.312655   0.195065    1.60  0.1090   
10: d_y2_d_x1  0.389724   0.271536    1.44  0.1512   
10: d_y3_d_x1 -0.320854   0.298913   -1.07  0.2831   
10: d_y1_d_x2 -0.436950   0.310884   -1.41  0.1599   
10: d_y2_d_x2 -0.460305   0.202636   -2.27  0.0231 * 
10: d_y3_d_x2  0.398909   0.173735    2.30  0.0217 * 
11: d_y1_d_x1  0.355981   0.210988    1.69  0.0916 . 
11: d_y2_d_x1  0.355468   0.226547    1.57  0.1166   
11: d_y3_d_x1 -0.299468   0.274509   -1.09  0.2753   
11: d_y1_d_x2 -0.205103   0.168786   -1.22  0.2243   
11: d_y2_d_x2 -0.628813   0.293311   -2.14  0.0320 * 
11: d_y3_d_x2  0.502249   0.271428    1.85  0.0643 . 
12: d_y1_d_x1  0.121966   0.216721    0.56  0.5736   
12: d_y2_d_x1  0.284903   0.245511    1.16  0.2459   
12: d_y3_d_x1 -0.270662   0.234525   -1.15  0.2485   
12: d_y1_d_x2 -0.034586   0.117165   -0.30  0.7678   
12: d_y2_d_x2 -0.236927   0.155193   -1.53  0.1268   
12: d_y3_d_x2  0.280689   0.149509    1.88  0.0605 . 
13: d_y1_d_x1  0.160796   0.221215    0.73  0.4673   
13: d_y2_d_x1  0.340730   0.290280    1.17  0.2405   
13: d_y3_d_x1 -0.301945   0.269965   -1.12  0.2634   
13: d_y1_d_x2 -0.052636   0.144309   -0.36  0.7153   
13: d_y2_d_x2 -0.331848   0.184923   -1.79  0.0727 . 
13: d_y3_d_x2  0.345313   0.150509    2.29  0.0218 * 
14: d_y1_d_x1  0.042505   0.143874    0.30  0.7677   
14: d_y2_d_x1  0.110322   0.108439    1.02  0.3090   
14: d_y3_d_x1 -0.148797   0.146497   -1.02  0.3098   
14: d_y1_d_x2 -0.007620   0.044091   -0.17  0.8628   
14: d_y2_d_x2 -0.054582   0.086776   -0.63  0.5294   
14: d_y3_d_x2  0.112624   0.155978    0.72  0.4703   
15: d_y1_d_x1  0.037444   0.134118    0.28  0.7801   
15: d_y2_d_x1  0.096639   0.098930    0.98  0.3286   
15: d_y3_d_x1 -0.136761   0.141016   -0.97  0.3321   
15: d_y1_d_x2 -0.096793   0.219778   -0.44  0.6596   
15: d_y2_d_x2 -0.291550   0.203382   -1.43  0.1517   
15: d_y3_d_x2  0.322288   0.137079    2.35  0.0187 * 
16: d_y1_d_x1  0.336446   0.201107    1.67  0.0943 . 
16: d_y2_d_x1  0.373815   0.247544    1.51  0.1310   
16: d_y3_d_x1 -0.310771   0.287320   -1.08  0.2794   
16: d_y1_d_x2 -0.183076   0.173832   -1.05  0.2923   
16: d_y2_d_x2 -0.623778   0.308569   -2.02  0.0432 * 
16: d_y3_d_x2  0.501468   0.269708    1.86  0.0630 . 
17: d_y1_d_x1  0.372387   0.222919    1.67  0.0948 . 
17: d_y2_d_x1  0.335916   0.209250    1.61  0.1084   
17: d_y3_d_x1 -0.287500   0.261345   -1.10  0.2713   
17: d_y1_d_x2 -0.225743   0.165352   -1.37  0.1722   
17: d_y2_d_x2 -0.625626   0.272011   -2.30  0.0214 * 
17: d_y3_d_x2  0.499011   0.268223    1.86  0.0628 . 
18: d_y1_d_x1  0.266340   0.197978    1.35  0.1785   
18: d_y2_d_x1  0.402133   0.306328    1.31  0.1893   
18: d_y3_d_x1 -0.330275   0.309080   -1.07  0.2853   
18: d_y1_d_x2 -0.406930   0.242134   -1.68  0.0928 . 
18: d_y2_d_x2 -0.545540   0.171628   -3.18  0.0015 **
18: d_y3_d_x2  0.449048   0.216278    2.08  0.0379 * 
19: d_y1_d_x1  0.437643   0.305707    1.43  0.1523   
19: d_y2_d_x1  0.169636   0.165274    1.03  0.3047   
19: d_y3_d_x1 -0.178946   0.168453   -1.06  0.2881   
19: d_y1_d_x2 -0.370373   0.254999   -1.45  0.1464   
19: d_y2_d_x2 -0.438811   0.179221   -2.45  0.0143 * 
19: d_y3_d_x2  0.389108   0.172050    2.26  0.0237 * 
20: d_y1_d_x1  0.224159   0.220319    1.02  0.3090   
20: d_y2_d_x1  0.004204   0.018901    0.22  0.8240   
20: d_y3_d_x1 -0.014954   0.044035   -0.34  0.7342   
20: d_y1_d_x2 -0.089300   0.157951   -0.57  0.5718   
20: d_y2_d_x2 -0.000718   0.005367   -0.13  0.8935   
20: d_y3_d_x2  0.005756   0.025331    0.23  0.8202   
21: d_y1_d_x1  0.124369   0.217405    0.57  0.5673   
21: d_y2_d_x1  0.288912   0.248854    1.16  0.2457   
21: d_y3_d_x1 -0.273009   0.236991   -1.15  0.2493   
21: d_y1_d_x2 -0.249666   0.172769   -1.45  0.1484   
21: d_y2_d_x2 -0.596585   0.336789   -1.77  0.0765 . 
21: d_y3_d_x2  0.491441   0.255004    1.93  0.0540 . 
22: d_y1_d_x1  0.000746   0.007298    0.10  0.9186   
22: d_y2_d_x1  0.000700   0.002947    0.24  0.8123   
22: d_y3_d_x1 -0.005794   0.022938   -0.25  0.8006   
22: d_y1_d_x2 -0.002964   0.024423   -0.12  0.9034   
22: d_y2_d_x2 -0.003876   0.013678   -0.28  0.7769   
22: d_y3_d_x2  0.022019   0.068687    0.32  0.7485   
23: d_y1_d_x1  0.438223   0.309067    1.42  0.1562   
23: d_y2_d_x1  0.142645   0.160488    0.89  0.3741   
23: d_y3_d_x1 -0.158984   0.156551   -1.02  0.3098   
23: d_y1_d_x2 -0.377686   0.268895   -1.40  0.1601   
23: d_y2_d_x2 -0.079332   0.196243   -0.40  0.6860   
23: d_y3_d_x2  0.123707   0.147667    0.84  0.4022   
24: d_y1_d_x1  0.083054   0.195529    0.42  0.6710   
24: d_y2_d_x1  0.209539   0.182922    1.15  0.2520   
24: d_y3_d_x1 -0.223403   0.191438   -1.17  0.2432   
24: d_y1_d_x2 -0.184151   0.215845   -0.85  0.3936   
24: d_y2_d_x2 -0.502962   0.312170   -1.61  0.1071   
24: d_y3_d_x2  0.446573   0.203034    2.20  0.0278 * 
25: d_y1_d_x1  0.086590   0.198371    0.44  0.6625   
25: d_y2_d_x1  0.217209   0.189148    1.15  0.2508   
25: d_y3_d_x1 -0.228509   0.195493   -1.17  0.2425   
25: d_y1_d_x2 -0.190194   0.212676   -0.89  0.3712   
25: d_y2_d_x2 -0.514030   0.317334   -1.62  0.1053   
25: d_y3_d_x2  0.452241   0.208941    2.16  0.0304 * 
26: d_y1_d_x1  0.437838   0.309147    1.42  0.1567   
26: d_y2_d_x1  0.136570   0.158987    0.86  0.3903   
26: d_y3_d_x1 -0.154341   0.153950   -1.00  0.3161   
26: d_y1_d_x2 -0.372386   0.261166   -1.43  0.1539   
26: d_y2_d_x2 -0.074406   0.189433   -0.39  0.6945   
26: d_y3_d_x2  0.118603   0.146519    0.81  0.4182   
27: d_y1_d_x1  0.172960   0.220257    0.79  0.4323   
27: d_y2_d_x1  0.354388   0.300008    1.18  0.2375   
27: d_y3_d_x1 -0.309112   0.278896   -1.11  0.2677   
27: d_y1_d_x2 -0.058957   0.151479   -0.39  0.6971   
27: d_y2_d_x2 -0.360712   0.196539   -1.84  0.0665 . 
27: d_y3_d_x2  0.363374   0.155409    2.34  0.0194 * 
28: d_y1_d_x1  0.025789   0.107376    0.24  0.8102   
28: d_y2_d_x1  0.064447   0.076172    0.85  0.3975   
28: d_y3_d_x1 -0.105597   0.127019   -0.83  0.4058   
28: d_y1_d_x2 -0.003833   0.026216   -0.15  0.8838   
28: d_y2_d_x2 -0.025648   0.055647   -0.46  0.6449   
28: d_y3_d_x2  0.070196   0.132078    0.53  0.5951   
29: d_y1_d_x1  0.302966   0.194286    1.56  0.1189   
29: d_y2_d_x1  0.394307   0.280347    1.41  0.1596   
29: d_y3_d_x1 -0.323907   0.302394   -1.07  0.2841   
29: d_y1_d_x2 -0.431638   0.297185   -1.45  0.1464   
29: d_y2_d_x2 -0.479875   0.191359   -2.51  0.0122 * 
29: d_y3_d_x2  0.410521   0.182284    2.25  0.0243 * 
30: d_y1_d_x1  0.211873   0.212413    1.00  0.3185   
30: d_y2_d_x1  0.386318   0.316927    1.22  0.2229   
30: d_y3_d_x1 -0.324795   0.299802   -1.08  0.2786   
30: d_y1_d_x2 -0.081441   0.169162   -0.48  0.6302   
30: d_y2_d_x2 -0.447678   0.239687   -1.87  0.0618 . 
30: d_y3_d_x2  0.414265   0.182335    2.27  0.0231 * 
31: d_y1_d_x1  0.252767   0.201153    1.26  0.2089   
31: d_y2_d_x1  0.401271   0.312409    1.28  0.1990   
31: d_y3_d_x1 -0.330599   0.308937   -1.07  0.2846   
31: d_y1_d_x2 -0.109161   0.179655   -0.61  0.5434   
31: d_y2_d_x2 -0.526390   0.283287   -1.86  0.0631 . 
31: d_y3_d_x2  0.456293   0.218318    2.09  0.0366 * 
32: d_y1_d_x1  0.357377   0.211873    1.69  0.0917 . 
32: d_y2_d_x1  0.353960   0.225046    1.57  0.1158   
32: d_y3_d_x1 -0.298544   0.273476   -1.09  0.2750   
32: d_y1_d_x2 -0.453546   0.361164   -1.26  0.2092   
32: d_y2_d_x2 -0.359757   0.260225   -1.38  0.1668   
32: d_y3_d_x2  0.337326   0.142855    2.36  0.0182 * 
33: d_y1_d_x1  0.151690   0.221287    0.69  0.4930   
33: d_y2_d_x1  0.329328   0.281624    1.17  0.2422   
33: d_y3_d_x1 -0.295806   0.262565   -1.13  0.2599   
33: d_y1_d_x2 -0.048116   0.138552   -0.35  0.7284   
33: d_y2_d_x2 -0.309880   0.176702   -1.75  0.0795 . 
33: d_y3_d_x2  0.331118   0.148297    2.23  0.0256 * 
34: d_y1_d_x1  0.410969   0.264072    1.56  0.1196   
34: d_y2_d_x1  0.269377   0.177386    1.52  0.1289   
34: d_y3_d_x1 -0.246106   0.219981   -1.12  0.2632   
34: d_y1_d_x2 -0.287100   0.175036   -1.64  0.1010   
34: d_y2_d_x2 -0.578074   0.193775   -2.98  0.0029 **
34: d_y3_d_x2  0.470093   0.237751    1.98  0.0480 * 
35: d_y1_d_x1  0.189725   0.217606    0.87  0.3833   
35: d_y2_d_x1  0.370313   0.309938    1.19  0.2322   
35: d_y3_d_x1 -0.317167   0.289355   -1.10  0.2730   
35: d_y1_d_x2 -0.068211   0.159857   -0.43  0.6696   
35: d_y2_d_x2 -0.399327   0.214344   -1.86  0.0625 . 
35: d_y3_d_x2  0.386586   0.165292    2.34  0.0193 * 
36: d_y1_d_x1  0.343841   0.204302    1.68  0.0924 . 
36: d_y2_d_x1  0.367458   0.239646    1.53  0.1252   
36: d_y3_d_x1 -0.306836   0.282826   -1.08  0.2780   
36: d_y1_d_x2 -0.191131   0.171683   -1.11  0.2656   
36: d_y2_d_x2 -0.626694   0.303953   -2.06  0.0392 * 
36: d_y3_d_x2  0.502296   0.270975    1.85  0.0638 . 
37: d_y1_d_x1  0.434812   0.307197    1.42  0.1569   
37: d_y2_d_x1  0.115936   0.152335    0.76  0.4466   
37: d_y3_d_x1 -0.138075   0.145202   -0.95  0.3416   
37: d_y1_d_x2 -0.412808   0.317250   -1.30  0.1932   
37: d_y2_d_x2 -0.334552   0.226035   -1.48  0.1388   
37: d_y3_d_x2  0.324545   0.149206    2.18  0.0296 * 
38: d_y1_d_x1  0.369369   0.220473    1.68  0.0939 . 
38: d_y2_d_x1  0.339824   0.212352    1.60  0.1095   
38: d_y3_d_x1 -0.289893   0.263939   -1.10  0.2721   
38: d_y1_d_x2 -0.455295   0.370115   -1.23  0.2186   
38: d_y2_d_x2 -0.330039   0.272933   -1.21  0.2266   
38: d_y3_d_x2  0.318288   0.138877    2.29  0.0219 * 
39: d_y1_d_x1  0.162595   0.221132    0.74  0.4622   
39: d_y2_d_x1  0.342864   0.291853    1.17  0.2401   
39: d_y3_d_x1 -0.303079   0.271356   -1.12  0.2640   
39: d_y1_d_x2 -0.301623   0.143921   -2.10  0.0361 * 
39: d_y2_d_x2 -0.627533   0.306023   -2.05  0.0403 * 
39: d_y3_d_x2  0.502499   0.271368    1.85  0.0641 . 
40: d_y1_d_x1  0.431008   0.303667    1.42  0.1558   
40: d_y2_d_x1  0.102131   0.146266    0.70  0.4850   
40: d_y3_d_x1 -0.126696   0.139294   -0.91  0.3631   
40: d_y1_d_x2 -0.337178   0.212508   -1.59  0.1126   
40: d_y2_d_x2 -0.048879   0.147113   -0.33  0.7397   
40: d_y3_d_x2  0.090013   0.136414    0.66  0.5093   
41: d_y1_d_x1  0.438360   0.308880    1.42  0.1558   
41: d_y2_d_x1  0.146460   0.161340    0.91  0.3640   
41: d_y3_d_x1 -0.161870   0.158196   -1.02  0.3062   
41: d_y1_d_x2 -0.380896   0.273725   -1.39  0.1641   
41: d_y2_d_x2 -0.082491   0.200502   -0.41  0.6808   
41: d_y3_d_x2  0.126926   0.148233    0.86  0.3919   
42: d_y1_d_x1  0.393819   0.243519    1.62  0.1058   
42: d_y2_d_x1  0.303393   0.189282    1.60  0.1090   
42: d_y3_d_x1 -0.267470   0.240464   -1.11  0.2660   
42: d_y1_d_x2 -0.453789   0.378651   -1.20  0.2307   
42: d_y2_d_x2 -0.265246   0.288631   -0.92  0.3581   
42: d_y3_d_x2  0.274927   0.137658    2.00  0.0458 * 
43: d_y1_d_x1  0.318954   0.196067    1.63  0.1038   
43: d_y2_d_x1  0.386165   0.265468    1.45  0.1458   
43: d_y3_d_x1 -0.318551   0.296266   -1.08  0.2823   
43: d_y1_d_x2 -0.440106   0.319152   -1.38  0.1679   
43: d_y2_d_x2 -0.447139   0.210625   -2.12  0.0338 * 
43: d_y3_d_x2  0.391042   0.168240    2.32  0.0201 * 
44: d_y1_d_x1  0.097179   0.205671    0.47  0.6366   
44: d_y2_d_x1  0.239189   0.207254    1.15  0.2485   
44: d_y3_d_x1 -0.242745   0.207562   -1.17  0.2422   
44: d_y1_d_x2 -0.024716   0.096528   -0.26  0.7979   
44: d_y2_d_x2 -0.176194   0.140569   -1.25  0.2100   
44: d_y3_d_x2  0.233697   0.157196    1.49  0.1371   
45: d_y1_d_x1  0.402524   0.275082    1.46  0.1434   
45: d_y2_d_x1  0.057128   0.113412    0.50  0.6145   
45: d_y3_d_x1 -0.085567   0.117002   -0.73  0.4646   
45: d_y1_d_x2 -0.451004   0.373821   -1.21  0.2276   
45: d_y2_d_x2 -0.192321   0.245067   -0.78  0.4326   
45: d_y3_d_x2  0.225089   0.154246    1.46  0.1445   
46: d_y1_d_x1  0.102327   0.208618    0.49  0.6238   
46: d_y2_d_x1  0.249344   0.215718    1.16  0.2477   
46: d_y3_d_x1 -0.249136   0.213349   -1.17  0.2429   
46: d_y1_d_x2 -0.216048   0.196910   -1.10  0.2726   
46: d_y2_d_x2 -0.555872   0.332553   -1.67  0.0946 . 
46: d_y3_d_x2  0.472884   0.231970    2.04  0.0415 * 
47: d_y1_d_x1  0.186655   0.223900    0.83  0.4045   
47: d_y2_d_x1  0.002191   0.011218    0.20  0.8452   
47: d_y3_d_x1 -0.009700   0.032679   -0.30  0.7666   
47: d_y1_d_x2 -0.066468   0.146437   -0.45  0.6499   
47: d_y2_d_x2 -0.000316   0.002632   -0.12  0.9043   
47: d_y3_d_x2  0.003382   0.016796    0.20  0.8404   
48: d_y1_d_x1  0.366420   0.245350    1.49  0.1353   
48: d_y2_d_x1  0.033039   0.083009    0.40  0.6906   
48: d_y3_d_x1 -0.059215   0.098685   -0.60  0.5485   
48: d_y1_d_x2 -0.217973   0.142170   -1.53  0.1252   
48: d_y2_d_x2 -0.010370   0.048540   -0.21  0.8308   
48: d_y3_d_x2  0.032673   0.083979    0.39  0.6972   
49: d_y1_d_x1  0.185698   0.218364    0.85  0.3951   
49: d_y2_d_x1  0.366791   0.307921    1.19  0.2336   
49: d_y3_d_x1 -0.315417   0.287042   -1.10  0.2718   
49: d_y1_d_x2 -0.065929   0.158136   -0.42  0.6767   
49: d_y2_d_x2 -0.390192   0.209995   -1.86  0.0632 . 
49: d_y3_d_x2  0.381188   0.162601    2.34  0.0191 * 
50: d_y1_d_x1  0.041727   0.142436    0.29  0.7696   
50: d_y2_d_x1  0.108233   0.106983    1.01  0.3117   
50: d_y3_d_x1 -0.146997   0.145662   -1.01  0.3129   
50: d_y1_d_x2 -0.105894   0.224088   -0.47  0.6365   
50: d_y2_d_x2 -0.317768   0.216518   -1.47  0.1422   
50: d_y3_d_x2  0.339568   0.138744    2.45  0.0144 * 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> # now with explicitly specifying dummy variables
> margEffUncD <- margEff( estResultBFGS, calcVCov = TRUE, returnJacobian = TRUE,
+    dummyVars = c( "x1" ) )
> all.equal( margEffUncD, margEffUnc )
[1] TRUE
> # now with seemingly no dummy variables
> margEffUncD0 <- margEff( estResultBFGS, calcVCov = TRUE, returnJacobian = TRUE,
+    dummyVars = NULL )
> print( summary( margEffUncD0 ), digits = 3 )
               Estimate Std. error z value Pr(> z)   
1: d_y1_d_x1   0.449287   0.354068    1.27  0.2045   
1: d_y2_d_x1   0.293558   0.131141    2.24  0.0252 * 
1: d_y3_d_x1  -0.261657   0.179681   -1.46  0.1453   
1: d_y1_d_x2  -0.441980   0.324390   -1.36  0.1730   
1: d_y2_d_x2  -0.438613   0.215833   -2.03  0.0421 * 
1: d_y3_d_x2   0.385921   0.165028    2.34  0.0194 * 
2: d_y1_d_x1   0.394022   0.313263    1.26  0.2085   
2: d_y2_d_x1   0.387802   0.230711    1.68  0.0928 . 
2: d_y3_d_x1  -0.317975   0.273601   -1.16  0.2452   
2: d_y1_d_x2  -0.387615   0.206572   -1.88  0.0606 . 
2: d_y2_d_x2  -0.579426   0.185897   -3.12  0.0018 **
2: d_y3_d_x2   0.468986   0.236600    1.98  0.0475 * 
3: d_y1_d_x1   0.100864   0.192079    0.53  0.5995   
3: d_y2_d_x1   0.335575   0.246612    1.36  0.1736   
3: d_y3_d_x1  -0.300591   0.231523   -1.30  0.1942   
3: d_y1_d_x2  -0.099224   0.177047   -0.56  0.5752   
3: d_y2_d_x2  -0.501392   0.269339   -1.86  0.0627 . 
3: d_y3_d_x2   0.443347   0.206027    2.15  0.0314 * 
4: d_y1_d_x1   0.459037   0.346381    1.33  0.1851   
4: d_y2_d_x1   0.126249   0.195112    0.65  0.5176   
4: d_y3_d_x1  -0.150679   0.214542   -0.70  0.4825   
4: d_y1_d_x2  -0.451572   0.374648   -1.21  0.2281   
4: d_y2_d_x2  -0.188632   0.244310   -0.77  0.4401   
4: d_y3_d_x2   0.222239   0.154678    1.44  0.1508   
5: d_y1_d_x1   0.068526   0.171625    0.40  0.6897   
5: d_y2_d_x1   0.265142   0.170649    1.55  0.1203   
5: d_y3_d_x1  -0.260841   0.168281   -1.55  0.1211   
5: d_y1_d_x2  -0.067412   0.159173   -0.42  0.6719   
5: d_y2_d_x2  -0.396156   0.212880   -1.86  0.0628 . 
5: d_y3_d_x2   0.384719   0.164295    2.34  0.0192 * 
6: d_y1_d_x1   0.462892   0.367912    1.26  0.2083   
6: d_y2_d_x1   0.085576   0.163367    0.52  0.6004   
6: d_y3_d_x1  -0.116733   0.185425   -0.63  0.5290   
6: d_y1_d_x2  -0.455364   0.371544   -1.23  0.2203   
6: d_y2_d_x2  -0.127861   0.219164   -0.58  0.5596   
6: d_y3_d_x2   0.172172   0.158976    1.08  0.2788   
7: d_y1_d_x1   0.001141   0.010421    0.11  0.9128   
7: d_y2_d_x1   0.004061   0.012802    0.32  0.7511   
7: d_y3_d_x1  -0.019250   0.052227   -0.37  0.7124   
7: d_y1_d_x2  -0.001122   0.010014   -0.11  0.9108   
7: d_y2_d_x2  -0.006067   0.020284   -0.30  0.7649   
7: d_y3_d_x2   0.028393   0.080909    0.35  0.7256   
8: d_y1_d_x1   0.459179   0.354831    1.29  0.1956   
8: d_y2_d_x1   0.164429   0.160778    1.02  0.3064   
8: d_y3_d_x1  -0.177109   0.104070   -1.70  0.0888 . 
8: d_y1_d_x2  -0.451712   0.377936   -1.20  0.2320   
8: d_y2_d_x2  -0.245677   0.289635   -0.85  0.3963   
8: d_y3_d_x2   0.261221   0.138885    1.88  0.0600 . 
9: d_y1_d_x1   0.428480   0.335465    1.28  0.2015   
9: d_y2_d_x1   0.341882   0.159257    2.15  0.0318 * 
9: d_y3_d_x1  -0.290680   0.223508   -1.30  0.1934   
9: d_y1_d_x2  -0.421511   0.273416   -1.54  0.1232   
9: d_y2_d_x2  -0.510816   0.176872   -2.89  0.0039 **
9: d_y3_d_x2   0.428728   0.197373    2.17  0.0298 * 
10: d_y1_d_x1  0.444174   0.349220    1.27  0.2034   
10: d_y2_d_x1  0.308076   0.135036    2.28  0.0225 * 
10: d_y3_d_x1 -0.270462   0.192068   -1.41  0.1591   
10: d_y1_d_x2 -0.436950   0.310884   -1.41  0.1599   
10: d_y2_d_x2 -0.460305   0.202636   -2.27  0.0231 * 
10: d_y3_d_x2  0.398909   0.173735    2.30  0.0217 * 
11: d_y1_d_x1  0.208494   0.173501    1.20  0.2295   
11: d_y2_d_x1  0.420856   0.352717    1.19  0.2328   
11: d_y3_d_x1 -0.340527   0.341944   -1.00  0.3193   
11: d_y1_d_x2 -0.205103   0.168786   -1.22  0.2243   
11: d_y2_d_x2 -0.628813   0.293311   -2.14  0.0320 * 
11: d_y3_d_x2  0.502249   0.271428    1.85  0.0643 . 
12: d_y1_d_x1  0.035158   0.124986    0.28  0.7785   
12: d_y2_d_x1  0.158572   0.091790    1.73  0.0841 . 
12: d_y3_d_x1 -0.190309   0.104718   -1.82  0.0692 . 
12: d_y1_d_x2 -0.034586   0.117165   -0.30  0.7678   
12: d_y2_d_x2 -0.236927   0.155193   -1.53  0.1268   
12: d_y3_d_x2  0.280689   0.149509    1.88  0.0605 . 
13: d_y1_d_x1  0.053507   0.154927    0.35  0.7298   
13: d_y2_d_x1  0.222101   0.132286    1.68  0.0932 . 
13: d_y3_d_x1 -0.234124   0.136566   -1.71  0.0865 . 
13: d_y1_d_x2 -0.052636   0.144309   -0.36  0.7153   
13: d_y2_d_x2 -0.331848   0.184923   -1.79  0.0727 . 
13: d_y3_d_x2  0.345313   0.150509    2.29  0.0218 * 
14: d_y1_d_x1  0.007745   0.046329    0.17  0.8672   
14: d_y2_d_x1  0.036531   0.050734    0.72  0.4715   
14: d_y3_d_x1 -0.076360   0.094952   -0.80  0.4213   
14: d_y1_d_x2 -0.007620   0.044091   -0.17  0.8628   
14: d_y2_d_x2 -0.054582   0.086776   -0.63  0.5294   
14: d_y3_d_x2  0.112624   0.155978    0.72  0.4703   
15: d_y1_d_x1  0.098393   0.266701    0.37  0.7122   
15: d_y2_d_x1  0.195130   0.239588    0.81  0.4154   
15: d_y3_d_x1 -0.218513   0.261141   -0.84  0.4027   
15: d_y1_d_x2 -0.096793   0.219778   -0.44  0.6596   
15: d_y2_d_x2 -0.291550   0.203382   -1.43  0.1517   
15: d_y3_d_x2  0.322288   0.137079    2.35  0.0187 * 
16: d_y1_d_x1  0.186103   0.183995    1.01  0.3118   
16: d_y2_d_x1  0.417486   0.347604    1.20  0.2297   
16: d_y3_d_x1 -0.339998   0.330322   -1.03  0.3033   
16: d_y1_d_x2 -0.183076   0.173832   -1.05  0.2923   
16: d_y2_d_x2 -0.623778   0.308569   -2.02  0.0432 * 
16: d_y3_d_x2  0.501468   0.269708    1.86  0.0630 . 
17: d_y1_d_x1  0.229475   0.162688    1.41  0.1584   
17: d_y2_d_x1  0.418723   0.351252    1.19  0.2332   
17: d_y3_d_x1 -0.338332   0.348454   -0.97  0.3316   
17: d_y1_d_x2 -0.225743   0.165352   -1.37  0.1722   
17: d_y2_d_x2 -0.625626   0.272011   -2.30  0.0214 * 
17: d_y3_d_x2  0.499011   0.268223    1.86  0.0628 . 
18: d_y1_d_x1  0.413657   0.324473    1.27  0.2024   
18: d_y2_d_x1  0.365123   0.189324    1.93  0.0538 . 
18: d_y3_d_x1 -0.304457   0.247468   -1.23  0.2186   
18: d_y1_d_x2 -0.406930   0.242134   -1.68  0.0928 . 
18: d_y2_d_x2 -0.545540   0.171628   -3.18  0.0015 **
18: d_y3_d_x2  0.449048   0.216278    2.08  0.0379 * 
19: d_y1_d_x1  0.376496   0.193763    1.94  0.0520 . 
19: d_y2_d_x1  0.293690   0.267714    1.10  0.2726   
19: d_y3_d_x1 -0.263817   0.307579   -0.86  0.3910   
19: d_y1_d_x2 -0.370373   0.254999   -1.45  0.1464   
19: d_y2_d_x2 -0.438811   0.179221   -2.45  0.0143 * 
19: d_y3_d_x2  0.389108   0.172050    2.26  0.0237 * 
20: d_y1_d_x1  0.090777   0.178031    0.51  0.6101   
20: d_y2_d_x1  0.000481   0.003502    0.14  0.8908   
20: d_y3_d_x1 -0.003903   0.016788   -0.23  0.8162   
20: d_y1_d_x2 -0.089300   0.157951   -0.57  0.5718   
20: d_y2_d_x2 -0.000718   0.005367   -0.13  0.8935   
20: d_y3_d_x2  0.005756   0.025331    0.23  0.8202   
21: d_y1_d_x1  0.253793   0.308452    0.82  0.4106   
21: d_y2_d_x1  0.399286   0.393752    1.01  0.3106   
21: d_y3_d_x1 -0.333199   0.347249   -0.96  0.3373   
21: d_y1_d_x2 -0.249666   0.172769   -1.45  0.1484   
21: d_y2_d_x2 -0.596585   0.336789   -1.77  0.0765 . 
21: d_y3_d_x2  0.491441   0.255004    1.93  0.0540 . 
22: d_y1_d_x1  0.003013   0.025922    0.12  0.9075   
22: d_y2_d_x1  0.002594   0.009618    0.27  0.7874   
22: d_y3_d_x1 -0.014929   0.051606   -0.29  0.7724   
22: d_y1_d_x2 -0.002964   0.024423   -0.12  0.9034   
22: d_y2_d_x2 -0.003876   0.013678   -0.28  0.7769   
22: d_y3_d_x2  0.022019   0.068687    0.32  0.7485   
23: d_y1_d_x1  0.383930   0.232237    1.65  0.0983 . 
23: d_y2_d_x1  0.053096   0.120092    0.44  0.6584   
23: d_y3_d_x1 -0.083874   0.092165   -0.91  0.3628   
23: d_y1_d_x2 -0.377686   0.268895   -1.40  0.1601   
23: d_y2_d_x2 -0.079332   0.196243   -0.40  0.6860   
23: d_y3_d_x2  0.123707   0.147667    0.84  0.4022   
24: d_y1_d_x1  0.187196   0.311645    0.60  0.5481   
24: d_y2_d_x1  0.336626   0.367974    0.91  0.3603   
24: d_y3_d_x1 -0.302779   0.329342   -0.92  0.3579   
24: d_y1_d_x2 -0.184151   0.215845   -0.85  0.3936   
24: d_y2_d_x2 -0.502962   0.312170   -1.61  0.1071   
24: d_y3_d_x2  0.446573   0.203034    2.20  0.0278 * 
25: d_y1_d_x1  0.193338   0.312141    0.62  0.5357   
25: d_y2_d_x1  0.344033   0.373212    0.92  0.3566   
25: d_y3_d_x1 -0.306622   0.332298   -0.92  0.3561   
25: d_y1_d_x2 -0.190194   0.212676   -0.89  0.3712   
25: d_y2_d_x2 -0.514030   0.317334   -1.62  0.1053   
25: d_y3_d_x2  0.452241   0.208941    2.16  0.0304 * 
26: d_y1_d_x1  0.378542   0.225275    1.68  0.0929 . 
26: d_y2_d_x1  0.049799   0.116244    0.43  0.6684   
26: d_y3_d_x1 -0.080413   0.091537   -0.88  0.3797   
26: d_y1_d_x2 -0.372386   0.261166   -1.43  0.1539   
26: d_y2_d_x2 -0.074406   0.189433   -0.39  0.6945   
26: d_y3_d_x2  0.118603   0.146519    0.81  0.4182   
27: d_y1_d_x1  0.059932   0.162937    0.37  0.7130   
27: d_y2_d_x1  0.241420   0.148456    1.63  0.1039   
27: d_y3_d_x1 -0.246370   0.149942   -1.64  0.1004   
27: d_y1_d_x2 -0.058957   0.151479   -0.39  0.6971   
27: d_y2_d_x2 -0.360712   0.196539   -1.84  0.0665 . 
27: d_y3_d_x2  0.363374   0.155409    2.34  0.0194 * 
28: d_y1_d_x1  0.003896   0.027437    0.14  0.8871   
28: d_y2_d_x1  0.017166   0.033807    0.51  0.6116   
28: d_y3_d_x1 -0.047593   0.082694   -0.58  0.5649   
28: d_y1_d_x2 -0.003833   0.026216   -0.15  0.8838   
28: d_y2_d_x2 -0.025648   0.055647   -0.46  0.6449   
28: d_y3_d_x2  0.070196   0.132078    0.53  0.5951   
29: d_y1_d_x1  0.438773   0.344160    1.27  0.2023   
29: d_y2_d_x1  0.321174   0.141739    2.27  0.0235 * 
29: d_y3_d_x1 -0.278336   0.203794   -1.37  0.1720   
29: d_y1_d_x2 -0.431638   0.297185   -1.45  0.1464   
29: d_y2_d_x2 -0.479875   0.191359   -2.51  0.0122 * 
29: d_y3_d_x2  0.410521   0.182284    2.25  0.0243 * 
30: d_y1_d_x1  0.082787   0.182999    0.45  0.6510   
30: d_y2_d_x1  0.299625   0.206273    1.45  0.1463   
30: d_y3_d_x1 -0.280874   0.197707   -1.42  0.1554   
30: d_y1_d_x2 -0.081441   0.169162   -0.48  0.6302   
30: d_y2_d_x2 -0.447678   0.239687   -1.87  0.0618 . 
30: d_y3_d_x2  0.414265   0.182335    2.27  0.0231 * 
31: d_y1_d_x1  0.110965   0.195106    0.57  0.5695   
31: d_y2_d_x1  0.352306   0.266448    1.32  0.1861   
31: d_y3_d_x1 -0.309369   0.248472   -1.25  0.2131   
31: d_y1_d_x2 -0.109161   0.179655   -0.61  0.5434   
31: d_y2_d_x2 -0.526390   0.283287   -1.86  0.0631 . 
31: d_y3_d_x2  0.456293   0.218318    2.09  0.0366 * 
32: d_y1_d_x1  0.461044   0.364954    1.26  0.2065   
32: d_y2_d_x1  0.240780   0.138487    1.74  0.0821 . 
32: d_y3_d_x1 -0.228709   0.140571   -1.63  0.1037   
32: d_y1_d_x2 -0.453546   0.361164   -1.26  0.2092   
32: d_y2_d_x2 -0.359757   0.260225   -1.38  0.1668   
32: d_y3_d_x2  0.337326   0.142855    2.36  0.0182 * 
33: d_y1_d_x1  0.048912   0.148528    0.33  0.7419   
33: d_y2_d_x1  0.207399   0.120936    1.71  0.0864 . 
33: d_y3_d_x1 -0.224500   0.127259   -1.76  0.0777 . 
33: d_y1_d_x2 -0.048116   0.138552   -0.35  0.7284   
33: d_y2_d_x2 -0.309880   0.176702   -1.75  0.0795 . 
33: d_y3_d_x2  0.331118   0.148297    2.23  0.0256 * 
34: d_y1_d_x1  0.291847   0.140363    2.08  0.0376 * 
34: d_y2_d_x1  0.386898   0.323990    1.19  0.2324   
34: d_y3_d_x1 -0.318725   0.347476   -0.92  0.3590   
34: d_y1_d_x2 -0.287100   0.175036   -1.64  0.1010   
34: d_y2_d_x2 -0.578074   0.193775   -2.98  0.0029 **
34: d_y3_d_x2  0.470093   0.237751    1.98  0.0480 * 
35: d_y1_d_x1  0.069338   0.172406    0.40  0.6876   
35: d_y2_d_x1  0.267264   0.172683    1.55  0.1217   
35: d_y3_d_x1 -0.262107   0.169976   -1.54  0.1231   
35: d_y1_d_x2 -0.068211   0.159857   -0.43  0.6696   
35: d_y2_d_x2 -0.399327   0.214344   -1.86  0.0625 . 
35: d_y3_d_x2  0.386586   0.165292    2.34  0.0193 * 
36: d_y1_d_x1  0.194291   0.180085    1.08  0.2806   
36: d_y2_d_x1  0.419438   0.350276    1.20  0.2311   
36: d_y3_d_x1 -0.340559   0.335169   -1.02  0.3096   
36: d_y1_d_x2 -0.191131   0.171683   -1.11  0.2656   
36: d_y2_d_x2 -0.626694   0.303953   -2.06  0.0392 * 
36: d_y3_d_x2  0.502296   0.270975    1.85  0.0638 . 
37: d_y1_d_x1  0.419633   0.261113    1.61  0.1080   
37: d_y2_d_x1  0.223911   0.240057    0.93  0.3510   
37: d_y3_d_x1 -0.220043   0.271453   -0.81  0.4176   
37: d_y1_d_x2 -0.412808   0.317250   -1.30  0.1932   
37: d_y2_d_x2 -0.334552   0.226035   -1.48  0.1388   
37: d_y3_d_x2  0.324545   0.149206    2.18  0.0296 * 
38: d_y1_d_x1  0.462822   0.365793    1.27  0.2058   
38: d_y2_d_x1  0.220890   0.145271    1.52  0.1284   
38: d_y3_d_x1 -0.215801   0.128454   -1.68  0.0930 . 
38: d_y1_d_x2 -0.455295   0.370115   -1.23  0.2186   
38: d_y2_d_x2 -0.330039   0.272933   -1.21  0.2266   
38: d_y3_d_x2  0.318288   0.138877    2.29  0.0219 * 
39: d_y1_d_x1  0.306610   0.301007    1.02  0.3084   
39: d_y2_d_x1  0.419999   0.365895    1.15  0.2510   
39: d_y3_d_x1 -0.340697   0.338870   -1.01  0.3147   
39: d_y1_d_x2 -0.301623   0.143921   -2.10  0.0361 * 
39: d_y2_d_x2 -0.627533   0.306023   -2.05  0.0403 * 
39: d_y3_d_x2  0.502499   0.271368    1.85  0.0641 . 
40: d_y1_d_x1  0.342752   0.185681    1.85  0.0649 . 
40: d_y2_d_x1  0.032714   0.091615    0.36  0.7210   
40: d_y3_d_x1 -0.061029   0.086019   -0.71  0.4780   
40: d_y1_d_x2 -0.337178   0.212508   -1.59  0.1126   
40: d_y2_d_x2 -0.048879   0.147113   -0.33  0.7397   
40: d_y3_d_x2  0.090013   0.136414    0.66  0.5093   
41: d_y1_d_x1  0.387193   0.236625    1.64  0.1018   
41: d_y2_d_x1  0.055210   0.122482    0.45  0.6522   
41: d_y3_d_x1 -0.086056   0.092505   -0.93  0.3522   
41: d_y1_d_x2 -0.380896   0.273725   -1.39  0.1641   
41: d_y2_d_x2 -0.082491   0.200502   -0.41  0.6808   
41: d_y3_d_x2  0.126926   0.148233    0.86  0.3919   
42: d_y1_d_x1  0.461291   0.359396    1.28  0.1993   
42: d_y2_d_x1  0.177525   0.158324    1.12  0.2622   
42: d_y3_d_x1 -0.186402   0.108316   -1.72  0.0853 . 
42: d_y1_d_x2 -0.453789   0.378651   -1.20  0.2307   
42: d_y2_d_x2 -0.265246   0.288631   -0.92  0.3581   
42: d_y3_d_x2  0.274927   0.137658    2.00  0.0458 * 
43: d_y1_d_x1  0.447381   0.352204    1.27  0.2040   
43: d_y2_d_x1  0.299264   0.132264    2.26  0.0237 * 
43: d_y3_d_x1 -0.265129   0.184518   -1.44  0.1508   
43: d_y1_d_x2 -0.440106   0.319152   -1.38  0.1679   
43: d_y2_d_x2 -0.447139   0.210625   -2.12  0.0338 * 
43: d_y3_d_x2  0.391042   0.168240    2.32  0.0201 * 
44: d_y1_d_x1  0.025125   0.102541    0.25  0.8064   
44: d_y2_d_x1  0.117924   0.077398    1.52  0.1276   
44: d_y3_d_x1 -0.158448   0.097037   -1.63  0.1025   
44: d_y1_d_x2 -0.024716   0.096528   -0.26  0.7979   
44: d_y2_d_x2 -0.176194   0.140569   -1.25  0.2100   
44: d_y3_d_x2  0.233697   0.157196    1.49  0.1371   
45: d_y1_d_x1  0.458460   0.344439    1.33  0.1832   
45: d_y2_d_x1  0.128718   0.196680    0.65  0.5128   
45: d_y3_d_x1 -0.152611   0.216109   -0.71  0.4801   
45: d_y1_d_x2 -0.451004   0.373821   -1.21  0.2276   
45: d_y2_d_x2 -0.192321   0.245067   -0.78  0.4326   
45: d_y3_d_x2  0.225089   0.154246    1.46  0.1445   
46: d_y1_d_x1  0.219620   0.312275    0.70  0.4819   
46: d_y2_d_x1  0.372038   0.388861    0.96  0.3387   
46: d_y3_d_x1 -0.320618   0.341922   -0.94  0.3484   
46: d_y1_d_x2 -0.216048   0.196910   -1.10  0.2726   
46: d_y2_d_x2 -0.555872   0.332553   -1.67  0.0946 . 
46: d_y3_d_x2  0.472884   0.231970    2.04  0.0415 * 
47: d_y1_d_x1  0.067567   0.162518    0.42  0.6776   
47: d_y2_d_x1  0.000212   0.001722    0.12  0.9021   
47: d_y3_d_x1 -0.002293   0.011167   -0.21  0.8373   
47: d_y1_d_x2 -0.066468   0.146437   -0.45  0.6499   
47: d_y2_d_x2 -0.000316   0.002632   -0.12  0.9043   
47: d_y3_d_x2  0.003382   0.016796    0.20  0.8404   
48: d_y1_d_x1  0.221576   0.163983    1.35  0.1766   
48: d_y2_d_x1  0.006941   0.031100    0.22  0.8234   
48: d_y3_d_x1 -0.022153   0.054492   -0.41  0.6844   
48: d_y1_d_x2 -0.217973   0.142170   -1.53  0.1252   
48: d_y2_d_x2 -0.010370   0.048540   -0.21  0.8308   
48: d_y3_d_x2  0.032673   0.083979    0.39  0.6972   
49: d_y1_d_x1  0.067019   0.170427    0.39  0.6941   
49: d_y2_d_x1  0.261150   0.166822    1.57  0.1175   
49: d_y3_d_x1 -0.258448   0.164995   -1.57  0.1173   
49: d_y1_d_x2 -0.065929   0.158136   -0.42  0.6767   
49: d_y2_d_x2 -0.390192   0.209995   -1.86  0.0632 . 
49: d_y3_d_x2  0.381188   0.162601    2.34  0.0191 * 
50: d_y1_d_x1  0.107645   0.275745    0.39  0.6963   
50: d_y2_d_x1  0.212678   0.257228    0.83  0.4083   
50: d_y3_d_x1 -0.230229   0.270447   -0.85  0.3946   
50: d_y1_d_x2 -0.105894   0.224088   -0.47  0.6365   
50: d_y2_d_x2 -0.317768   0.216518   -1.47  0.1422   
50: d_y3_d_x2  0.339568   0.138744    2.45  0.0144 * 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> # now with seemingly only dummy variables
> margEffUncDA <- margEff( estResultBFGS, calcVCov = TRUE, returnJacobian = TRUE,
+    dummyVars = c( "x1", "x2" ) )
> print( summary( margEffUncDA ), digits = 3 )
               Estimate Std. error z value Pr(> z)   
1: d_y1_d_x1   0.322949   0.196918    1.64  0.1010   
1: d_y2_d_x1   0.383668   0.261500    1.47  0.1423   
1: d_y3_d_x1  -0.316956   0.294430   -1.08  0.2817   
1: d_y1_d_x2  -0.431806   0.320331   -1.35  0.1777   
1: d_y2_d_x2  -0.305133   0.218871   -1.39  0.1633   
1: d_y3_d_x2   0.294069   0.121523    2.42  0.0155 * 
2: d_y1_d_x1   0.242945   0.203766    1.19  0.2332   
2: d_y2_d_x1   0.399380   0.315449    1.27  0.2055   
2: d_y3_d_x1  -0.330145   0.307940   -1.07  0.2837   
2: d_y1_d_x2  -0.431806   0.320331   -1.35  0.1777   
2: d_y2_d_x2  -0.305133   0.218871   -1.39  0.1633   
2: d_y3_d_x2   0.294069   0.121523    2.42  0.0155 * 
3: d_y1_d_x1   0.238860   0.204898    1.17  0.2437   
3: d_y2_d_x1   0.398279   0.316361    1.26  0.2081   
3: d_y3_d_x1  -0.329784   0.307304   -1.07  0.2832   
3: d_y1_d_x2  -0.244622   0.149053   -1.64  0.1008   
3: d_y2_d_x2  -0.561732   0.187199   -3.00  0.0027 **
3: d_y3_d_x2   0.464297   0.217214    2.14  0.0326 * 
4: d_y1_d_x1   0.401084   0.273718    1.47  0.1428   
4: d_y2_d_x1   0.055784   0.112019    0.50  0.6185   
4: d_y3_d_x1  -0.084206   0.116174   -0.72  0.4686   
4: d_y1_d_x2  -0.244622   0.149053   -1.64  0.1008   
4: d_y2_d_x2  -0.561732   0.187199   -3.00  0.0027 **
4: d_y3_d_x2   0.464297   0.217214    2.14  0.0326 * 
5: d_y1_d_x1   0.188323   0.217878    0.86  0.3874   
5: d_y2_d_x1   0.369108   0.309262    1.19  0.2327   
5: d_y3_d_x1  -0.316570   0.288564   -1.10  0.2726   
5: d_y1_d_x2  -0.244622   0.149053   -1.64  0.1008   
5: d_y2_d_x2  -0.561732   0.187199   -3.00  0.0027 **
5: d_y3_d_x2   0.464297   0.217214    2.14  0.0326 * 
6: d_y1_d_x1   0.370209   0.247995    1.49  0.1355   
6: d_y2_d_x1   0.034883   0.085815    0.41  0.6844   
6: d_y3_d_x1  -0.061413   0.100444   -0.61  0.5409   
6: d_y1_d_x2  -0.244622   0.149053   -1.64  0.1008   
6: d_y2_d_x2  -0.561732   0.187199   -3.00  0.0027 **
6: d_y3_d_x2   0.464297   0.217214    2.14  0.0326 * 
7: d_y1_d_x1   0.010321   0.057829    0.18  0.8584   
7: d_y2_d_x1   0.022046   0.038926    0.57  0.5712   
7: d_y3_d_x1  -0.053124   0.094541   -0.56  0.5742   
7: d_y1_d_x2  -0.244622   0.149053   -1.64  0.1008   
7: d_y2_d_x2  -0.561732   0.187199   -3.00  0.0027 **
7: d_y3_d_x2   0.464297   0.217214    2.14  0.0326 * 
8: d_y1_d_x1   0.400710   0.251339    1.59  0.1109   
8: d_y2_d_x1   0.290794   0.183965    1.58  0.1139   
8: d_y3_d_x1  -0.259619   0.232712   -1.12  0.2646   
8: d_y1_d_x2  -0.431806   0.320331   -1.35  0.1777   
8: d_y2_d_x2  -0.305133   0.218871   -1.39  0.1633   
8: d_y3_d_x2   0.294069   0.121523    2.42  0.0155 * 
9: d_y1_d_x1   0.286665   0.194810    1.47  0.1412   
9: d_y2_d_x1   0.399628   0.293484    1.36  0.1733   
9: d_y3_d_x1  -0.327737   0.306637   -1.07  0.2852   
9: d_y1_d_x2  -0.431806   0.320331   -1.35  0.1777   
9: d_y2_d_x2  -0.305133   0.218871   -1.39  0.1633   
9: d_y3_d_x2   0.294069   0.121523    2.42  0.0155 * 
10: d_y1_d_x1  0.312655   0.195065    1.60  0.1090   
10: d_y2_d_x1  0.389724   0.271536    1.44  0.1512   
10: d_y3_d_x1 -0.320854   0.298913   -1.07  0.2831   
10: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
10: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
10: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
11: d_y1_d_x1  0.355981   0.210988    1.69  0.0916 . 
11: d_y2_d_x1  0.355468   0.226547    1.57  0.1166   
11: d_y3_d_x1 -0.299468   0.274509   -1.09  0.2753   
11: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
11: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
11: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
12: d_y1_d_x1  0.121966   0.216721    0.56  0.5736   
12: d_y2_d_x1  0.284903   0.245511    1.16  0.2459   
12: d_y3_d_x1 -0.270662   0.234525   -1.15  0.2485   
12: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
12: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
12: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
13: d_y1_d_x1  0.160796   0.221215    0.73  0.4673   
13: d_y2_d_x1  0.340730   0.290280    1.17  0.2405   
13: d_y3_d_x1 -0.301945   0.269965   -1.12  0.2634   
13: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
13: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
13: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
14: d_y1_d_x1  0.042505   0.143874    0.30  0.7677   
14: d_y2_d_x1  0.110322   0.108439    1.02  0.3090   
14: d_y3_d_x1 -0.148797   0.146497   -1.02  0.3098   
14: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
14: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
14: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
15: d_y1_d_x1  0.037444   0.134118    0.28  0.7801   
15: d_y2_d_x1  0.096639   0.098930    0.98  0.3286   
15: d_y3_d_x1 -0.136761   0.141016   -0.97  0.3321   
15: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
15: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
15: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
16: d_y1_d_x1  0.336446   0.201107    1.67  0.0943 . 
16: d_y2_d_x1  0.373815   0.247544    1.51  0.1310   
16: d_y3_d_x1 -0.310771   0.287320   -1.08  0.2794   
16: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
16: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
16: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
17: d_y1_d_x1  0.372387   0.222919    1.67  0.0948 . 
17: d_y2_d_x1  0.335916   0.209250    1.61  0.1084   
17: d_y3_d_x1 -0.287500   0.261345   -1.10  0.2713   
17: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
17: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
17: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
18: d_y1_d_x1  0.266340   0.197978    1.35  0.1785   
18: d_y2_d_x1  0.402133   0.306328    1.31  0.1893   
18: d_y3_d_x1 -0.330275   0.309080   -1.07  0.2853   
18: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
18: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
18: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
19: d_y1_d_x1  0.437643   0.305707    1.43  0.1523   
19: d_y2_d_x1  0.169636   0.165274    1.03  0.3047   
19: d_y3_d_x1 -0.178946   0.168453   -1.06  0.2881   
19: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
19: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
19: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
20: d_y1_d_x1  0.224159   0.220319    1.02  0.3090   
20: d_y2_d_x1  0.004204   0.018901    0.22  0.8240   
20: d_y3_d_x1 -0.014954   0.044035   -0.34  0.7342   
20: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
20: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
20: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
21: d_y1_d_x1  0.124369   0.217405    0.57  0.5673   
21: d_y2_d_x1  0.288912   0.248854    1.16  0.2457   
21: d_y3_d_x1 -0.273009   0.236991   -1.15  0.2493   
21: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
21: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
21: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
22: d_y1_d_x1  0.000746   0.007298    0.10  0.9186   
22: d_y2_d_x1  0.000700   0.002947    0.24  0.8123   
22: d_y3_d_x1 -0.005794   0.022938   -0.25  0.8006   
22: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
22: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
22: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
23: d_y1_d_x1  0.438223   0.309067    1.42  0.1562   
23: d_y2_d_x1  0.142645   0.160488    0.89  0.3741   
23: d_y3_d_x1 -0.158984   0.156551   -1.02  0.3098   
23: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
23: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
23: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
24: d_y1_d_x1  0.083054   0.195529    0.42  0.6710   
24: d_y2_d_x1  0.209539   0.182922    1.15  0.2520   
24: d_y3_d_x1 -0.223403   0.191438   -1.17  0.2432   
24: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
24: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
24: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
25: d_y1_d_x1  0.086590   0.198371    0.44  0.6625   
25: d_y2_d_x1  0.217209   0.189148    1.15  0.2508   
25: d_y3_d_x1 -0.228509   0.195493   -1.17  0.2425   
25: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
25: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
25: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
26: d_y1_d_x1  0.437838   0.309147    1.42  0.1567   
26: d_y2_d_x1  0.136570   0.158987    0.86  0.3903   
26: d_y3_d_x1 -0.154341   0.153950   -1.00  0.3161   
26: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
26: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
26: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
27: d_y1_d_x1  0.172960   0.220257    0.79  0.4323   
27: d_y2_d_x1  0.354388   0.300008    1.18  0.2375   
27: d_y3_d_x1 -0.309112   0.278896   -1.11  0.2677   
27: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
27: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
27: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
28: d_y1_d_x1  0.025789   0.107376    0.24  0.8102   
28: d_y2_d_x1  0.064447   0.076172    0.85  0.3975   
28: d_y3_d_x1 -0.105597   0.127019   -0.83  0.4058   
28: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
28: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
28: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
29: d_y1_d_x1  0.302966   0.194286    1.56  0.1189   
29: d_y2_d_x1  0.394307   0.280347    1.41  0.1596   
29: d_y3_d_x1 -0.323907   0.302394   -1.07  0.2841   
29: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
29: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
29: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
30: d_y1_d_x1  0.211873   0.212413    1.00  0.3185   
30: d_y2_d_x1  0.386318   0.316927    1.22  0.2229   
30: d_y3_d_x1 -0.324795   0.299802   -1.08  0.2786   
30: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
30: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
30: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
31: d_y1_d_x1  0.252767   0.201153    1.26  0.2089   
31: d_y2_d_x1  0.401271   0.312409    1.28  0.1990   
31: d_y3_d_x1 -0.330599   0.308937   -1.07  0.2846   
31: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
31: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
31: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
32: d_y1_d_x1  0.357377   0.211873    1.69  0.0917 . 
32: d_y2_d_x1  0.353960   0.225046    1.57  0.1158   
32: d_y3_d_x1 -0.298544   0.273476   -1.09  0.2750   
32: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
32: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
32: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
33: d_y1_d_x1  0.151690   0.221287    0.69  0.4930   
33: d_y2_d_x1  0.329328   0.281624    1.17  0.2422   
33: d_y3_d_x1 -0.295806   0.262565   -1.13  0.2599   
33: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
33: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
33: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
34: d_y1_d_x1  0.410969   0.264072    1.56  0.1196   
34: d_y2_d_x1  0.269377   0.177386    1.52  0.1289   
34: d_y3_d_x1 -0.246106   0.219981   -1.12  0.2632   
34: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
34: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
34: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
35: d_y1_d_x1  0.189725   0.217606    0.87  0.3833   
35: d_y2_d_x1  0.370313   0.309938    1.19  0.2322   
35: d_y3_d_x1 -0.317167   0.289355   -1.10  0.2730   
35: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
35: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
35: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
36: d_y1_d_x1  0.343841   0.204302    1.68  0.0924 . 
36: d_y2_d_x1  0.367458   0.239646    1.53  0.1252   
36: d_y3_d_x1 -0.306836   0.282826   -1.08  0.2780   
36: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
36: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
36: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
37: d_y1_d_x1  0.434812   0.307197    1.42  0.1569   
37: d_y2_d_x1  0.115936   0.152335    0.76  0.4466   
37: d_y3_d_x1 -0.138075   0.145202   -0.95  0.3416   
37: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
37: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
37: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
38: d_y1_d_x1  0.369369   0.220473    1.68  0.0939 . 
38: d_y2_d_x1  0.339824   0.212352    1.60  0.1095   
38: d_y3_d_x1 -0.289893   0.263939   -1.10  0.2721   
38: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
38: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
38: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
39: d_y1_d_x1  0.162595   0.221132    0.74  0.4622   
39: d_y2_d_x1  0.342864   0.291853    1.17  0.2401   
39: d_y3_d_x1 -0.303079   0.271356   -1.12  0.2640   
39: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
39: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
39: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
40: d_y1_d_x1  0.431008   0.303667    1.42  0.1558   
40: d_y2_d_x1  0.102131   0.146266    0.70  0.4850   
40: d_y3_d_x1 -0.126696   0.139294   -0.91  0.3631   
40: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
40: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
40: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
41: d_y1_d_x1  0.438360   0.308880    1.42  0.1558   
41: d_y2_d_x1  0.146460   0.161340    0.91  0.3640   
41: d_y3_d_x1 -0.161870   0.158196   -1.02  0.3062   
41: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
41: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
41: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
42: d_y1_d_x1  0.393819   0.243519    1.62  0.1058   
42: d_y2_d_x1  0.303393   0.189282    1.60  0.1090   
42: d_y3_d_x1 -0.267470   0.240464   -1.11  0.2660   
42: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
42: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
42: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
43: d_y1_d_x1  0.318954   0.196067    1.63  0.1038   
43: d_y2_d_x1  0.386165   0.265468    1.45  0.1458   
43: d_y3_d_x1 -0.318551   0.296266   -1.08  0.2823   
43: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
43: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
43: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
44: d_y1_d_x1  0.097179   0.205671    0.47  0.6366   
44: d_y2_d_x1  0.239189   0.207254    1.15  0.2485   
44: d_y3_d_x1 -0.242745   0.207562   -1.17  0.2422   
44: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
44: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
44: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
45: d_y1_d_x1  0.402524   0.275082    1.46  0.1434   
45: d_y2_d_x1  0.057128   0.113412    0.50  0.6145   
45: d_y3_d_x1 -0.085567   0.117002   -0.73  0.4646   
45: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
45: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
45: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
46: d_y1_d_x1  0.102327   0.208618    0.49  0.6238   
46: d_y2_d_x1  0.249344   0.215718    1.16  0.2477   
46: d_y3_d_x1 -0.249136   0.213349   -1.17  0.2429   
46: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
46: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
46: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
47: d_y1_d_x1  0.186655   0.223900    0.83  0.4045   
47: d_y2_d_x1  0.002191   0.011218    0.20  0.8452   
47: d_y3_d_x1 -0.009700   0.032679   -0.30  0.7666   
47: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
47: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
47: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
48: d_y1_d_x1  0.366420   0.245350    1.49  0.1353   
48: d_y2_d_x1  0.033039   0.083009    0.40  0.6906   
48: d_y3_d_x1 -0.059215   0.098685   -0.60  0.5485   
48: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
48: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
48: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
49: d_y1_d_x1  0.185698   0.218364    0.85  0.3951   
49: d_y2_d_x1  0.366791   0.307921    1.19  0.2336   
49: d_y3_d_x1 -0.315417   0.287042   -1.10  0.2718   
49: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
49: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
49: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
50: d_y1_d_x1  0.041727   0.142436    0.29  0.7696   
50: d_y2_d_x1  0.108233   0.106983    1.01  0.3117   
50: d_y3_d_x1 -0.146997   0.145662   -1.01  0.3129   
50: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
50: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
50: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> # now with returned Jacobian but without variance covariance matrix
> margEffUncJac <- margEff( estResultBFGS, returnJacobian = TRUE )
> all.equal( attr( margEffUncJac, "jacobian" ), attr( margEffUnc, "jacobian" ) )
[1] TRUE
> # now including mean values of the marginal effects
> margEffUncM <- margEff( estResultBFGS, calcVCov = TRUE, returnJacobian = TRUE,
+    addMean = TRUE )
> all.equal( margEffUnc, margEffUncM[ -(nObs+1), ], check.attributes = FALSE )
[1] TRUE
> round( margEffUncM[ nObs:(nObs+1), ], 4 )
     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50      0.0417    0.1082   -0.1470   -0.1059   -0.3178    0.3396
mean    0.2531    0.2459   -0.2259   -0.2385   -0.3379    0.3143
> all.equal( attr( margEffUnc, "vcov" ), attr( margEffUncM, "vcov" )[ 1:nObs, , ] )
[1] TRUE
> round( attr( margEffUncM, "vcov" )[ nObs:(nObs+1), , ], 5 )
, , d_y1_d_x1

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50     0.02029  -0.00281  -0.00157  -0.03176   0.01423   0.00240
mean   0.02206  -0.00793  -0.00168   0.00226   0.00083   0.00296

, , d_y2_d_x1

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50    -0.00281   0.01145  -0.00647   0.00513  -0.02030   0.00378
mean  -0.00793   0.02592   0.00630  -0.00148   0.00258  -0.00540

, , d_y3_d_x1

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50    -0.00157  -0.00647   0.02122   0.00263   0.00892  -0.01584
mean  -0.00168   0.00630   0.03730  -0.00127  -0.00265   0.00204

, , d_y1_d_x2

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50    -0.03176   0.00513   0.00263   0.05022  -0.02418  -0.00370
mean   0.00226  -0.00148  -0.00127   0.00516   0.00054   0.00121

, , d_y2_d_x2

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50     0.01423  -0.02030   0.00892  -0.02418   0.04688  -0.00482
mean   0.00083   0.00258  -0.00265   0.00054   0.00199  -0.00109

, , d_y3_d_x2

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50     0.00240   0.00378  -0.01584  -0.00370  -0.00482   0.01925
mean   0.00296  -0.00540   0.00204   0.00121  -0.00109   0.00524

> round( drop( attr( margEffUncM, "vcov" )[ nObs+1, , ] ), 5 )
          d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
d_y1_d_x1   0.02206  -0.00793  -0.00168   0.00226   0.00083   0.00296
d_y2_d_x1  -0.00793   0.02592   0.00630  -0.00148   0.00258  -0.00540
d_y3_d_x1  -0.00168   0.00630   0.03730  -0.00127  -0.00265   0.00204
d_y1_d_x2   0.00226  -0.00148  -0.00127   0.00516   0.00054   0.00121
d_y2_d_x2   0.00083   0.00258  -0.00265   0.00054   0.00199  -0.00109
d_y3_d_x2   0.00296  -0.00540   0.00204   0.00121  -0.00109   0.00524
> all.equal( attr( margEffUnc, "jacobian" ), attr( margEffUncM, "jacobian" )[ 1:nObs, , ] )
[1] TRUE
> round( attr( margEffUncM, "jacobian" )[ nObs:(nObs+1), , ], 5 )
, , b_1_0

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50    -0.08621         0         0   0.18095         0         0
mean  -0.11556         0         0   0.08871         0         0

, , b_1_1

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50     0.00650         0         0   0.00000         0         0
mean   0.15476         0         0   0.06486         0         0

, , b_1_2

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50     0.08849         0         0  -0.09292         0         0
mean   0.05336         0         0   0.16350         0         0

, , b_2_0

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50           0  -0.16791         0         0   0.37152         0
mean         0   0.00348         0         0  -0.00176         0

, , b_2_1

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50           0   0.03369         0         0   0.00000         0
mean         0   0.22634         0         0   0.04745         0

, , b_2_2

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50           0   0.17234         0         0  -0.17955         0
mean         0   0.09071         0         0   0.08275         0

, , b_3_0

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50           0         0  -0.18169         0         0   0.30059
mean         0         0   0.01121         0         0  -0.01302

, , b_3_1

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50           0         0   0.08789         0         0   0.00000
mean         0         0   0.26243         0         0   0.03619

, , b_3_2

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50           0         0   0.18649         0         0  -0.03894
mean         0         0   0.08964         0         0   0.12388

, , R_1_2

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50           0         0         0         0         0         0
mean         0         0         0         0         0         0

, , R_1_3

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50           0         0         0         0         0         0
mean         0         0         0         0         0         0

, , R_2_3

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50           0         0         0         0         0         0
mean         0         0         0         0         0         0

> round( drop( attr( margEffUncM, "jacobian" )[ nObs+1, , ] ), 5 )
             b_1_0   b_1_1   b_1_2    b_2_0   b_2_1   b_2_2    b_3_0   b_3_1
d_y1_d_x1 -0.11556 0.15476 0.05336  0.00000 0.00000 0.00000  0.00000 0.00000
d_y2_d_x1  0.00000 0.00000 0.00000  0.00348 0.22634 0.09071  0.00000 0.00000
d_y3_d_x1  0.00000 0.00000 0.00000  0.00000 0.00000 0.00000  0.01121 0.26243
d_y1_d_x2  0.08871 0.06486 0.16350  0.00000 0.00000 0.00000  0.00000 0.00000
d_y2_d_x2  0.00000 0.00000 0.00000 -0.00176 0.04745 0.08275  0.00000 0.00000
d_y3_d_x2  0.00000 0.00000 0.00000  0.00000 0.00000 0.00000 -0.01302 0.03619
            b_3_2 R_1_2 R_1_3 R_2_3
d_y1_d_x1 0.00000     0     0     0
d_y2_d_x1 0.00000     0     0     0
d_y3_d_x1 0.08964     0     0     0
d_y1_d_x2 0.00000     0     0     0
d_y2_d_x2 0.00000     0     0     0
d_y3_d_x2 0.12388     0     0     0
> all.equal( summary( margEffUnc )[ , ], 
+    summary( margEffUncM )[ 1:( 6 * nObs ), ], check.attributes = FALSE )
[1] TRUE
> printCoefmat( summary( margEffUncM )[ -( 1:( 6 * ( nObs - 1 ) ) ), ], digits = 3 )
                Estimate Std. error z value Pr(> z)    
50: d_y1_d_x1     0.0417     0.1424    0.29  0.7696    
50: d_y2_d_x1     0.1082     0.1070    1.01  0.3117    
50: d_y3_d_x1    -0.1470     0.1457   -1.01  0.3129    
50: d_y1_d_x2    -0.1059     0.2241   -0.47  0.6365    
50: d_y2_d_x2    -0.3178     0.2165   -1.47  0.1422    
50: d_y3_d_x2     0.3396     0.1387    2.45  0.0144 *  
mean: d_y1_d_x1   0.2531     0.1485    1.70  0.0884 .  
mean: d_y2_d_x1   0.2459     0.1610    1.53  0.1266    
mean: d_y3_d_x1  -0.2259     0.1931   -1.17  0.2420    
mean: d_y1_d_x2  -0.2385     0.0718   -3.32  0.0009 ***
mean: d_y2_d_x2  -0.3379     0.0446   -7.58 3.5e-14 ***
mean: d_y3_d_x2   0.3143     0.0724    4.34 1.4e-05 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> # now at mean values of explanatory variables
> margEffUncMean <- margEff( estResultBFGS, calcVCov = TRUE, 
+    data = as.data.frame( t( colMeans( xMat ) ) ) )
> summary( margEffUncMean )
          Estimate Std. error z value Pr(> z)  
d_y1_d_x1   0.2931     0.1944   1.508  0.1315  
d_y2_d_x1   0.3979     0.2886   1.379  0.1680  
d_y3_d_x1  -0.3264     0.3052  -1.070  0.2848  
d_y1_d_x2  -0.2967     0.1257  -2.360  0.0183 *
d_y2_d_x2  -0.6194     0.2475  -2.503  0.0123 *
d_y3_d_x2   0.4942     0.2615   1.890  0.0588 .
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> # now with argument 'atMean'
> margEffUncMeanA <- margEff( estResultBFGS, calcVCov = TRUE, atMean = TRUE )
> all.equal( margEffUncMeanA, margEffUncMean )
[1] TRUE
> 
> # conditional marginal effects
> # (assuming that all other dependent variables are as observed)
> margEffCondObs <- margEff( estResultBFGS, cond = TRUE, algorithm = GenzBretz() )
> round( margEffCondObs, 4 )
   d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1     0.3232    0.3433   -0.3550   -0.4595   -0.4313    0.3608
2     0.1153    0.3597   -0.3619   -0.2292   -0.5342    0.4977
3     0.2375    0.3308   -0.3612   -0.0895   -0.4547    0.4538
4     0.4123    0.0695   -0.0539   -0.4721   -0.2123    0.1755
5     0.1847    0.3084   -0.3432   -0.0604   -0.3647    0.3905
6     0.3788    0.0478   -0.0337   -0.4748   -0.1555    0.1206
7     0.0100    0.0210   -0.0535   -0.0011   -0.0060    0.0284
8     0.4110    0.1322   -0.4035   -0.4705   -0.1342    0.3783
9     0.1475    0.3575   -0.3609   -0.2644   -0.4844    0.4453
10    0.3117    0.3485   -0.3613   -0.4537   -0.4474    0.3798
11    0.2059    0.3200   -0.3289   -0.0799   -0.5893    0.5245
12    0.1177    0.2437   -0.2877   -0.0311   -0.2231    0.2824
13    0.1471    0.3159   -0.3491   -0.0392   -0.3336    0.3713
14    0.0406    0.0999   -0.1527   -0.0072   -0.0531    0.1127
15    0.0358    0.0880   -0.1400   -0.0920   -0.2592    0.3345
16    0.1883    0.3350   -0.3422   -0.0679   -0.5871    0.5221
17    0.3834    0.2924   -0.3146   -0.2129   -0.5603    0.5222
18    0.3979    0.2666   -0.4048   -0.5132   -0.3701    0.6056
19    0.4438    0.1791   -0.1605   -0.5330   -0.4316    0.3854
20    0.2260    0.0023   -0.0192   -0.0894   -0.0005    0.0061
21    0.1201    0.2468   -0.2904   -0.2445   -0.5058    0.5283
22    0.0007    0.0007   -0.0058   -0.0030   -0.0038    0.0220
23    0.4535    0.0631   -0.2599   -0.3879   -0.0460    0.1672
24    0.0234    0.2045   -0.2338   -0.0727   -0.4720    0.4750
25    0.1748    0.1895   -0.2618   -0.3022   -0.4396    0.5125
26    0.4531    0.0605   -0.2522   -0.3822   -0.0433    0.1595
27    0.1690    0.2973   -0.3338   -0.0528   -0.3337    0.3680
28    0.0248    0.0596   -0.1074   -0.0037   -0.0252    0.0702
29    0.3009    0.2049   -0.4281   -0.4475   -0.2665    0.5745
30    0.2090    0.3214   -0.3540   -0.0732   -0.4091    0.4221
31    0.2455    0.3606   -0.3795   -0.0918   -0.5089    0.4932
32    0.2072    0.3188   -0.3278   -0.3119   -0.3715    0.3287
33    0.1474    0.2782   -0.3175   -0.0432   -0.2887    0.3343
34    0.4881    0.2485   -0.2506   -0.4494   -0.5284    0.4954
35    0.1861    0.3094   -0.3440   -0.0612   -0.3674    0.3925
36    0.4663    0.3128   -0.3393   -0.3218   -0.5593    0.5429
37    0.4496    0.0516   -0.2249   -0.4291   -0.1534    0.5125
38    0.3756    0.3074   -0.3137   -0.4748   -0.3483    0.2677
39    0.0639    0.3176   -0.3264   -0.1548   -0.5696    0.5416
40    0.4453    0.0456   -0.2055   -0.3443   -0.0292    0.1171
41    0.4537    0.1515   -0.1392   -0.3914   -0.1245    0.0620
42    0.4032    0.1390   -0.4116   -0.4730   -0.1445    0.3988
43    0.3188    0.1954   -0.4339   -0.4573   -0.2462    0.5540
44    0.0933    0.2073   -0.2556   -0.0224   -0.1675    0.2345
45    0.4138    0.0262   -0.1344   -0.4715   -0.0878    0.3623
46    0.0320    0.2395   -0.2628   -0.0930   -0.5147    0.5060
47    0.1877    0.0012   -0.0120   -0.0665   -0.0002    0.0035
48    0.3747    0.0157   -0.0894   -0.2198   -0.0068    0.0382
49    0.1820    0.3067   -0.3418   -0.0591   -0.3595    0.3868
50    0.1060    0.0981   -0.1671   -0.1942   -0.2810    0.3841
> 
> # conditional marginal effects with covariance matrix at sample mean
> # (assuming that all other dependent variables are at there modal values)
> # (with Jacobian)
> margEffCondObsCov <- margEff( estResultBFGS, cond = TRUE,
+    atMean = TRUE, othDepVar = c( colMedians( yMat * 1 ) ), 
+    algorithm = GenzBretz(), calcVCov = TRUE, returnJacobian = TRUE )
> round( margEffCondObsCov, 4 )
  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1    0.2899    0.3558   -0.3706   -0.2927   -0.5708    0.5331
> round( attr( margEffCondObsCov, "vcov" ), 5 )
, , d_y1_d_x1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1   0.02918  -0.01502  -0.02193  -0.01396    0.0081   0.01921

, , d_y2_d_x1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1  -0.01502    0.0532   0.03191   0.01189  -0.02424  -0.03081

, , d_y3_d_x1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1  -0.02193   0.03191    0.1246    0.0338   -0.0221  -0.07905

, , d_y1_d_x2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1  -0.01396   0.01189    0.0338   0.02902  -0.00763  -0.02725

, , d_y2_d_x2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1    0.0081  -0.02424   -0.0221  -0.00763   0.06184  -0.01319

, , d_y3_d_x2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1   0.01921  -0.03081  -0.07905  -0.02725  -0.01319   0.11273

> round( drop( attr( margEffCondObsCov, "vcov" ) ), 5 )
          d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
d_y1_d_x1   0.02918  -0.01502  -0.02193  -0.01396   0.00810   0.01921
d_y2_d_x1  -0.01502   0.05320   0.03191   0.01189  -0.02424  -0.03081
d_y3_d_x1  -0.02193   0.03191   0.12460   0.03380  -0.02210  -0.07905
d_y1_d_x2  -0.01396   0.01189   0.03380   0.02902  -0.00763  -0.02725
d_y2_d_x2   0.00810  -0.02424  -0.02210  -0.00763   0.06184  -0.01319
d_y3_d_x2   0.01921  -0.03081  -0.07905  -0.02725  -0.01319   0.11273
> round( attr( margEffCondObsCov, "jacobian" ), 5 )
, , b_1_0

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1  -0.27564   0.03643   0.02151   0.30524  -0.03901  -0.01323

, , b_1_1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1   0.10887  -0.01679  -0.04018   0.14596  -0.01883   -0.0069

, , b_1_2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1  -0.04036   0.00533   0.00315   0.30021  -0.04554  -0.06497

, , b_2_0

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1   0.02941   0.02468   0.00207  -0.02239  -0.06552  -0.00818

, , b_2_1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1  -0.02145   0.37477   0.01508  -0.01041  -0.03151  -0.00345

, , b_2_2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1   0.00431   0.00361     3e-04  -0.04617   0.39211    0.0153

, , b_3_0

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1     0.038  -0.00197   0.11078  -0.03646  -0.00016  -0.17832

, , b_3_1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1  -0.02674   0.01016   0.39977  -0.01711    -4e-04  -0.08477

, , b_3_2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1   0.00556  -0.00029   0.01622  -0.05913   0.01361    0.3616

, , R_1_2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1   0.05911   -0.1147     9e-05   0.00159   0.11096  -0.03217

, , R_1_3

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1  -0.04742  -0.00297  -0.17191  -0.02083   0.01891   0.18748

, , R_2_3

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1  -0.00194   0.21566  -0.27449   0.00213  -0.35437   0.46694

> round( drop( attr( margEffCondObsCov, "jacobian" ) ), 5 )
             b_1_0    b_1_1    b_1_2    b_2_0    b_2_1    b_2_2    b_3_0
d_y1_d_x1 -0.27564  0.10887 -0.04036  0.02941 -0.02145  0.00431  0.03800
d_y2_d_x1  0.03643 -0.01679  0.00533  0.02468  0.37477  0.00361 -0.00197
d_y3_d_x1  0.02151 -0.04018  0.00315  0.00207  0.01508  0.00030  0.11078
d_y1_d_x2  0.30524  0.14596  0.30021 -0.02239 -0.01041 -0.04617 -0.03646
d_y2_d_x2 -0.03901 -0.01883 -0.04554 -0.06552 -0.03151  0.39211 -0.00016
d_y3_d_x2 -0.01323 -0.00690 -0.06497 -0.00818 -0.00345  0.01530 -0.17832
             b_3_1    b_3_2    R_1_2    R_1_3    R_2_3
d_y1_d_x1 -0.02674  0.00556  0.05911 -0.04742 -0.00194
d_y2_d_x1  0.01016 -0.00029 -0.11470 -0.00297  0.21566
d_y3_d_x1  0.39977  0.01622  0.00009 -0.17191 -0.27449
d_y1_d_x2 -0.01711 -0.05913  0.00159 -0.02083  0.00213
d_y2_d_x2 -0.00040  0.01361  0.11096  0.01891 -0.35437
d_y3_d_x2 -0.08477  0.36160 -0.03217  0.18748  0.46694
> summary( margEffCondObsCov )
          Estimate Std. error z value Pr(> z)  
d_y1_d_x1   0.2899     0.1708   1.697  0.0897 .
d_y2_d_x1   0.3558     0.2307   1.543  0.1229  
d_y3_d_x1  -0.3706     0.3530  -1.050  0.2937  
d_y1_d_x2  -0.2927     0.1704  -1.718  0.0858 .
d_y2_d_x2  -0.5708     0.2487  -2.295  0.0217 *
d_y3_d_x2   0.5331     0.3357   1.588  0.1123  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> # now with explicitly specifying dummy variables
> margEffCondObsCovD <- margEff( estResultBFGS, cond = TRUE,
+    atMean = TRUE, othDepVar = c( colMedians( yMat * 1 ) ),
+    algorithm = GenzBretz(),
+    calcVCov = TRUE, returnJacobian = TRUE, dummyVars = c( "x1" ) )
> all.equal( margEffCondObsCovD, margEffCondObsCov )
[1] TRUE
> # now with seemingly no dummy variables
> margEffCondObsCovD0 <- margEff( estResultBFGS, cond = TRUE,
+    atMean = TRUE, othDepVar = c( colMedians( yMat * 1 ) ), 
+    algorithm = GenzBretz(),
+    calcVCov = TRUE, returnJacobian = TRUE, dummyVars = NULL )
> print( summary( margEffCondObsCovD0 ), digits = 3 )
          Estimate Std. error z value Pr(> z)  
d_y1_d_x1    0.298      0.188    1.59   0.113  
d_y2_d_x1    0.366      0.256    1.43   0.153  
d_y3_d_x1   -0.386      0.403   -0.96   0.338  
d_y1_d_x2   -0.293      0.170   -1.72   0.086 .
d_y2_d_x2   -0.571      0.249   -2.30   0.022 *
d_y3_d_x2    0.533      0.336    1.59   0.112  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> # now with seemingly only dummy variables
> margEffCondObsCovDA <- margEff( estResultBFGS, cond = TRUE,
+    atMean = TRUE, othDepVar = c( colMedians( yMat * 1 ) ), 
+    algorithm = GenzBretz(),
+    calcVCov = TRUE, returnJacobian = TRUE, dummyVars = c( "x1", "x2" ) )
> print( summary( margEffCondObsCovDA ), digits = 3 )
          Estimate Std. error z value Pr(> z)   
d_y1_d_x1    0.290      0.171    1.70   0.090 . 
d_y2_d_x1    0.356      0.231    1.54   0.123   
d_y3_d_x1   -0.371      0.353   -1.05   0.294   
d_y1_d_x2   -0.392      0.279   -1.40   0.160   
d_y2_d_x2   -0.442      0.149   -2.97   0.003 **
d_y3_d_x2    0.393      0.162    2.42   0.015 * 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> 
> # conditional marginal effects
> # (assuming that all other dependent variables are one)
> margEffCondOne <- margEff( estResultBFGS, cond = TRUE, othDepVar = 1,
+    algorithm = GenzBretz() )
> round( margEffCondOne, 4 )
   d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1     0.1767    0.3433   -0.3493   -0.2905   -0.4313    0.3901
2     0.1153    0.3597   -0.3619   -0.2292   -0.5342    0.4977
3     0.1125    0.3590   -0.3612   -0.0279   -0.4873    0.4538
4     0.3610    0.0695   -0.0734   -0.2641   -0.2123    0.2098
5     0.0793    0.3381   -0.3432   -0.0157   -0.3932    0.3905
6     0.3656    0.0478   -0.0496   -0.2816   -0.1555    0.1541
7     0.0008    0.0243   -0.0535    0.0000   -0.0072    0.0284
8     0.2521    0.2684   -0.2808   -0.3333   -0.2795    0.2361
9     0.1475    0.3575   -0.3609   -0.2644   -0.4844    0.4453
10    0.1681    0.3485   -0.3536   -0.2834   -0.4474    0.4069
11    0.2059    0.3200   -0.3289   -0.0799   -0.5893    0.5245
12    0.0417    0.2700   -0.2877   -0.0056   -0.2431    0.2824
13    0.0628    0.3159   -0.3250   -0.0107   -0.3336    0.3491
14    0.0083    0.1126   -0.1527   -0.0005   -0.0598    0.1127
15    0.0067    0.0994   -0.1400   -0.0263   -0.2889    0.3345
16    0.1883    0.3350   -0.3422   -0.0679   -0.5871    0.5221
17    0.2217    0.3043   -0.3146   -0.0915   -0.5849    0.5222
18    0.1322    0.3606   -0.3631   -0.2486   -0.5097    0.4717
19    0.3159    0.1709   -0.1825   -0.1858   -0.4251    0.4018
20    0.3485    0.0090   -0.0082   -0.2346   -0.0037    0.0012
21    0.0429    0.2734   -0.2904   -0.1160   -0.5465    0.5283
22    0.0000    0.0009   -0.0058   -0.0001   -0.0047    0.0220
23    0.3280    0.1482   -0.1586   -0.3376   -0.1210    0.0875
24    0.0234    0.2045   -0.2338   -0.0727   -0.4720    0.4750
25    0.0249    0.2113   -0.2395   -0.0764   -0.4811    0.4816
26    0.3306    0.1431   -0.1531   -0.3368   -0.1154    0.0827
27    0.0700    0.3267   -0.3338   -0.0128   -0.3605    0.3680
28    0.0037    0.0677   -0.1074   -0.0001   -0.0290    0.0702
29    0.1603    0.3525   -0.3570   -0.2765   -0.4618    0.4218
30    0.0943    0.3509   -0.3540   -0.0208   -0.4399    0.4221
31    0.1223    0.3606   -0.3629   -0.0322   -0.5089    0.4682
32    0.2072    0.3188   -0.3278   -0.3119   -0.3715    0.3287
33    0.0576    0.3067   -0.3175   -0.0093   -0.3129    0.3343
34    0.2649    0.2514   -0.2643   -0.1286   -0.5416    0.4927
35    0.0802    0.3390   -0.3440   -0.0159   -0.3961    0.3925
36    0.1948    0.3298   -0.3376   -0.0722   -0.5888    0.5236
37    0.3393    0.1252   -0.1340   -0.2201   -0.3386    0.3273
38    0.2187    0.3074   -0.3175   -0.3186   -0.3483    0.3051
39    0.0639    0.3176   -0.3264   -0.1548   -0.5696    0.5416
40    0.3448    0.1130   -0.1208   -0.3297   -0.0845    0.0569
41    0.3263    0.1515   -0.1621   -0.3382   -0.1245    0.0906
42    0.2442    0.2784   -0.2903   -0.3305   -0.2959    0.2524
43    0.1733    0.3454   -0.3511   -0.2877   -0.4376    0.3968
44    0.0296    0.2307   -0.2556   -0.0033   -0.1835    0.2345
45    0.3606    0.0708   -0.0748   -0.2631   -0.2156    0.2130
46    0.0320    0.2395   -0.2628   -0.0930   -0.5147    0.5060
47    0.3372    0.0054   -0.0046   -0.2168   -0.0021    0.0006
48    0.3658    0.0457   -0.0474   -0.2957   -0.0268    0.0141
49    0.0777    0.3363   -0.3418   -0.0151   -0.3878    0.3868
50    0.0080    0.1106   -0.1508   -0.0304   -0.3127    0.3535
> 
> # conditional marginal effects with covariance matrix at sample mean
> # (assuming that all other dependent variables are one)
> margEffCondOneCov <- margEff( estResultBFGS, cond = TRUE, othDepVar = 1,
+    data = as.data.frame( t( colMeans( xMat ) ) ), calcVCov = TRUE,
+    algorithm = GenzBretz() )
> round( margEffCondOneCov, 4 )
  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1    0.1525    0.3558   -0.3596   -0.1438   -0.5708    0.5247
> round( attr( margEffCondOneCov, "vcov" ), 5 )
, , d_y1_d_x1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1   0.70756   -0.0437  -0.20556  -0.74997   0.00181   0.20225

, , d_y2_d_x1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1   -0.0437    0.0532   0.03726    0.0409  -0.02424  -0.03729

, , d_y3_d_x1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1  -0.20556   0.03726   0.16117   0.21865   -0.0284   -0.1082

, , d_y1_d_x2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1  -0.74997    0.0409   0.21865   0.80534  -0.00102  -0.21227

, , d_y2_d_x2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1   0.00181  -0.02424   -0.0284  -0.00102   0.06184  -0.00381

, , d_y3_d_x2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1   0.20225  -0.03729   -0.1082  -0.21227  -0.00381   0.13207

> round( drop( attr( margEffCondOneCov, "vcov" ) ), 5 )
          d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
d_y1_d_x1   0.70756  -0.04370  -0.20556  -0.74997   0.00181   0.20225
d_y2_d_x1  -0.04370   0.05320   0.03726   0.04090  -0.02424  -0.03729
d_y3_d_x1  -0.20556   0.03726   0.16117   0.21865  -0.02840  -0.10820
d_y1_d_x2  -0.74997   0.04090   0.21865   0.80534  -0.00102  -0.21227
d_y2_d_x2   0.00181  -0.02424  -0.02840  -0.00102   0.06184  -0.00381
d_y3_d_x2   0.20225  -0.03729  -0.10820  -0.21227  -0.00381   0.13207
> print( summary( margEffCondOneCov ), digits = 3 )
          Estimate Std. error z value Pr(> z)  
d_y1_d_x1    0.152      0.841    0.18   0.856  
d_y2_d_x1    0.356      0.231    1.54   0.123  
d_y3_d_x1   -0.360      0.401   -0.90   0.370  
d_y1_d_x2   -0.144      0.897   -0.16   0.873  
d_y2_d_x2   -0.571      0.249   -2.30   0.022 *
d_y3_d_x2    0.525      0.363    1.44   0.149  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> # now with using argument 'atMean'
> margEffCondOneCovA <- margEff( estResultBFGS, cond = TRUE, othDepVar = 1,
+    atMean = TRUE, algorithm = GenzBretz(), calcVCov = TRUE )
> all.equal( margEffCondOneCovA, margEffCondOneCov )
[1] TRUE
> 
> proc.time()
   user  system elapsed 
 38.042   0.068  38.157 
