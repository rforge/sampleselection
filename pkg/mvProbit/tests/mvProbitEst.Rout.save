
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( "mvProbit" )
Loading required package: mvtnorm
Loading required package: maxLik
Loading required package: miscTools

Please cite the 'maxLik' package as:
Henningsen, Arne and Toomet, Ott (2011). maxLik: A package for maximum likelihood estimation in R. Computational Statistics 26(3), 443-458. DOI 10.1007/s00180-010-0217-1.

If you have questions, suggestions, or comments regarding the 'maxLik' package, please use a forum or 'tracker' at maxLik's R-Forge site:
https://r-forge.r-project.org/projects/maxlik/
Loading required package: abind
> options( digits = 4 )
> 
> ## generate a simulated data set
> set.seed( 123 )
> # number of observations
> nObs <- 50
> 
> # generate explanatory variables
> xMat <- cbind( 
+    const = rep( 1, nObs ),
+    x1 = as.numeric( rnorm( nObs ) > 0 ),
+    x2 = rnorm( nObs ) )
> 
> # model coefficients
> beta <- cbind( c(  0.8,  1.2, -0.8 ),
+                c( -0.6,  1.0, -1.6 ),
+                c(  0.5, -0.6,  1.2 ) )
> 
> # covariance matrix of error terms
> sigma <- miscTools::symMatrix( c( 1, 0.2, 0.4, 1, -0.1, 1 ) )
> 
> # generate dependent variables
> yMatLin <- xMat %*% beta 
> yMat <- ( yMatLin + rmvnorm( nObs, sigma = sigma, pre0.9_9994 = TRUE ) ) > 0
> colnames( yMat ) <- paste( "y", 1:3, sep = "" )
> 
> # create data frame
> dat <- as.data.frame( cbind( xMat, yMat ) )
> 
> # estimation with the BHHH algorithm, two-sided gradients
> estResultBHHH <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), startSigma = sigma,
+    data = dat, tol = 0.5,
+    algorithm = GenzBretz() )
> print( estResultBHHH )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = dat, start = c(beta), 
    startSigma = sigma, algorithm = GenzBretz(), tol = 0.5)

Coefficients:
   b_1_0    b_1_1    b_1_2    b_2_0    b_2_1    b_2_2    b_3_0    b_3_1 
 1.02508  1.30536 -1.02809 -0.78248  1.14318 -1.66938  0.58229 -0.69667 
   b_3_2    R_1_2    R_1_3    R_2_3 
 1.23283  0.86322  0.36022 -0.08406 

> summary( estResultBHHH )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = dat, start = c(beta), 
    startSigma = sigma, algorithm = GenzBretz(), tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0  1.02508    0.44548   2.301  0.0214 *
b_1_1  1.30536    0.73511   1.776  0.0758 .
b_1_2 -1.02809    0.68851  -1.493  0.1354  
b_2_0 -0.78248    0.38798  -2.017  0.0437 *
b_2_1  1.14318    0.53026   2.156  0.0311 *
b_2_2 -1.66938    0.81308  -2.053  0.0401 *
b_3_0  0.58229    0.64107   0.908  0.3637  
b_3_1 -0.69667    0.89818  -0.776  0.4380  
b_3_2  1.23283    0.62452   1.974  0.0484 *
R_1_2  0.86322   18.60071   0.046  0.9630  
R_1_3  0.36022    0.64712   0.557  0.5778  
R_2_3 -0.08406    0.34909  -0.241  0.8097  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

BHHH maximisation, 1 iterations
Return code 2: successive function values within tolerance limit
Log-likelihood: -56.91 on 12 Df

> logLik( estResultBHHH )
'log Lik.' -56.91 (df=12)
> estResultBHHHA <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta, sigma[ lower.tri( sigma ) ] ),
+    data = dat, tol = 0.5,
+    algorithm = GenzBretz() )
> all.equal( estResultBHHH, estResultBHHHA )
[1] "Component \"call\": target, current do not match when deparsed"
> 
> # estimation with the BHHH algorithm, one-sided gradients
> estResultBHHH1 <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), startSigma = sigma,
+    data = dat, tol = 0.5,
+    algorithm = GenzBretz(), oneSidedGrad = TRUE )
> print( estResultBHHH1 )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = dat, start = c(beta), 
    startSigma = sigma, algorithm = GenzBretz(), oneSidedGrad = TRUE, 
    tol = 0.5)

Coefficients:
   b_1_0    b_1_1    b_1_2    b_2_0    b_2_1    b_2_2    b_3_0    b_3_1 
 1.02508  1.30536 -1.02809 -0.78248  1.14318 -1.66938  0.58229 -0.69667 
   b_3_2    R_1_2    R_1_3    R_2_3 
 1.23283  0.86322  0.36022 -0.08406 

> summary( estResultBHHH1 )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = dat, start = c(beta), 
    startSigma = sigma, algorithm = GenzBretz(), oneSidedGrad = TRUE, 
    tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0  1.02508    0.44548   2.301  0.0214 *
b_1_1  1.30536    0.73511   1.776  0.0758 .
b_1_2 -1.02809    0.68851  -1.493  0.1354  
b_2_0 -0.78248    0.38797  -2.017  0.0437 *
b_2_1  1.14318    0.53026   2.156  0.0311 *
b_2_2 -1.66938    0.81307  -2.053  0.0401 *
b_3_0  0.58229    0.64106   0.908  0.3637  
b_3_1 -0.69667    0.89817  -0.776  0.4380  
b_3_2  1.23283    0.62452   1.974  0.0484 *
R_1_2  0.86322   18.60041   0.046  0.9630  
R_1_3  0.36022    0.64712   0.557  0.5778  
R_2_3 -0.08406    0.34909  -0.241  0.8097  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

BHHH maximisation, 1 iterations
Return code 2: successive function values within tolerance limit
Log-likelihood: -56.91 on 12 Df

> logLik( estResultBHHH1 )
'log Lik.' -56.91 (df=12)
> all.equal( estResultBHHH, estResultBHHH1, tol = 1e-5 )
[1] "Component \"call\": target, current do not match when deparsed"
> 
> # estimation with the BFGS algorithm, two-sided gradients
> estResultBFGS <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), startSigma = sigma, method = "BFGS",
+    data = dat, 
+    tol = 0.5, algorithm = GenzBretz() )
> print( estResultBFGS )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = dat, start = c(beta), 
    startSigma = sigma, method = "BFGS", algorithm = GenzBretz(), 
    tol = 0.5)

Coefficients:
   b_1_0    b_1_1    b_1_2    b_2_0    b_2_1    b_2_2    b_3_0    b_3_1 
 0.53607  1.16101 -1.14212 -0.44952  1.05496 -1.57624  0.40751 -0.85400 
   b_3_2    R_1_2    R_1_3    R_2_3 
 1.25958  0.29483  0.32822 -0.02382 

> summary( estResultBFGS )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = dat, start = c(beta), 
    startSigma = sigma, method = "BFGS", algorithm = GenzBretz(), 
    tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0  0.53607    0.82709   0.648  0.5169  
b_1_1  1.16101    0.91515   1.269  0.2046  
b_1_2 -1.14212    0.93847  -1.217  0.2236  
b_2_0 -0.44952    0.79215  -0.567  0.5704  
b_2_1  1.05496    0.88398   1.193  0.2327  
b_2_2 -1.57624    0.73187  -2.154  0.0313 *
b_3_0  0.40751    0.48897   0.833  0.4046  
b_3_1 -0.85400    0.84871  -1.006  0.3143  
b_3_2  1.25958    0.68040   1.851  0.0641 .
R_1_2  0.29483    1.85817   0.159  0.8739  
R_1_3  0.32822    0.70923   0.463  0.6435  
R_2_3 -0.02382    0.34466  -0.069  0.9449  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

BFGS maximisation, 4 iterations
Return code 0: successful convergence 
Log-likelihood: -52.94 on 12 Df

> logLik( estResultBFGS )
'log Lik.' -52.94 (df=12)
> 
> # estimation with the BFGS algorithm, one-sided gradients
> estResultBFGS1 <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), startSigma = sigma, method = "BFGS", 
+    data = dat, 
+    tol = 0.5, algorithm = GenzBretz(), oneSidedGrad = TRUE )
> print( estResultBFGS1 )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = dat, start = c(beta), 
    startSigma = sigma, method = "BFGS", algorithm = GenzBretz(), 
    oneSidedGrad = TRUE, tol = 0.5)

Coefficients:
   b_1_0    b_1_1    b_1_2    b_2_0    b_2_1    b_2_2    b_3_0    b_3_1 
 0.53607  1.16101 -1.14213 -0.44952  1.05496 -1.57624  0.40751 -0.85400 
   b_3_2    R_1_2    R_1_3    R_2_3 
 1.25958  0.29483  0.32822 -0.02382 

> summary( estResultBFGS1 )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = dat, start = c(beta), 
    startSigma = sigma, method = "BFGS", algorithm = GenzBretz(), 
    oneSidedGrad = TRUE, tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0  0.53607    0.82709   0.648  0.5169  
b_1_1  1.16101    0.91515   1.269  0.2046  
b_1_2 -1.14213    0.93847  -1.217  0.2236  
b_2_0 -0.44952    0.79215  -0.567  0.5704  
b_2_1  1.05496    0.88398   1.193  0.2327  
b_2_2 -1.57624    0.73187  -2.154  0.0313 *
b_3_0  0.40751    0.48897   0.833  0.4046  
b_3_1 -0.85400    0.84871  -1.006  0.3143  
b_3_2  1.25958    0.68040   1.851  0.0641 .
R_1_2  0.29483    1.85817   0.159  0.8739  
R_1_3  0.32822    0.70923   0.463  0.6435  
R_2_3 -0.02382    0.34466  -0.069  0.9449  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

BFGS maximisation, 4 iterations
Return code 0: successful convergence 
Log-likelihood: -52.94 on 12 Df

> logLik( estResultBFGS1 )
'log Lik.' -52.94 (df=12)
> all.equal( estResultBFGS, estResultBFGS1, tol = 1e-5 )
[1] "Component \"call\": target, current do not match when deparsed"
> 
> # estimation with the BFGS algorithm, one-sided gradients, no starting values
> estResultBFGS1a <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    data = dat, method = "BFGS",
+    tol = 0.5, algorithm = GenzBretz(), oneSidedGrad = TRUE )
> print( estResultBFGS1a )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = dat, method = "BFGS", 
    algorithm = GenzBretz(), oneSidedGrad = TRUE, tol = 0.5)

Coefficients:
   b_1_0    b_1_1    b_1_2    b_2_0    b_2_1    b_2_2    b_3_0    b_3_1 
 0.79353  1.88367 -1.74922 -0.40036  0.91577 -1.52106  0.97790 -1.69433 
   b_3_2    R_1_2    R_1_3    R_2_3 
 1.57625  0.75270  0.23721 -0.03453 

> summary( estResultBFGS1a )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = dat, method = "BFGS", 
    algorithm = GenzBretz(), oneSidedGrad = TRUE, tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0  0.79353    0.90412   0.878  0.3801  
b_1_1  1.88367    0.90668   2.078  0.0378 *
b_1_2 -1.74922    0.97400  -1.796  0.0725 .
b_2_0 -0.40036    0.69056  -0.580  0.5621  
b_2_1  0.91577    0.97998   0.934  0.3501  
b_2_2 -1.52106    0.72006  -2.112  0.0347 *
b_3_0  0.97790    0.64497   1.516  0.1295  
b_3_1 -1.69433    0.94788  -1.787  0.0739 .
b_3_2  1.57625    0.73399   2.148  0.0318 *
R_1_2  0.75270    4.32729   0.174  0.8619  
R_1_3  0.23721    0.90535   0.262  0.7933  
R_2_3 -0.03453    0.35889  -0.096  0.9234  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

BFGS maximisation, 3 iterations
Return code 0: successful convergence 
Log-likelihood: -49.36 on 12 Df

> logLik( estResultBFGS1a )
'log Lik.' -49.36 (df=12)
> 
> # estimation with the BFGS algorithm, one-sided gradients, no starting values for beta
> estResultBFGS1b <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    startSigma = sigma, data = dat, 
+    method = "BFGS", tol = 0.5, algorithm = GenzBretz(), oneSidedGrad = TRUE )
> print( estResultBFGS1b )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = dat, startSigma = sigma, 
    method = "BFGS", algorithm = GenzBretz(), oneSidedGrad = TRUE, 
    tol = 0.5)

Coefficients:
  b_1_0   b_1_1   b_1_2   b_2_0   b_2_1   b_2_2   b_3_0   b_3_1   b_3_2   R_1_2 
 0.8110  1.9060 -1.7627 -0.3770  0.9441 -1.5332  0.9372 -1.7498  1.6024  0.6817 
  R_1_3   R_2_3 
 0.4044  0.1663 

> summary( estResultBFGS1b )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = dat, startSigma = sigma, 
    method = "BFGS", algorithm = GenzBretz(), oneSidedGrad = TRUE, 
    tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0   0.8110     0.9297   0.872  0.3830  
b_1_1   1.9060     0.9160   2.081  0.0375 *
b_1_2  -1.7627     1.0131  -1.740  0.0819 .
b_2_0  -0.3770     0.7049  -0.535  0.5928  
b_2_1   0.9441     1.0345   0.913  0.3615  
b_2_2  -1.5332     0.7517  -2.040  0.0414 *
b_3_0   0.9372     0.6291   1.490  0.1363  
b_3_1  -1.7498     0.9996  -1.751  0.0800 .
b_3_2   1.6024     0.7848   2.042  0.0412 *
R_1_2   0.6817     3.4094   0.200  0.8415  
R_1_3   0.4044     0.8024   0.504  0.6143  
R_2_3   0.1663     0.3389   0.491  0.6235  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

BFGS maximisation, 3 iterations
Return code 0: successful convergence 
Log-likelihood: -49.57 on 12 Df

> logLik( estResultBFGS1b )
'log Lik.' -49.57 (df=12)
> 
> # estimation with the BFGS algorithm, one-sided gradients, no starting values for sigma
> estResultBFGS1s <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), data = dat, 
+    method = "BFGS", tol = 0.5, algorithm = GenzBretz(), oneSidedGrad = TRUE )
> print( estResultBFGS1s )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = dat, start = c(beta), 
    method = "BFGS", algorithm = GenzBretz(), oneSidedGrad = TRUE, 
    tol = 0.5)

Coefficients:
   b_1_0    b_1_1    b_1_2    b_2_0    b_2_1    b_2_2    b_3_0    b_3_1 
 0.55814  1.14958 -1.12747 -0.44426  1.07325 -1.57226  0.37255 -0.85470 
   b_3_2    R_1_2    R_1_3    R_2_3 
 1.23011  0.34981 -0.01177  0.09435 

> summary( estResultBFGS1s )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = dat, start = c(beta), 
    method = "BFGS", algorithm = GenzBretz(), oneSidedGrad = TRUE, 
    tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0  0.55814    0.86615   0.644  0.5193  
b_1_1  1.14958    0.90607   1.269  0.2045  
b_1_2 -1.12747    0.94191  -1.197  0.2313  
b_2_0 -0.44426    0.85526  -0.519  0.6035  
b_2_1  1.07325    0.99314   1.081  0.2798  
b_2_2 -1.57226    0.78557  -2.001  0.0453 *
b_3_0  0.37255    0.56172   0.663  0.5072  
b_3_1 -0.85470    0.95214  -0.898  0.3694  
b_3_2  1.23011    0.71506   1.720  0.0854 .
R_1_2  0.34981    2.02289   0.173  0.8627  
R_1_3 -0.01177    0.70776  -0.017  0.9867  
R_2_3  0.09435    0.33920   0.278  0.7809  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

BFGS maximisation, 4 iterations
Return code 0: successful convergence 
Log-likelihood: -52.78 on 12 Df

> logLik( estResultBFGS1s )
'log Lik.' -52.78 (df=12)
> 
> # estimation with the BFGS algorithm, Miwa algorithm for obtaining integrals
> estResultBFGSm <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), startSigma = sigma, 
+    data = dat, method = "BFGS",
+    tol = 0.5, algorithm = Miwa( steps = 64 ) )
There were 13 warnings (use warnings() to see them)
> print( estResultBFGSm )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = dat, start = c(beta), 
    startSigma = sigma, method = "BFGS", algorithm = Miwa(steps = 64), 
    tol = 0.5)

Coefficients:
   b_1_0    b_1_1    b_1_2    b_2_0    b_2_1    b_2_2    b_3_0    b_3_1 
 0.53609  1.16102 -1.14213 -0.44952  1.05496 -1.57624  0.40753 -0.85400 
   b_3_2    R_1_2    R_1_3    R_2_3 
 1.25960  0.29491  0.32819 -0.02386 

> summary( estResultBFGSm )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = dat, start = c(beta), 
    startSigma = sigma, method = "BFGS", algorithm = Miwa(steps = 64), 
    tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0  0.53609    0.82702   0.648  0.5168  
b_1_1  1.16102    0.91511   1.269  0.2045  
b_1_2 -1.14213    0.93837  -1.217  0.2235  
b_2_0 -0.44952    0.79215  -0.567  0.5704  
b_2_1  1.05496    0.88386   1.194  0.2326  
b_2_2 -1.57624    0.73173  -2.154  0.0312 *
b_3_0  0.40753    0.48894   0.834  0.4046  
b_3_1 -0.85400    0.84860  -1.006  0.3142  
b_3_2  1.25960    0.68024   1.852  0.0641 .
R_1_2  0.29491    1.85789   0.159  0.8739  
R_1_3  0.32819    0.70903   0.463  0.6435  
R_2_3 -0.02386    0.34468  -0.069  0.9448  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

BFGS maximisation, 4 iterations
Return code 0: successful convergence 
Log-likelihood: -52.94 on 12 Df

> logLik( estResultBFGSm )
'log Lik.' -52.94 (df=12)
> all.equal( estResultBFGS, estResultBFGSm, tol = 1e-3 )
[1] "Component \"call\": target, current do not match when deparsed"
> 
> # estimation with the BFGS algorithm, GHK algorithm for obtaining integrals
> estResultBFGSg <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), startSigma = sigma, 
+    data = dat, method = "BFGS",
+    tol = 0.5 )
There were 50 or more warnings (use warnings() to see the first 50)
> print( estResultBFGSg )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = dat, start = c(beta), 
    startSigma = sigma, method = "BFGS", tol = 0.5)

Coefficients:
   b_1_0    b_1_1    b_1_2    b_2_0    b_2_1    b_2_2    b_3_0    b_3_1 
 0.53604  1.16101 -1.14212 -0.44926  1.05509 -1.57625  0.40783 -0.85383 
   b_3_2    R_1_2    R_1_3    R_2_3 
 1.25947  0.29431  0.32864 -0.02362 

> summary( estResultBFGSg )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = dat, start = c(beta), 
    startSigma = sigma, method = "BFGS", tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0  0.53604    0.82705   0.648  0.5169  
b_1_1  1.16101    0.91513   1.269  0.2046  
b_1_2 -1.14212    0.93841  -1.217  0.2236  
b_2_0 -0.44926    0.78973  -0.569  0.5694  
b_2_1  1.05509    0.88356   1.194  0.2324  
b_2_2 -1.57625    0.73151  -2.155  0.0312 *
b_3_0  0.40783    0.48890   0.834  0.4042  
b_3_1 -0.85383    0.84792  -1.007  0.3139  
b_3_2  1.25947    0.67998   1.852  0.0640 .
R_1_2  0.29431    1.85822   0.158  0.8742  
R_1_3  0.32864    0.70958   0.463  0.6433  
R_2_3 -0.02362    0.34492  -0.068  0.9454  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

BFGS maximisation, 4 iterations
Return code 0: successful convergence 
Log-likelihood: -52.95 on 12 Df

> logLik( estResultBFGSg )
'log Lik.' -52.95 (df=12)
> all.equal( estResultBFGS, estResultBFGSg, tol = 1e-2 )
[1] "Component \"call\": target, current do not match when deparsed"
> all.equal( estResultBFGSm, estResultBFGSg, tol = 1e-2 )
[1] "Component \"call\": target, current do not match when deparsed"
> 
> # estimation with the Nelder-Mead algorithm
> estResultNM <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2,
+    start = c( beta ), startSigma = sigma, 
+    data = dat, 
+    method = "NM", reltol = 0.05, algorithm = GenzBretz() )
> print( estResultNM )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = dat, start = c(beta), 
    startSigma = sigma, method = "NM", algorithm = GenzBretz(), 
    reltol = 0.05)

Coefficients:
b_1_0 b_1_1 b_1_2 b_2_0 b_2_1 b_2_2 b_3_0 b_3_1 b_3_2 R_1_2 R_1_3 R_2_3 
 0.80  1.20 -0.80 -0.44  1.00 -1.60  0.50 -0.60  1.20  0.20  0.40 -0.10 

> summary( estResultNM )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2, data = dat, start = c(beta), 
    startSigma = sigma, method = "NM", algorithm = GenzBretz(), 
    reltol = 0.05)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0   0.8000     1.0541   0.759  0.4479  
b_1_1   1.2000     0.7460   1.609  0.1077  
b_1_2  -0.8000     0.9185  -0.871  0.3838  
b_2_0  -0.4400     0.7968  -0.552  0.5808  
b_2_1   1.0000     0.8707   1.149  0.2507  
b_2_2  -1.6000     0.6578  -2.432  0.0150 *
b_3_0   0.5000     0.5151   0.971  0.3317  
b_3_1  -0.6000     0.7708  -0.778  0.4363  
b_3_2   1.2000     0.6109   1.964  0.0495 *
R_1_2   0.2000     2.4163   0.083  0.9340  
R_1_3   0.4000     0.7321   0.546  0.5848  
R_2_3  -0.1000     0.3416  -0.293  0.7697  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Nelder-Mead maximisation, 13 iterations
Return code 0: successful convergence 
Log-likelihood: -56.95 on 12 Df

> logLik( estResultNM )
'log Lik.' -56.95 (df=12)
> 
> # estimation with NA in an explanatory variable
> dat$x1Na <- dat$x1
> dat$x1Na[7] <- NA
> estResultNax <- try( mvProbit( cbind( y1, y2, y3 ) ~ x1Na + x2,
+    data = dat, method = "BFGS", tol = 0.5, algorithm = GenzBretz() ) )
Error in if (!isTRUE(all.equal(sigma, t(sigma))) || any(diag(sigma) <  : 
  missing value where TRUE/FALSE needed
> estResultNaxStart <- try( mvProbit( cbind( y1, y2, y3 ) ~ x1Na + x2,
+    start = c( beta ), startSigma = sigma,
+    data = dat, method = "BFGS", tol = 0.5, algorithm = GenzBretz() ) )
Error in checkmvArgs(lower = lower, upper = upper, mean = mean, corr = corr,  : 
  'upper' not specified or contains NA
> 
> # estimation with NA in a dependant variable
> dat$y2Na <- dat$y2
> dat$y2Na[9] <- NA
> estResultNay <- try( mvProbit( cbind( y1, y2Na, y3 ) ~ x1 + x2,
+    data = dat, method = "BFGS", tol = 0.5, algorithm = GenzBretz() ) )
Error in mvProbit(cbind(y1, y2Na, y3) ~ x1 + x2, data = dat, method = "BFGS",  : 
  all dependent variables must be either 0, 1, TRUE, or FALSE
> 
> # estimation with NA both in a dependant variable and in an explanatory variable
> estResultNaxy <- try( mvProbit( cbind( y1, y2Na, y3 ) ~ x1Na + x2,
+    start = c( beta ), startSigma = sigma,
+    data = dat, method = "BFGS", tol = 0.5, algorithm = GenzBretz() ) )
Error in mvProbit(cbind(y1, y2Na, y3) ~ x1Na + x2, start = c(beta), startSigma = sigma,  : 
  all dependent variables must be either 0, 1, TRUE, or FALSE
> 
> # estimation with infinity in an explanatory variable
> dat$x2Inf <- dat$x2
> dat$x2Inf[15] <- Inf
> estResultInf <- try( mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2Inf,
+    data = dat, method = "BFGS", tol = 0.5, algorithm = GenzBretz() ) )
Error in glm.fit(x = structure(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  : 
  NA/NaN/Inf in 'x'
> estResultInfStart <- try( mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2Inf,
+    start = c( beta ), startSigma = sigma,
+    data = dat, method = "BFGS", tol = 0.5, algorithm = GenzBretz() ) )
Error in maxOptim(fn = fn, grad = grad, hess = hess, start = start, method = "BFGS",  : 
  NA in the initial gradient
> 
> # estimation with a factor as explanatory variable (x1 with 2 levels)
> dat$x1Fac <- as.factor( ifelse( dat$x1 == 0, "green", "red" ) )
> estResultFac <- mvProbit( cbind( y1, y2, y3 ) ~ x1Fac + x2,
+    start = c( beta ), startSigma = sigma,
+    data = dat, method = "BFGS", tol = 0.5, algorithm = GenzBretz() )
> print( estResultFac )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1Fac + x2, data = dat, 
    start = c(beta), startSigma = sigma, method = "BFGS", algorithm = GenzBretz(), 
    tol = 0.5)

Coefficients:
   b_1_0    b_1_1    b_1_2    b_2_0    b_2_1    b_2_2    b_3_0    b_3_1 
 0.53607  1.16101 -1.14212 -0.44952  1.05496 -1.57624  0.40751 -0.85400 
   b_3_2    R_1_2    R_1_3    R_2_3 
 1.25958  0.29483  0.32822 -0.02382 

> summary( estResultFac )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1Fac + x2, data = dat, 
    start = c(beta), startSigma = sigma, method = "BFGS", algorithm = GenzBretz(), 
    tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0  0.53607    0.82709   0.648  0.5169  
b_1_1  1.16101    0.91515   1.269  0.2046  
b_1_2 -1.14212    0.93847  -1.217  0.2236  
b_2_0 -0.44952    0.79215  -0.567  0.5704  
b_2_1  1.05496    0.88398   1.193  0.2327  
b_2_2 -1.57624    0.73187  -2.154  0.0313 *
b_3_0  0.40751    0.48897   0.833  0.4046  
b_3_1 -0.85400    0.84871  -1.006  0.3143  
b_3_2  1.25958    0.68040   1.851  0.0641 .
R_1_2  0.29483    1.85817   0.159  0.8739  
R_1_3  0.32822    0.70923   0.463  0.6435  
R_2_3 -0.02382    0.34466  -0.069  0.9449  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

BFGS maximisation, 4 iterations
Return code 0: successful convergence 
Log-likelihood: -52.94 on 12 Df

> logLik( estResultFac )
'log Lik.' -52.94 (df=12)
> all.equal( estResultBFGS, estResultFac )
[1] "Component \"call\": target, current do not match when deparsed"
[2] "Component \"dummyVars\": 1 string mismatch"                    
> 
> # estimation with a factor as explanatory variable (x1 with 3 levels)
> dat$x1Fac3 <- as.factor(
+    ifelse( rnorm( nObs ) <= -0.5, "brown", as.character( dat$x1Fac ) ) )
> estResultFac13 <- mvProbit( cbind( y1, y2, y3 ) ~ x1Fac3 + x2,
+    data = dat, method = "BFGS", tol = 0.5, algorithm = GenzBretz() )
> print( estResultFac13 )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1Fac3 + x2, data = dat, 
    method = "BFGS", algorithm = GenzBretz(), tol = 0.5)

Coefficients:
   b_1_0    b_1_1    b_1_2    b_1_3    b_2_0    b_2_1    b_2_2    b_2_3 
 1.07243 -0.25614  1.59025 -1.75146  0.05844 -0.52818  0.48630 -1.52254 
   b_3_0    b_3_1    b_3_2    b_3_3    R_1_2    R_1_3    R_2_3 
 0.89230  0.18069 -1.91667  1.74038  0.84707  0.27999 -0.04633 

> summary( estResultFac13 )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1Fac3 + x2, data = dat, 
    method = "BFGS", algorithm = GenzBretz(), tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)   
b_1_0  1.07243    1.45294   0.738  0.4604   
b_1_1 -0.25614    1.71531  -0.149  0.8813   
b_1_2  1.59025    2.37409   0.670  0.5030   
b_1_3 -1.75146    1.07267  -1.633  0.1025   
b_2_0  0.05844    0.87472   0.067  0.9467   
b_2_1 -0.52818    0.86699  -0.609  0.5424   
b_2_2  0.48630    1.06821   0.455  0.6489   
b_2_3 -1.52254    0.56944  -2.674  0.0075 **
b_3_0  0.89230    1.14279   0.781  0.4349   
b_3_1  0.18069    1.04626   0.173  0.8629   
b_3_2 -1.91667    1.42167  -1.348  0.1776   
b_3_3  1.74038    1.10611   1.573  0.1156   
R_1_2  0.84707    5.17569   0.164  0.8700   
R_1_3  0.27999    1.61815   0.173  0.8626   
R_2_3 -0.04633    0.48673  -0.095  0.9242   
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

BFGS maximisation, 3 iterations
Return code 0: successful convergence 
Log-likelihood: -47.83 on 15 Df

> logLik( estResultFac13 )
'log Lik.' -47.83 (df=15)
> 
> # estimation with a factor as explanatory variable (x2 with 3 levels)
> dat$x2Fac3 <- as.factor( ifelse( dat$x2 < -0.5, "low", 
+    ifelse( dat$x2 > 0.5, "high", "medium" ) ) )
> estResultFac23 <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2Fac3,
+    data = dat, method = "BFGS", tol = 0.5, algorithm = GenzBretz() )
> print( estResultFac23 )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2Fac3, data = dat, 
    method = "BFGS", algorithm = GenzBretz(), tol = 0.5)

Coefficients:
   b_1_0    b_1_1    b_1_2    b_1_3    b_2_0    b_2_1    b_2_2    b_2_3 
-1.29153  1.80789  6.88772  1.95806 -6.57468  1.02288  7.15853  6.36786 
   b_3_0    b_3_1    b_3_2    b_3_3    R_1_2    R_1_3    R_2_3 
 2.13416 -1.61627 -2.63685 -1.12497  0.84969 -0.04342 -0.29460 

> summary( estResultFac23 )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2Fac3, data = dat, 
    method = "BFGS", algorithm = GenzBretz(), tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)
b_1_0 -1.29153        Inf       0       1
b_1_1  1.80789        Inf       0       1
b_1_2  6.88772        Inf       0       1
b_1_3  1.95806        Inf       0       1
b_2_0 -6.57468        Inf       0       1
b_2_1  1.02288        Inf       0       1
b_2_2  7.15853        Inf       0       1
b_2_3  6.36786        Inf       0       1
b_3_0  2.13416        Inf       0       1
b_3_1 -1.61627        Inf       0       1
b_3_2 -2.63685        Inf       0       1
b_3_3 -1.12497        Inf       0       1
R_1_2  0.84969        Inf       0       1
R_1_3 -0.04342        Inf       0       1
R_2_3 -0.29460        Inf       0       1

BFGS maximisation, 3 iterations
Return code 0: successful convergence 
Log-likelihood: -50.99 on 15 Df

> logLik( estResultFac23 )
'log Lik.' -50.99 (df=15)
> 
> # estimation with a factor as explanatory variable (x3 with 3 levels)
> dat$x3Fac3 <- as.factor( ifelse( rnorm( nObs ) < -0.5, "low", 
+    ifelse( rnorm( nObs ) < 0, "medium", "high" ) ) )
> estResultFac33 <- mvProbit( cbind( y1, y2, y3 ) ~ x1 + x2 + x3Fac3,
+    data = dat, method = "BFGS", tol = 0.5, algorithm = GenzBretz() )
> print( estResultFac33 )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2 + x3Fac3, data = dat, 
    method = "BFGS", algorithm = GenzBretz(), tol = 0.5)

Coefficients:
   b_1_0    b_1_1    b_1_2    b_1_3    b_1_4    b_2_0    b_2_1    b_2_2 
 1.04483  1.84455 -1.74350 -0.33330 -0.30749 -0.38080  0.92203 -1.53822 
   b_2_3    b_2_4    b_3_0    b_3_1    b_3_2    b_3_3    b_3_4    R_1_2 
-0.18978  0.10354  0.79732 -1.71576  1.56766  0.21184  0.38292  0.78195 
   R_1_3    R_2_3 
 0.26630 -0.04226 

> summary( estResultFac33 )

Call:
mvProbit(formula = cbind(y1, y2, y3) ~ x1 + x2 + x3Fac3, data = dat, 
    method = "BFGS", algorithm = GenzBretz(), tol = 0.5)

Coefficients:
      Estimate Std. error t value Pr(> t)  
b_1_0  1.04483    0.93457   1.118  0.2636  
b_1_1  1.84455    1.26116   1.463  0.1436  
b_1_2 -1.74350    1.15403  -1.511  0.1308  
b_1_3 -0.33330    0.99939  -0.334  0.7388  
b_1_4 -0.30749    0.96290  -0.319  0.7495  
b_2_0 -0.38080    0.87769  -0.434  0.6644  
b_2_1  0.92203    1.00590   0.917  0.3593  
b_2_2 -1.53822    0.81086  -1.897  0.0578 .
b_2_3 -0.18978    0.80061  -0.237  0.8126  
b_2_4  0.10354    1.00012   0.104  0.9175  
b_3_0  0.79732    0.80503   0.990  0.3220  
b_3_1 -1.71576    1.37841  -1.245  0.2132  
b_3_2  1.56766    0.94021   1.667  0.0954 .
b_3_3  0.21184    0.80366   0.264  0.7921  
b_3_4  0.38292    1.00719   0.380  0.7038  
R_1_2  0.78195    4.86780   0.161  0.8724  
R_1_3  0.26630    1.17266   0.227  0.8204  
R_2_3 -0.04226    0.44482  -0.095  0.9243  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

BFGS maximisation, 3 iterations
Return code 0: successful convergence 
Log-likelihood: -48.82 on 18 Df

> logLik( estResultFac33 )
'log Lik.' -48.82 (df=18)
> 
> 
> ## testing the logLik method
> # argument 'coef'
> all.equal( logLik( estResultBHHH ), 
+    logLik( estResultBHHH, coef = coef( estResultBHHH ) ) )
[1] TRUE
> logLik( estResultBHHH ) -
+    logLik( estResultBHHH, coef = coef( estResultBHHH ) * 0.999 )
'log Lik.' -0.004271 (df=12)
> 
> # argument 'data'
> all.equal( logLik( estResultBHHH ), 
+    logLik( estResultBHHH, data = dat ) )
[1] TRUE
> logLik( estResultBHHH ) -
+    logLik( estResultBHHH, data = as.data.frame( cbind( xMat * 0.999, yMat ) ) )
'log Lik.' 0.01229 (df=12)
> 
> # argument 'algorithm'
> all.equal( logLik( estResultBHHH ), 
+    logLik( estResultBHHH, algorithm = GenzBretz() ) )
[1] TRUE
> logLik( estResultBHHH ) -
+    logLik( estResultBHHH, algorithm = Miwa() )
'log Lik.' -0.001092 (df=12)
> 
> # argument 'nGHK'
> all.equal( logLik( estResultBHHH ), 
+    logLik( estResultBHHH, nGHK = 5555 ) )
[1] TRUE
> logLik( estResultBHHH, algorithm = "GHK" ) -
+    logLik( estResultBHHH, algorithm = "GHK", nGHK = 2000 )
'log Lik.' -0.009142 (df=12)
> 
> # argument 'random.seed'
> all.equal( logLik( estResultBHHH ), 
+    logLik( estResultBHHH, random.seed = 123 ) )
[1] TRUE
> logLik( estResultBHHH ) -
+    logLik( estResultBHHH, random.seed = 1234 )
'log Lik.' -0.006403 (df=12)
> 
> # restore original data frame without factors, 
> # because otherwise some of the following commands fail, 
> # as the mean of factor variables cannot be calculated
> datFac <- dat
> dat <- as.data.frame( cbind( xMat, yMat ) )
> 
> # marginal effects based on estimated coefficients with covariance matrix
> # unconditional marginal effects (with Jacobian)
> margEffUnc <- margEff( estResultBFGS, calcVCov = TRUE, returnJacobian = TRUE )
> round( margEffUnc, 3 )
   d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1      0.323     0.384    -0.317    -0.442    -0.439     0.386
2      0.243     0.399    -0.330    -0.388    -0.579     0.469
3      0.239     0.398    -0.330    -0.099    -0.501     0.443
4      0.401     0.056    -0.084    -0.452    -0.189     0.222
5      0.188     0.369    -0.317    -0.067    -0.396     0.385
6      0.370     0.035    -0.061    -0.455    -0.128     0.172
7      0.010     0.022    -0.053    -0.001    -0.006     0.028
8      0.401     0.291    -0.260    -0.452    -0.246     0.261
9      0.287     0.400    -0.328    -0.422    -0.511     0.429
10     0.313     0.390    -0.321    -0.437    -0.460     0.399
11     0.356     0.355    -0.299    -0.205    -0.629     0.502
12     0.122     0.285    -0.271    -0.035    -0.237     0.281
13     0.161     0.341    -0.302    -0.053    -0.332     0.345
14     0.043     0.110    -0.149    -0.008    -0.055     0.113
15     0.037     0.097    -0.137    -0.097    -0.292     0.322
16     0.336     0.374    -0.311    -0.183    -0.624     0.501
17     0.372     0.336    -0.288    -0.226    -0.626     0.499
18     0.266     0.402    -0.330    -0.407    -0.546     0.449
19     0.438     0.170    -0.179    -0.370    -0.439     0.389
20     0.224     0.004    -0.015    -0.089    -0.001     0.006
21     0.124     0.289    -0.273    -0.250    -0.597     0.491
22     0.001     0.001    -0.006    -0.003    -0.004     0.022
23     0.438     0.143    -0.159    -0.378    -0.079     0.124
24     0.083     0.210    -0.223    -0.184    -0.503     0.447
25     0.087     0.217    -0.229    -0.190    -0.514     0.452
26     0.438     0.137    -0.154    -0.372    -0.074     0.119
27     0.173     0.354    -0.309    -0.059    -0.361     0.363
28     0.026     0.064    -0.106    -0.004    -0.026     0.070
29     0.303     0.394    -0.324    -0.432    -0.480     0.411
30     0.212     0.386    -0.325    -0.081    -0.448     0.414
31     0.253     0.401    -0.331    -0.109    -0.526     0.456
32     0.357     0.354    -0.299    -0.454    -0.360     0.337
33     0.152     0.329    -0.296    -0.048    -0.310     0.331
34     0.411     0.269    -0.246    -0.287    -0.578     0.470
35     0.190     0.370    -0.317    -0.068    -0.399     0.387
36     0.344     0.367    -0.307    -0.191    -0.627     0.502
37     0.435     0.116    -0.138    -0.413    -0.335     0.325
38     0.369     0.340    -0.290    -0.455    -0.330     0.318
39     0.163     0.343    -0.303    -0.302    -0.628     0.502
40     0.431     0.102    -0.127    -0.337    -0.049     0.090
41     0.438     0.146    -0.162    -0.381    -0.082     0.127
42     0.394     0.303    -0.267    -0.454    -0.265     0.275
43     0.319     0.386    -0.319    -0.440    -0.447     0.391
44     0.097     0.239    -0.243    -0.025    -0.176     0.234
45     0.403     0.057    -0.086    -0.451    -0.192     0.225
46     0.102     0.249    -0.249    -0.216    -0.556     0.473
47     0.187     0.002    -0.010    -0.066     0.000     0.003
48     0.366     0.033    -0.059    -0.218    -0.010     0.033
49     0.186     0.367    -0.315    -0.066    -0.390     0.381
50     0.042     0.108    -0.147    -0.106    -0.318     0.340
> round( attr( margEffUnc, "vcov" )[ 1:5, , ], 2 )
, , d_y1_d_x1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1      0.04     -0.02     -0.01     -0.01     -0.02      0.01
2      0.04     -0.04     -0.02      0.00      0.01      0.01
3      0.04     -0.04     -0.02     -0.02      0.03      0.00
4      0.07     -0.01      0.01     -0.05      0.01     -0.02
5      0.05     -0.05     -0.02     -0.02      0.02      0.00

, , d_y2_d_x1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1     -0.02      0.07      0.03     -0.03      0.04     -0.02
2     -0.04      0.10      0.04     -0.01     -0.01     -0.04
3     -0.04      0.10      0.04      0.03     -0.03     -0.01
4     -0.01      0.01      0.00      0.02     -0.03      0.01
5     -0.05      0.10      0.03      0.03     -0.01      0.00

, , d_y3_d_x1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1     -0.01      0.03      0.09     -0.03      0.01      0.01
2     -0.02      0.04      0.09     -0.01     -0.02     -0.02
3     -0.02      0.04      0.09      0.02     -0.02     -0.01
4      0.01      0.00      0.01      0.00      0.01     -0.02
5     -0.02      0.03      0.08      0.02      0.00      0.01

, , d_y1_d_x2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1     -0.01     -0.03     -0.03      0.11     -0.01      0.00
2      0.00     -0.01     -0.01      0.04      0.01      0.00
3     -0.02      0.03      0.02      0.03     -0.02      0.01
4     -0.05      0.02      0.00      0.14     -0.03      0.01
5     -0.02      0.03      0.02      0.03     -0.01      0.01

, , d_y2_d_x2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1     -0.02      0.04      0.01     -0.01      0.05     -0.01
2      0.01     -0.01     -0.02      0.01      0.03     -0.01
3      0.03     -0.03     -0.02     -0.02      0.07     -0.01
4      0.01     -0.03      0.01     -0.03      0.06     -0.01
5      0.02     -0.01      0.00     -0.01      0.05     -0.01

, , d_y3_d_x2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1      0.01     -0.02      0.01      0.00     -0.01      0.03
2      0.01     -0.04     -0.02      0.00     -0.01      0.06
3      0.00     -0.01     -0.01      0.01     -0.01      0.04
4     -0.02      0.01     -0.02      0.01     -0.01      0.02
5      0.00      0.00      0.01      0.01     -0.01      0.03

> round( drop( attr( margEffUnc, "vcov" )[ nObs, , ] ), 2 )
          d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
d_y1_d_x1      0.02      0.00      0.00     -0.03      0.01      0.00
d_y2_d_x1      0.00      0.01     -0.01      0.01     -0.02      0.00
d_y3_d_x1      0.00     -0.01      0.02      0.00      0.01     -0.02
d_y1_d_x2     -0.03      0.01      0.00      0.05     -0.02      0.00
d_y2_d_x2      0.01     -0.02      0.01     -0.02      0.05      0.00
d_y3_d_x2      0.00      0.00     -0.02      0.00      0.00      0.02
> round( attr( margEffUnc, "jacobian" )[ 1:5, , ], 2 )
, , b_1_0

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1     -0.24         0         0      0.11         0         0
2     -0.25         0         0      0.22         0         0
3     -0.25         0         0      0.17         0         0
4      0.16         0         0      0.06         0         0
5     -0.23         0         0      0.13         0         0

, , b_1_1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1      0.15         0         0      0.00         0         0
2      0.09         0         0      0.00         0         0
3      0.09         0         0      0.17         0         0
4      0.40         0         0      0.06         0         0
5      0.06         0         0      0.13         0         0

, , b_1_2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1     -0.06         0         0      0.41         0         0
2      0.01         0         0      0.33         0         0
3      0.01         0         0      0.08         0         0
4      0.22         0         0      0.48         0         0
5      0.05         0         0      0.03         0         0

, , b_2_0

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1         0      0.11         0         0     -0.37         0
2         0     -0.04         0         0     -0.23         0
3         0     -0.05         0         0      0.34         0
4         0      0.11         0         0     -0.29         0
5         0     -0.15         0         0      0.38         0

, , b_2_1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1         0      0.39         0         0      0.00         0
2         0      0.32         0         0      0.00         0
3         0      0.32         0         0      0.34         0
4         0      0.12         0         0     -0.29         0
5         0      0.25         0         0      0.38         0

, , b_2_2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1         0      0.03         0         0      0.18         0
2         0      0.00         0         0      0.37         0
3         0      0.00         0         0      0.30         0
4         0      0.15         0         0     -0.28         0
5         0      0.03         0         0      0.17         0

, , b_3_0

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1         0         0      0.09         0         0     -0.28
2         0         0     -0.02         0         0     -0.17
3         0         0     -0.02         0         0      0.22
4         0         0      0.14         0         0     -0.28
5         0         0     -0.09         0         0      0.28

, , b_3_1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1         0         0      0.40         0         0      0.00
2         0         0      0.36         0         0      0.00
3         0         0      0.35         0         0      0.22
4         0         0      0.18         0         0     -0.28
5         0         0      0.31         0         0      0.28

, , b_3_2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1         0         0      0.02         0         0      0.24
2         0         0      0.00         0         0      0.38
3         0         0      0.00         0         0      0.34
4         0         0      0.19         0         0     -0.21
5         0         0      0.02         0         0      0.24

, , R_1_2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1         0         0         0         0         0         0
2         0         0         0         0         0         0
3         0         0         0         0         0         0
4         0         0         0         0         0         0
5         0         0         0         0         0         0

, , R_1_3

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1         0         0         0         0         0         0
2         0         0         0         0         0         0
3         0         0         0         0         0         0
4         0         0         0         0         0         0
5         0         0         0         0         0         0

, , R_2_3

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1         0         0         0         0         0         0
2         0         0         0         0         0         0
3         0         0         0         0         0         0
4         0         0         0         0         0         0
5         0         0         0         0         0         0

> round( drop( attr( margEffUnc, "jacobian" )[ nObs, , ] ), 2 )
          b_1_0 b_1_1 b_1_2 b_2_0 b_2_1 b_2_2 b_3_0 b_3_1 b_3_2 R_1_2 R_1_3
d_y1_d_x1 -0.09  0.01  0.09  0.00  0.00  0.00  0.00  0.00  0.00     0     0
d_y2_d_x1  0.00  0.00  0.00 -0.17  0.03  0.17  0.00  0.00  0.00     0     0
d_y3_d_x1  0.00  0.00  0.00  0.00  0.00  0.00 -0.18  0.09  0.19     0     0
d_y1_d_x2  0.18  0.00 -0.09  0.00  0.00  0.00  0.00  0.00  0.00     0     0
d_y2_d_x2  0.00  0.00  0.00  0.37  0.00 -0.18  0.00  0.00  0.00     0     0
d_y3_d_x2  0.00  0.00  0.00  0.00  0.00  0.00  0.30  0.00 -0.04     0     0
          R_2_3
d_y1_d_x1     0
d_y2_d_x1     0
d_y3_d_x1     0
d_y1_d_x2     0
d_y2_d_x2     0
d_y3_d_x2     0
> print( summary( margEffUnc ), digits = c( 3, 3, 2, 2, 2 ) )
              Estimate Std. error z value Pr(> z)    
1: d_y1_d_x1     0.323      0.200    1.64    0.10 .  
1: d_y2_d_x1     0.384      0.260    1.47    0.14    
1: d_y3_d_x1    -0.317      0.290   -1.08    0.28    
1: d_y1_d_x2    -0.442      0.320   -1.36    0.17    
1: d_y2_d_x2    -0.439      0.220   -2.03    0.04 *  
1: d_y3_d_x2     0.386      0.170    2.34    0.02 *  
2: d_y1_d_x1     0.243      0.200    1.19    0.23    
2: d_y2_d_x1     0.399      0.320    1.27    0.21    
2: d_y3_d_x1    -0.330      0.310   -1.07    0.28    
2: d_y1_d_x2    -0.388      0.210   -1.88    0.06 .  
2: d_y2_d_x2    -0.579      0.190   -3.12  <2e-16 ***
2: d_y3_d_x2     0.469      0.240    1.98    0.05 *  
3: d_y1_d_x1     0.239      0.200    1.17    0.24    
3: d_y2_d_x1     0.398      0.320    1.26    0.21    
3: d_y3_d_x1    -0.330      0.310   -1.07    0.28    
3: d_y1_d_x2    -0.099      0.180   -0.56    0.58    
3: d_y2_d_x2    -0.501      0.270   -1.86    0.06 .  
3: d_y3_d_x2     0.443      0.210    2.15    0.03 *  
4: d_y1_d_x1     0.401      0.270    1.47    0.14    
4: d_y2_d_x1     0.056      0.110    0.50    0.62    
4: d_y3_d_x1    -0.084      0.120   -0.72    0.47    
4: d_y1_d_x2    -0.452      0.370   -1.21    0.23    
4: d_y2_d_x2    -0.189      0.240   -0.77    0.44    
4: d_y3_d_x2     0.222      0.150    1.44    0.15    
5: d_y1_d_x1     0.188      0.220    0.86    0.39    
5: d_y2_d_x1     0.369      0.310    1.19    0.23    
5: d_y3_d_x1    -0.317      0.290   -1.10    0.27    
5: d_y1_d_x2    -0.067      0.160   -0.42    0.67    
5: d_y2_d_x2    -0.396      0.210   -1.86    0.06 .  
5: d_y3_d_x2     0.385      0.160    2.34    0.02 *  
6: d_y1_d_x1     0.370      0.250    1.49    0.14    
6: d_y2_d_x1     0.035      0.090    0.41    0.68    
6: d_y3_d_x1    -0.061      0.100   -0.61    0.54    
6: d_y1_d_x2    -0.455      0.370   -1.23    0.22    
6: d_y2_d_x2    -0.128      0.220   -0.58    0.56    
6: d_y3_d_x2     0.172      0.160    1.08    0.28    
7: d_y1_d_x1     0.010      0.060    0.18    0.86    
7: d_y2_d_x1     0.022      0.040    0.57    0.57    
7: d_y3_d_x1    -0.053      0.090   -0.56    0.57    
7: d_y1_d_x2    -0.001      0.010   -0.11    0.91    
7: d_y2_d_x2    -0.006      0.020   -0.30    0.76    
7: d_y3_d_x2     0.028      0.080    0.35    0.73    
8: d_y1_d_x1     0.401      0.250    1.59    0.11    
8: d_y2_d_x1     0.291      0.180    1.58    0.11    
8: d_y3_d_x1    -0.260      0.230   -1.12    0.26    
8: d_y1_d_x2    -0.452      0.380   -1.20    0.23    
8: d_y2_d_x2    -0.246      0.290   -0.85    0.40    
8: d_y3_d_x2     0.261      0.140    1.88    0.06 .  
9: d_y1_d_x1     0.287      0.190    1.47    0.14    
9: d_y2_d_x1     0.400      0.290    1.36    0.17    
9: d_y3_d_x1    -0.328      0.310   -1.07    0.29    
9: d_y1_d_x2    -0.422      0.270   -1.54    0.12    
9: d_y2_d_x2    -0.511      0.180   -2.89  <2e-16 ***
9: d_y3_d_x2     0.429      0.200    2.17    0.03 *  
10: d_y1_d_x1    0.313      0.200    1.60    0.11    
10: d_y2_d_x1    0.390      0.270    1.44    0.15    
10: d_y3_d_x1   -0.321      0.300   -1.07    0.28    
10: d_y1_d_x2   -0.437      0.310   -1.41    0.16    
10: d_y2_d_x2   -0.460      0.200   -2.27    0.02 *  
10: d_y3_d_x2    0.399      0.170    2.30    0.02 *  
11: d_y1_d_x1    0.356      0.210    1.69    0.09 .  
11: d_y2_d_x1    0.355      0.230    1.57    0.12    
11: d_y3_d_x1   -0.299      0.270   -1.09    0.28    
11: d_y1_d_x2   -0.205      0.170   -1.22    0.22    
11: d_y2_d_x2   -0.629      0.290   -2.14    0.03 *  
11: d_y3_d_x2    0.502      0.270    1.85    0.06 .  
12: d_y1_d_x1    0.122      0.220    0.56    0.57    
12: d_y2_d_x1    0.285      0.250    1.16    0.25    
12: d_y3_d_x1   -0.271      0.230   -1.15    0.25    
12: d_y1_d_x2   -0.035      0.120   -0.30    0.77    
12: d_y2_d_x2   -0.237      0.160   -1.53    0.13    
12: d_y3_d_x2    0.281      0.150    1.88    0.06 .  
13: d_y1_d_x1    0.161      0.220    0.73    0.47    
13: d_y2_d_x1    0.341      0.290    1.17    0.24    
13: d_y3_d_x1   -0.302      0.270   -1.12    0.26    
13: d_y1_d_x2   -0.053      0.140   -0.36    0.72    
13: d_y2_d_x2   -0.332      0.180   -1.79    0.07 .  
13: d_y3_d_x2    0.345      0.150    2.29    0.02 *  
14: d_y1_d_x1    0.043      0.140    0.30    0.77    
14: d_y2_d_x1    0.110      0.110    1.02    0.31    
14: d_y3_d_x1   -0.149      0.150   -1.02    0.31    
14: d_y1_d_x2   -0.008      0.040   -0.17    0.86    
14: d_y2_d_x2   -0.055      0.090   -0.63    0.53    
14: d_y3_d_x2    0.113      0.160    0.72    0.47    
15: d_y1_d_x1    0.037      0.130    0.28    0.78    
15: d_y2_d_x1    0.097      0.100    0.98    0.33    
15: d_y3_d_x1   -0.137      0.140   -0.97    0.33    
15: d_y1_d_x2   -0.097      0.220   -0.44    0.66    
15: d_y2_d_x2   -0.292      0.200   -1.43    0.15    
15: d_y3_d_x2    0.322      0.140    2.35    0.02 *  
16: d_y1_d_x1    0.336      0.200    1.67    0.09 .  
16: d_y2_d_x1    0.374      0.250    1.51    0.13    
16: d_y3_d_x1   -0.311      0.290   -1.08    0.28    
16: d_y1_d_x2   -0.183      0.170   -1.05    0.29    
16: d_y2_d_x2   -0.624      0.310   -2.02    0.04 *  
16: d_y3_d_x2    0.501      0.270    1.86    0.06 .  
17: d_y1_d_x1    0.372      0.220    1.67    0.09 .  
17: d_y2_d_x1    0.336      0.210    1.61    0.11    
17: d_y3_d_x1   -0.288      0.260   -1.10    0.27    
17: d_y1_d_x2   -0.226      0.170   -1.37    0.17    
17: d_y2_d_x2   -0.626      0.270   -2.30    0.02 *  
17: d_y3_d_x2    0.499      0.270    1.86    0.06 .  
18: d_y1_d_x1    0.266      0.200    1.35    0.18    
18: d_y2_d_x1    0.402      0.310    1.31    0.19    
18: d_y3_d_x1   -0.330      0.310   -1.07    0.29    
18: d_y1_d_x2   -0.407      0.240   -1.68    0.09 .  
18: d_y2_d_x2   -0.546      0.170   -3.18  <2e-16 ***
18: d_y3_d_x2    0.449      0.220    2.08    0.04 *  
19: d_y1_d_x1    0.438      0.310    1.43    0.15    
19: d_y2_d_x1    0.170      0.170    1.03    0.30    
19: d_y3_d_x1   -0.179      0.170   -1.06    0.29    
19: d_y1_d_x2   -0.370      0.250   -1.45    0.15    
19: d_y2_d_x2   -0.439      0.180   -2.45    0.01 ** 
19: d_y3_d_x2    0.389      0.170    2.26    0.02 *  
20: d_y1_d_x1    0.224      0.220    1.02    0.31    
20: d_y2_d_x1    0.004      0.020    0.22    0.82    
20: d_y3_d_x1   -0.015      0.040   -0.34    0.73    
20: d_y1_d_x2   -0.089      0.160   -0.57    0.57    
20: d_y2_d_x2   -0.001      0.010   -0.13    0.89    
20: d_y3_d_x2    0.006      0.030    0.23    0.82    
21: d_y1_d_x1    0.124      0.220    0.57    0.57    
21: d_y2_d_x1    0.289      0.250    1.16    0.25    
21: d_y3_d_x1   -0.273      0.240   -1.15    0.25    
21: d_y1_d_x2   -0.250      0.170   -1.45    0.15    
21: d_y2_d_x2   -0.597      0.340   -1.77    0.08 .  
21: d_y3_d_x2    0.491      0.260    1.93    0.05 *  
22: d_y1_d_x1    0.001      0.010    0.10    0.92    
22: d_y2_d_x1    0.001      0.000    0.24    0.81    
22: d_y3_d_x1   -0.006      0.020   -0.25    0.80    
22: d_y1_d_x2   -0.003      0.020   -0.12    0.90    
22: d_y2_d_x2   -0.004      0.010   -0.28    0.78    
22: d_y3_d_x2    0.022      0.070    0.32    0.75    
23: d_y1_d_x1    0.438      0.310    1.42    0.16    
23: d_y2_d_x1    0.143      0.160    0.89    0.37    
23: d_y3_d_x1   -0.159      0.160   -1.02    0.31    
23: d_y1_d_x2   -0.378      0.270   -1.40    0.16    
23: d_y2_d_x2   -0.079      0.200   -0.40    0.69    
23: d_y3_d_x2    0.124      0.150    0.84    0.40    
24: d_y1_d_x1    0.083      0.200    0.42    0.67    
24: d_y2_d_x1    0.210      0.180    1.15    0.25    
24: d_y3_d_x1   -0.223      0.190   -1.17    0.24    
24: d_y1_d_x2   -0.184      0.220   -0.85    0.39    
24: d_y2_d_x2   -0.503      0.310   -1.61    0.11    
24: d_y3_d_x2    0.447      0.200    2.20    0.03 *  
25: d_y1_d_x1    0.087      0.200    0.44    0.66    
25: d_y2_d_x1    0.217      0.190    1.15    0.25    
25: d_y3_d_x1   -0.229      0.200   -1.17    0.24    
25: d_y1_d_x2   -0.190      0.210   -0.89    0.37    
25: d_y2_d_x2   -0.514      0.320   -1.62    0.11    
25: d_y3_d_x2    0.452      0.210    2.16    0.03 *  
26: d_y1_d_x1    0.438      0.310    1.42    0.16    
26: d_y2_d_x1    0.137      0.160    0.86    0.39    
26: d_y3_d_x1   -0.154      0.150   -1.00    0.32    
26: d_y1_d_x2   -0.372      0.260   -1.43    0.15    
26: d_y2_d_x2   -0.074      0.190   -0.39    0.69    
26: d_y3_d_x2    0.119      0.150    0.81    0.42    
27: d_y1_d_x1    0.173      0.220    0.79    0.43    
27: d_y2_d_x1    0.354      0.300    1.18    0.24    
27: d_y3_d_x1   -0.309      0.280   -1.11    0.27    
27: d_y1_d_x2   -0.059      0.150   -0.39    0.70    
27: d_y2_d_x2   -0.361      0.200   -1.84    0.07 .  
27: d_y3_d_x2    0.363      0.160    2.34    0.02 *  
28: d_y1_d_x1    0.026      0.110    0.24    0.81    
28: d_y2_d_x1    0.064      0.080    0.85    0.40    
28: d_y3_d_x1   -0.106      0.130   -0.83    0.41    
28: d_y1_d_x2   -0.004      0.030   -0.15    0.88    
28: d_y2_d_x2   -0.026      0.060   -0.46    0.64    
28: d_y3_d_x2    0.070      0.130    0.53    0.60    
29: d_y1_d_x1    0.303      0.190    1.56    0.12    
29: d_y2_d_x1    0.394      0.280    1.41    0.16    
29: d_y3_d_x1   -0.324      0.300   -1.07    0.28    
29: d_y1_d_x2   -0.432      0.300   -1.45    0.15    
29: d_y2_d_x2   -0.480      0.190   -2.51    0.01 ** 
29: d_y3_d_x2    0.411      0.180    2.25    0.02 *  
30: d_y1_d_x1    0.212      0.210    1.00    0.32    
30: d_y2_d_x1    0.386      0.320    1.22    0.22    
30: d_y3_d_x1   -0.325      0.300   -1.08    0.28    
30: d_y1_d_x2   -0.081      0.170   -0.48    0.63    
30: d_y2_d_x2   -0.448      0.240   -1.87    0.06 .  
30: d_y3_d_x2    0.414      0.180    2.27    0.02 *  
31: d_y1_d_x1    0.253      0.200    1.26    0.21    
31: d_y2_d_x1    0.401      0.310    1.28    0.20    
31: d_y3_d_x1   -0.331      0.310   -1.07    0.28    
31: d_y1_d_x2   -0.109      0.180   -0.61    0.54    
31: d_y2_d_x2   -0.526      0.280   -1.86    0.06 .  
31: d_y3_d_x2    0.456      0.220    2.09    0.04 *  
32: d_y1_d_x1    0.357      0.210    1.69    0.09 .  
32: d_y2_d_x1    0.354      0.230    1.57    0.12    
32: d_y3_d_x1   -0.299      0.270   -1.09    0.27    
32: d_y1_d_x2   -0.454      0.360   -1.26    0.21    
32: d_y2_d_x2   -0.360      0.260   -1.38    0.17    
32: d_y3_d_x2    0.337      0.140    2.36    0.02 *  
33: d_y1_d_x1    0.152      0.220    0.69    0.49    
33: d_y2_d_x1    0.329      0.280    1.17    0.24    
33: d_y3_d_x1   -0.296      0.260   -1.13    0.26    
33: d_y1_d_x2   -0.048      0.140   -0.35    0.73    
33: d_y2_d_x2   -0.310      0.180   -1.75    0.08 .  
33: d_y3_d_x2    0.331      0.150    2.23    0.03 *  
34: d_y1_d_x1    0.411      0.260    1.56    0.12    
34: d_y2_d_x1    0.269      0.180    1.52    0.13    
34: d_y3_d_x1   -0.246      0.220   -1.12    0.26    
34: d_y1_d_x2   -0.287      0.180   -1.64    0.10 .  
34: d_y2_d_x2   -0.578      0.190   -2.98  <2e-16 ***
34: d_y3_d_x2    0.470      0.240    1.98    0.05 *  
35: d_y1_d_x1    0.190      0.220    0.87    0.38    
35: d_y2_d_x1    0.370      0.310    1.19    0.23    
35: d_y3_d_x1   -0.317      0.290   -1.10    0.27    
35: d_y1_d_x2   -0.068      0.160   -0.43    0.67    
35: d_y2_d_x2   -0.399      0.210   -1.86    0.06 .  
35: d_y3_d_x2    0.387      0.170    2.34    0.02 *  
36: d_y1_d_x1    0.344      0.200    1.68    0.09 .  
36: d_y2_d_x1    0.367      0.240    1.53    0.13    
36: d_y3_d_x1   -0.307      0.280   -1.08    0.28    
36: d_y1_d_x2   -0.191      0.170   -1.11    0.27    
36: d_y2_d_x2   -0.627      0.300   -2.06    0.04 *  
36: d_y3_d_x2    0.502      0.270    1.85    0.06 .  
37: d_y1_d_x1    0.435      0.310    1.42    0.16    
37: d_y2_d_x1    0.116      0.150    0.76    0.45    
37: d_y3_d_x1   -0.138      0.150   -0.95    0.34    
37: d_y1_d_x2   -0.413      0.320   -1.30    0.19    
37: d_y2_d_x2   -0.335      0.230   -1.48    0.14    
37: d_y3_d_x2    0.325      0.150    2.18    0.03 *  
38: d_y1_d_x1    0.369      0.220    1.68    0.09 .  
38: d_y2_d_x1    0.340      0.210    1.60    0.11    
38: d_y3_d_x1   -0.290      0.260   -1.10    0.27    
38: d_y1_d_x2   -0.455      0.370   -1.23    0.22    
38: d_y2_d_x2   -0.330      0.270   -1.21    0.23    
38: d_y3_d_x2    0.318      0.140    2.29    0.02 *  
39: d_y1_d_x1    0.163      0.220    0.74    0.46    
39: d_y2_d_x1    0.343      0.290    1.17    0.24    
39: d_y3_d_x1   -0.303      0.270   -1.12    0.26    
39: d_y1_d_x2   -0.302      0.140   -2.10    0.04 *  
39: d_y2_d_x2   -0.628      0.310   -2.05    0.04 *  
39: d_y3_d_x2    0.502      0.270    1.85    0.06 .  
40: d_y1_d_x1    0.431      0.300    1.42    0.16    
40: d_y2_d_x1    0.102      0.150    0.70    0.49    
40: d_y3_d_x1   -0.127      0.140   -0.91    0.36    
40: d_y1_d_x2   -0.337      0.210   -1.59    0.11    
40: d_y2_d_x2   -0.049      0.150   -0.33    0.74    
40: d_y3_d_x2    0.090      0.140    0.66    0.51    
41: d_y1_d_x1    0.438      0.310    1.42    0.16    
41: d_y2_d_x1    0.146      0.160    0.91    0.36    
41: d_y3_d_x1   -0.162      0.160   -1.02    0.31    
41: d_y1_d_x2   -0.381      0.270   -1.39    0.16    
41: d_y2_d_x2   -0.082      0.200   -0.41    0.68    
41: d_y3_d_x2    0.127      0.150    0.86    0.39    
42: d_y1_d_x1    0.394      0.240    1.62    0.11    
42: d_y2_d_x1    0.303      0.190    1.60    0.11    
42: d_y3_d_x1   -0.267      0.240   -1.11    0.27    
42: d_y1_d_x2   -0.454      0.380   -1.20    0.23    
42: d_y2_d_x2   -0.265      0.290   -0.92    0.36    
42: d_y3_d_x2    0.275      0.140    2.00    0.05 *  
43: d_y1_d_x1    0.319      0.200    1.63    0.10 .  
43: d_y2_d_x1    0.386      0.270    1.45    0.15    
43: d_y3_d_x1   -0.319      0.300   -1.08    0.28    
43: d_y1_d_x2   -0.440      0.320   -1.38    0.17    
43: d_y2_d_x2   -0.447      0.210   -2.12    0.03 *  
43: d_y3_d_x2    0.391      0.170    2.32    0.02 *  
44: d_y1_d_x1    0.097      0.210    0.47    0.64    
44: d_y2_d_x1    0.239      0.210    1.15    0.25    
44: d_y3_d_x1   -0.243      0.210   -1.17    0.24    
44: d_y1_d_x2   -0.025      0.100   -0.26    0.80    
44: d_y2_d_x2   -0.176      0.140   -1.25    0.21    
44: d_y3_d_x2    0.234      0.160    1.49    0.14    
45: d_y1_d_x1    0.403      0.280    1.46    0.14    
45: d_y2_d_x1    0.057      0.110    0.50    0.61    
45: d_y3_d_x1   -0.086      0.120   -0.73    0.46    
45: d_y1_d_x2   -0.451      0.370   -1.21    0.23    
45: d_y2_d_x2   -0.192      0.250   -0.78    0.43    
45: d_y3_d_x2    0.225      0.150    1.46    0.14    
46: d_y1_d_x1    0.102      0.210    0.49    0.62    
46: d_y2_d_x1    0.249      0.220    1.16    0.25    
46: d_y3_d_x1   -0.249      0.210   -1.17    0.24    
46: d_y1_d_x2   -0.216      0.200   -1.10    0.27    
46: d_y2_d_x2   -0.556      0.330   -1.67    0.09 .  
46: d_y3_d_x2    0.473      0.230    2.04    0.04 *  
47: d_y1_d_x1    0.187      0.220    0.83    0.40    
47: d_y2_d_x1    0.002      0.010    0.20    0.85    
47: d_y3_d_x1   -0.010      0.030   -0.30    0.77    
47: d_y1_d_x2   -0.066      0.150   -0.45    0.65    
47: d_y2_d_x2    0.000      0.000   -0.12    0.90    
47: d_y3_d_x2    0.003      0.020    0.20    0.84    
48: d_y1_d_x1    0.366      0.250    1.49    0.14    
48: d_y2_d_x1    0.033      0.080    0.40    0.69    
48: d_y3_d_x1   -0.059      0.100   -0.60    0.55    
48: d_y1_d_x2   -0.218      0.140   -1.53    0.13    
48: d_y2_d_x2   -0.010      0.050   -0.21    0.83    
48: d_y3_d_x2    0.033      0.080    0.39    0.70    
49: d_y1_d_x1    0.186      0.220    0.85    0.40    
49: d_y2_d_x1    0.367      0.310    1.19    0.23    
49: d_y3_d_x1   -0.315      0.290   -1.10    0.27    
49: d_y1_d_x2   -0.066      0.160   -0.42    0.68    
49: d_y2_d_x2   -0.390      0.210   -1.86    0.06 .  
49: d_y3_d_x2    0.381      0.160    2.34    0.02 *  
50: d_y1_d_x1    0.042      0.140    0.29    0.77    
50: d_y2_d_x1    0.108      0.110    1.01    0.31    
50: d_y3_d_x1   -0.147      0.150   -1.01    0.31    
50: d_y1_d_x2   -0.106      0.220   -0.47    0.64    
50: d_y2_d_x2   -0.318      0.220   -1.47    0.14    
50: d_y3_d_x2    0.340      0.140    2.45    0.01 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> # now with explicitly specifying dummy variables
> margEffUncD <- margEff( estResultBFGS, calcVCov = TRUE, returnJacobian = TRUE,
+    dummyVars = c( "x1" ) )
> all.equal( margEffUncD, margEffUnc )
[1] TRUE
> # now with seemingly no dummy variables
> margEffUncD0 <- margEff( estResultBFGS, calcVCov = TRUE, returnJacobian = TRUE,
+    dummyVars = NULL )
> print( summary( margEffUncD0 ), digits = c( 3, 3, 2, 2, 2 ) )
              Estimate Std. error z value Pr(> z)    
1: d_y1_d_x1     0.449      0.350    1.27    0.20    
1: d_y2_d_x1     0.294      0.130    2.24    0.03 *  
1: d_y3_d_x1    -0.262      0.180   -1.46    0.15    
1: d_y1_d_x2    -0.442      0.320   -1.36    0.17    
1: d_y2_d_x2    -0.439      0.220   -2.03    0.04 *  
1: d_y3_d_x2     0.386      0.170    2.34    0.02 *  
2: d_y1_d_x1     0.394      0.310    1.26    0.21    
2: d_y2_d_x1     0.388      0.230    1.68    0.09 .  
2: d_y3_d_x1    -0.318      0.270   -1.16    0.25    
2: d_y1_d_x2    -0.388      0.210   -1.88    0.06 .  
2: d_y2_d_x2    -0.579      0.190   -3.12  <2e-16 ***
2: d_y3_d_x2     0.469      0.240    1.98    0.05 *  
3: d_y1_d_x1     0.101      0.190    0.53    0.60    
3: d_y2_d_x1     0.336      0.250    1.36    0.17    
3: d_y3_d_x1    -0.301      0.230   -1.30    0.19    
3: d_y1_d_x2    -0.099      0.180   -0.56    0.58    
3: d_y2_d_x2    -0.501      0.270   -1.86    0.06 .  
3: d_y3_d_x2     0.443      0.210    2.15    0.03 *  
4: d_y1_d_x1     0.459      0.350    1.33    0.19    
4: d_y2_d_x1     0.126      0.200    0.65    0.52    
4: d_y3_d_x1    -0.151      0.210   -0.70    0.48    
4: d_y1_d_x2    -0.452      0.370   -1.21    0.23    
4: d_y2_d_x2    -0.189      0.240   -0.77    0.44    
4: d_y3_d_x2     0.222      0.150    1.44    0.15    
5: d_y1_d_x1     0.069      0.170    0.40    0.69    
5: d_y2_d_x1     0.265      0.170    1.55    0.12    
5: d_y3_d_x1    -0.261      0.170   -1.55    0.12    
5: d_y1_d_x2    -0.067      0.160   -0.42    0.67    
5: d_y2_d_x2    -0.396      0.210   -1.86    0.06 .  
5: d_y3_d_x2     0.385      0.160    2.34    0.02 *  
6: d_y1_d_x1     0.463      0.370    1.26    0.21    
6: d_y2_d_x1     0.086      0.160    0.52    0.60    
6: d_y3_d_x1    -0.117      0.190   -0.63    0.53    
6: d_y1_d_x2    -0.455      0.370   -1.23    0.22    
6: d_y2_d_x2    -0.128      0.220   -0.58    0.56    
6: d_y3_d_x2     0.172      0.160    1.08    0.28    
7: d_y1_d_x1     0.001      0.010    0.11    0.91    
7: d_y2_d_x1     0.004      0.010    0.32    0.75    
7: d_y3_d_x1    -0.019      0.050   -0.37    0.71    
7: d_y1_d_x2    -0.001      0.010   -0.11    0.91    
7: d_y2_d_x2    -0.006      0.020   -0.30    0.76    
7: d_y3_d_x2     0.028      0.080    0.35    0.73    
8: d_y1_d_x1     0.459      0.350    1.29    0.20    
8: d_y2_d_x1     0.164      0.160    1.02    0.31    
8: d_y3_d_x1    -0.177      0.100   -1.70    0.09 .  
8: d_y1_d_x2    -0.452      0.380   -1.20    0.23    
8: d_y2_d_x2    -0.246      0.290   -0.85    0.40    
8: d_y3_d_x2     0.261      0.140    1.88    0.06 .  
9: d_y1_d_x1     0.428      0.340    1.28    0.20    
9: d_y2_d_x1     0.342      0.160    2.15    0.03 *  
9: d_y3_d_x1    -0.291      0.220   -1.30    0.19    
9: d_y1_d_x2    -0.422      0.270   -1.54    0.12    
9: d_y2_d_x2    -0.511      0.180   -2.89  <2e-16 ***
9: d_y3_d_x2     0.429      0.200    2.17    0.03 *  
10: d_y1_d_x1    0.444      0.350    1.27    0.20    
10: d_y2_d_x1    0.308      0.140    2.28    0.02 *  
10: d_y3_d_x1   -0.270      0.190   -1.41    0.16    
10: d_y1_d_x2   -0.437      0.310   -1.41    0.16    
10: d_y2_d_x2   -0.460      0.200   -2.27    0.02 *  
10: d_y3_d_x2    0.399      0.170    2.30    0.02 *  
11: d_y1_d_x1    0.208      0.170    1.20    0.23    
11: d_y2_d_x1    0.421      0.350    1.19    0.23    
11: d_y3_d_x1   -0.341      0.340   -1.00    0.32    
11: d_y1_d_x2   -0.205      0.170   -1.22    0.22    
11: d_y2_d_x2   -0.629      0.290   -2.14    0.03 *  
11: d_y3_d_x2    0.502      0.270    1.85    0.06 .  
12: d_y1_d_x1    0.035      0.120    0.28    0.78    
12: d_y2_d_x1    0.159      0.090    1.73    0.08 .  
12: d_y3_d_x1   -0.190      0.100   -1.82    0.07 .  
12: d_y1_d_x2   -0.035      0.120   -0.30    0.77    
12: d_y2_d_x2   -0.237      0.160   -1.53    0.13    
12: d_y3_d_x2    0.281      0.150    1.88    0.06 .  
13: d_y1_d_x1    0.054      0.150    0.35    0.73    
13: d_y2_d_x1    0.222      0.130    1.68    0.09 .  
13: d_y3_d_x1   -0.234      0.140   -1.71    0.09 .  
13: d_y1_d_x2   -0.053      0.140   -0.36    0.72    
13: d_y2_d_x2   -0.332      0.180   -1.79    0.07 .  
13: d_y3_d_x2    0.345      0.150    2.29    0.02 *  
14: d_y1_d_x1    0.008      0.050    0.17    0.87    
14: d_y2_d_x1    0.037      0.050    0.72    0.47    
14: d_y3_d_x1   -0.076      0.090   -0.80    0.42    
14: d_y1_d_x2   -0.008      0.040   -0.17    0.86    
14: d_y2_d_x2   -0.055      0.090   -0.63    0.53    
14: d_y3_d_x2    0.113      0.160    0.72    0.47    
15: d_y1_d_x1    0.098      0.270    0.37    0.71    
15: d_y2_d_x1    0.195      0.240    0.81    0.42    
15: d_y3_d_x1   -0.219      0.260   -0.84    0.40    
15: d_y1_d_x2   -0.097      0.220   -0.44    0.66    
15: d_y2_d_x2   -0.292      0.200   -1.43    0.15    
15: d_y3_d_x2    0.322      0.140    2.35    0.02 *  
16: d_y1_d_x1    0.186      0.180    1.01    0.31    
16: d_y2_d_x1    0.417      0.350    1.20    0.23    
16: d_y3_d_x1   -0.340      0.330   -1.03    0.30    
16: d_y1_d_x2   -0.183      0.170   -1.05    0.29    
16: d_y2_d_x2   -0.624      0.310   -2.02    0.04 *  
16: d_y3_d_x2    0.501      0.270    1.86    0.06 .  
17: d_y1_d_x1    0.229      0.160    1.41    0.16    
17: d_y2_d_x1    0.419      0.350    1.19    0.23    
17: d_y3_d_x1   -0.338      0.350   -0.97    0.33    
17: d_y1_d_x2   -0.226      0.170   -1.37    0.17    
17: d_y2_d_x2   -0.626      0.270   -2.30    0.02 *  
17: d_y3_d_x2    0.499      0.270    1.86    0.06 .  
18: d_y1_d_x1    0.414      0.320    1.27    0.20    
18: d_y2_d_x1    0.365      0.190    1.93    0.05 *  
18: d_y3_d_x1   -0.304      0.250   -1.23    0.22    
18: d_y1_d_x2   -0.407      0.240   -1.68    0.09 .  
18: d_y2_d_x2   -0.546      0.170   -3.18  <2e-16 ***
18: d_y3_d_x2    0.449      0.220    2.08    0.04 *  
19: d_y1_d_x1    0.376      0.190    1.94    0.05 *  
19: d_y2_d_x1    0.294      0.270    1.10    0.27    
19: d_y3_d_x1   -0.264      0.310   -0.86    0.39    
19: d_y1_d_x2   -0.370      0.250   -1.45    0.15    
19: d_y2_d_x2   -0.439      0.180   -2.45    0.01 ** 
19: d_y3_d_x2    0.389      0.170    2.26    0.02 *  
20: d_y1_d_x1    0.091      0.180    0.51    0.61    
20: d_y2_d_x1    0.000      0.000    0.14    0.89    
20: d_y3_d_x1   -0.004      0.020   -0.23    0.82    
20: d_y1_d_x2   -0.089      0.160   -0.57    0.57    
20: d_y2_d_x2   -0.001      0.010   -0.13    0.89    
20: d_y3_d_x2    0.006      0.030    0.23    0.82    
21: d_y1_d_x1    0.254      0.310    0.82    0.41    
21: d_y2_d_x1    0.399      0.390    1.01    0.31    
21: d_y3_d_x1   -0.333      0.350   -0.96    0.34    
21: d_y1_d_x2   -0.250      0.170   -1.45    0.15    
21: d_y2_d_x2   -0.597      0.340   -1.77    0.08 .  
21: d_y3_d_x2    0.491      0.260    1.93    0.05 *  
22: d_y1_d_x1    0.003      0.030    0.12    0.91    
22: d_y2_d_x1    0.003      0.010    0.27    0.79    
22: d_y3_d_x1   -0.015      0.050   -0.29    0.77    
22: d_y1_d_x2   -0.003      0.020   -0.12    0.90    
22: d_y2_d_x2   -0.004      0.010   -0.28    0.78    
22: d_y3_d_x2    0.022      0.070    0.32    0.75    
23: d_y1_d_x1    0.384      0.230    1.65    0.10 .  
23: d_y2_d_x1    0.053      0.120    0.44    0.66    
23: d_y3_d_x1   -0.084      0.090   -0.91    0.36    
23: d_y1_d_x2   -0.378      0.270   -1.40    0.16    
23: d_y2_d_x2   -0.079      0.200   -0.40    0.69    
23: d_y3_d_x2    0.124      0.150    0.84    0.40    
24: d_y1_d_x1    0.187      0.310    0.60    0.55    
24: d_y2_d_x1    0.337      0.370    0.91    0.36    
24: d_y3_d_x1   -0.303      0.330   -0.92    0.36    
24: d_y1_d_x2   -0.184      0.220   -0.85    0.39    
24: d_y2_d_x2   -0.503      0.310   -1.61    0.11    
24: d_y3_d_x2    0.447      0.200    2.20    0.03 *  
25: d_y1_d_x1    0.193      0.310    0.62    0.54    
25: d_y2_d_x1    0.344      0.370    0.92    0.36    
25: d_y3_d_x1   -0.307      0.330   -0.92    0.36    
25: d_y1_d_x2   -0.190      0.210   -0.89    0.37    
25: d_y2_d_x2   -0.514      0.320   -1.62    0.11    
25: d_y3_d_x2    0.452      0.210    2.16    0.03 *  
26: d_y1_d_x1    0.379      0.230    1.68    0.09 .  
26: d_y2_d_x1    0.050      0.120    0.43    0.67    
26: d_y3_d_x1   -0.080      0.090   -0.88    0.38    
26: d_y1_d_x2   -0.372      0.260   -1.43    0.15    
26: d_y2_d_x2   -0.074      0.190   -0.39    0.69    
26: d_y3_d_x2    0.119      0.150    0.81    0.42    
27: d_y1_d_x1    0.060      0.160    0.37    0.71    
27: d_y2_d_x1    0.241      0.150    1.63    0.10 .  
27: d_y3_d_x1   -0.246      0.150   -1.64    0.10 .  
27: d_y1_d_x2   -0.059      0.150   -0.39    0.70    
27: d_y2_d_x2   -0.361      0.200   -1.84    0.07 .  
27: d_y3_d_x2    0.363      0.160    2.34    0.02 *  
28: d_y1_d_x1    0.004      0.030    0.14    0.89    
28: d_y2_d_x1    0.017      0.030    0.51    0.61    
28: d_y3_d_x1   -0.048      0.080   -0.58    0.56    
28: d_y1_d_x2   -0.004      0.030   -0.15    0.88    
28: d_y2_d_x2   -0.026      0.060   -0.46    0.64    
28: d_y3_d_x2    0.070      0.130    0.53    0.60    
29: d_y1_d_x1    0.439      0.340    1.27    0.20    
29: d_y2_d_x1    0.321      0.140    2.27    0.02 *  
29: d_y3_d_x1   -0.278      0.200   -1.37    0.17    
29: d_y1_d_x2   -0.432      0.300   -1.45    0.15    
29: d_y2_d_x2   -0.480      0.190   -2.51    0.01 ** 
29: d_y3_d_x2    0.411      0.180    2.25    0.02 *  
30: d_y1_d_x1    0.083      0.180    0.45    0.65    
30: d_y2_d_x1    0.300      0.210    1.45    0.15    
30: d_y3_d_x1   -0.281      0.200   -1.42    0.16    
30: d_y1_d_x2   -0.081      0.170   -0.48    0.63    
30: d_y2_d_x2   -0.448      0.240   -1.87    0.06 .  
30: d_y3_d_x2    0.414      0.180    2.27    0.02 *  
31: d_y1_d_x1    0.111      0.200    0.57    0.57    
31: d_y2_d_x1    0.352      0.270    1.32    0.19    
31: d_y3_d_x1   -0.309      0.250   -1.25    0.21    
31: d_y1_d_x2   -0.109      0.180   -0.61    0.54    
31: d_y2_d_x2   -0.526      0.280   -1.86    0.06 .  
31: d_y3_d_x2    0.456      0.220    2.09    0.04 *  
32: d_y1_d_x1    0.461      0.360    1.26    0.21    
32: d_y2_d_x1    0.241      0.140    1.74    0.08 .  
32: d_y3_d_x1   -0.229      0.140   -1.63    0.10 .  
32: d_y1_d_x2   -0.454      0.360   -1.26    0.21    
32: d_y2_d_x2   -0.360      0.260   -1.38    0.17    
32: d_y3_d_x2    0.337      0.140    2.36    0.02 *  
33: d_y1_d_x1    0.049      0.150    0.33    0.74    
33: d_y2_d_x1    0.207      0.120    1.71    0.09 .  
33: d_y3_d_x1   -0.224      0.130   -1.76    0.08 .  
33: d_y1_d_x2   -0.048      0.140   -0.35    0.73    
33: d_y2_d_x2   -0.310      0.180   -1.75    0.08 .  
33: d_y3_d_x2    0.331      0.150    2.23    0.03 *  
34: d_y1_d_x1    0.292      0.140    2.08    0.04 *  
34: d_y2_d_x1    0.387      0.320    1.19    0.23    
34: d_y3_d_x1   -0.319      0.350   -0.92    0.36    
34: d_y1_d_x2   -0.287      0.180   -1.64    0.10 .  
34: d_y2_d_x2   -0.578      0.190   -2.98  <2e-16 ***
34: d_y3_d_x2    0.470      0.240    1.98    0.05 *  
35: d_y1_d_x1    0.069      0.170    0.40    0.69    
35: d_y2_d_x1    0.267      0.170    1.55    0.12    
35: d_y3_d_x1   -0.262      0.170   -1.54    0.12    
35: d_y1_d_x2   -0.068      0.160   -0.43    0.67    
35: d_y2_d_x2   -0.399      0.210   -1.86    0.06 .  
35: d_y3_d_x2    0.387      0.170    2.34    0.02 *  
36: d_y1_d_x1    0.194      0.180    1.08    0.28    
36: d_y2_d_x1    0.419      0.350    1.20    0.23    
36: d_y3_d_x1   -0.341      0.340   -1.02    0.31    
36: d_y1_d_x2   -0.191      0.170   -1.11    0.27    
36: d_y2_d_x2   -0.627      0.300   -2.06    0.04 *  
36: d_y3_d_x2    0.502      0.270    1.85    0.06 .  
37: d_y1_d_x1    0.420      0.260    1.61    0.11    
37: d_y2_d_x1    0.224      0.240    0.93    0.35    
37: d_y3_d_x1   -0.220      0.270   -0.81    0.42    
37: d_y1_d_x2   -0.413      0.320   -1.30    0.19    
37: d_y2_d_x2   -0.335      0.230   -1.48    0.14    
37: d_y3_d_x2    0.325      0.150    2.18    0.03 *  
38: d_y1_d_x1    0.463      0.370    1.27    0.21    
38: d_y2_d_x1    0.221      0.150    1.52    0.13    
38: d_y3_d_x1   -0.216      0.130   -1.68    0.09 .  
38: d_y1_d_x2   -0.455      0.370   -1.23    0.22    
38: d_y2_d_x2   -0.330      0.270   -1.21    0.23    
38: d_y3_d_x2    0.318      0.140    2.29    0.02 *  
39: d_y1_d_x1    0.307      0.300    1.02    0.31    
39: d_y2_d_x1    0.420      0.370    1.15    0.25    
39: d_y3_d_x1   -0.341      0.340   -1.01    0.31    
39: d_y1_d_x2   -0.302      0.140   -2.10    0.04 *  
39: d_y2_d_x2   -0.628      0.310   -2.05    0.04 *  
39: d_y3_d_x2    0.502      0.270    1.85    0.06 .  
40: d_y1_d_x1    0.343      0.190    1.85    0.06 .  
40: d_y2_d_x1    0.033      0.090    0.36    0.72    
40: d_y3_d_x1   -0.061      0.090   -0.71    0.48    
40: d_y1_d_x2   -0.337      0.210   -1.59    0.11    
40: d_y2_d_x2   -0.049      0.150   -0.33    0.74    
40: d_y3_d_x2    0.090      0.140    0.66    0.51    
41: d_y1_d_x1    0.387      0.240    1.64    0.10 .  
41: d_y2_d_x1    0.055      0.120    0.45    0.65    
41: d_y3_d_x1   -0.086      0.090   -0.93    0.35    
41: d_y1_d_x2   -0.381      0.270   -1.39    0.16    
41: d_y2_d_x2   -0.082      0.200   -0.41    0.68    
41: d_y3_d_x2    0.127      0.150    0.86    0.39    
42: d_y1_d_x1    0.461      0.360    1.28    0.20    
42: d_y2_d_x1    0.178      0.160    1.12    0.26    
42: d_y3_d_x1   -0.186      0.110   -1.72    0.09 .  
42: d_y1_d_x2   -0.454      0.380   -1.20    0.23    
42: d_y2_d_x2   -0.265      0.290   -0.92    0.36    
42: d_y3_d_x2    0.275      0.140    2.00    0.05 *  
43: d_y1_d_x1    0.447      0.350    1.27    0.20    
43: d_y2_d_x1    0.299      0.130    2.26    0.02 *  
43: d_y3_d_x1   -0.265      0.180   -1.44    0.15    
43: d_y1_d_x2   -0.440      0.320   -1.38    0.17    
43: d_y2_d_x2   -0.447      0.210   -2.12    0.03 *  
43: d_y3_d_x2    0.391      0.170    2.32    0.02 *  
44: d_y1_d_x1    0.025      0.100    0.25    0.81    
44: d_y2_d_x1    0.118      0.080    1.52    0.13    
44: d_y3_d_x1   -0.158      0.100   -1.63    0.10 .  
44: d_y1_d_x2   -0.025      0.100   -0.26    0.80    
44: d_y2_d_x2   -0.176      0.140   -1.25    0.21    
44: d_y3_d_x2    0.234      0.160    1.49    0.14    
45: d_y1_d_x1    0.458      0.340    1.33    0.18    
45: d_y2_d_x1    0.129      0.200    0.65    0.51    
45: d_y3_d_x1   -0.153      0.220   -0.71    0.48    
45: d_y1_d_x2   -0.451      0.370   -1.21    0.23    
45: d_y2_d_x2   -0.192      0.250   -0.78    0.43    
45: d_y3_d_x2    0.225      0.150    1.46    0.14    
46: d_y1_d_x1    0.220      0.310    0.70    0.48    
46: d_y2_d_x1    0.372      0.390    0.96    0.34    
46: d_y3_d_x1   -0.321      0.340   -0.94    0.35    
46: d_y1_d_x2   -0.216      0.200   -1.10    0.27    
46: d_y2_d_x2   -0.556      0.330   -1.67    0.09 .  
46: d_y3_d_x2    0.473      0.230    2.04    0.04 *  
47: d_y1_d_x1    0.068      0.160    0.42    0.68    
47: d_y2_d_x1    0.000      0.000    0.12    0.90    
47: d_y3_d_x1   -0.002      0.010   -0.21    0.84    
47: d_y1_d_x2   -0.066      0.150   -0.45    0.65    
47: d_y2_d_x2    0.000      0.000   -0.12    0.90    
47: d_y3_d_x2    0.003      0.020    0.20    0.84    
48: d_y1_d_x1    0.222      0.160    1.35    0.18    
48: d_y2_d_x1    0.007      0.030    0.22    0.82    
48: d_y3_d_x1   -0.022      0.050   -0.41    0.68    
48: d_y1_d_x2   -0.218      0.140   -1.53    0.13    
48: d_y2_d_x2   -0.010      0.050   -0.21    0.83    
48: d_y3_d_x2    0.033      0.080    0.39    0.70    
49: d_y1_d_x1    0.067      0.170    0.39    0.69    
49: d_y2_d_x1    0.261      0.170    1.57    0.12    
49: d_y3_d_x1   -0.258      0.160   -1.57    0.12    
49: d_y1_d_x2   -0.066      0.160   -0.42    0.68    
49: d_y2_d_x2   -0.390      0.210   -1.86    0.06 .  
49: d_y3_d_x2    0.381      0.160    2.34    0.02 *  
50: d_y1_d_x1    0.108      0.280    0.39    0.70    
50: d_y2_d_x1    0.213      0.260    0.83    0.41    
50: d_y3_d_x1   -0.230      0.270   -0.85    0.39    
50: d_y1_d_x2   -0.106      0.220   -0.47    0.64    
50: d_y2_d_x2   -0.318      0.220   -1.47    0.14    
50: d_y3_d_x2    0.340      0.140    2.45    0.01 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> # now with seemingly only dummy variables
> margEffUncDA <- margEff( estResultBFGS, calcVCov = TRUE, returnJacobian = TRUE,
+    dummyVars = c( "x1", "x2" ) )
> print( summary( margEffUncDA ), digits = 3 )
               Estimate Std. error z value Pr(> z)   
1: d_y1_d_x1   0.322949   0.196918    1.64  0.1010   
1: d_y2_d_x1   0.383668   0.261500    1.47  0.1423   
1: d_y3_d_x1  -0.316956   0.294430   -1.08  0.2817   
1: d_y1_d_x2  -0.431806   0.320331   -1.35  0.1777   
1: d_y2_d_x2  -0.305133   0.218871   -1.39  0.1633   
1: d_y3_d_x2   0.294069   0.121523    2.42  0.0155 * 
2: d_y1_d_x1   0.242945   0.203766    1.19  0.2332   
2: d_y2_d_x1   0.399380   0.315449    1.27  0.2055   
2: d_y3_d_x1  -0.330145   0.307940   -1.07  0.2837   
2: d_y1_d_x2  -0.431806   0.320331   -1.35  0.1777   
2: d_y2_d_x2  -0.305133   0.218871   -1.39  0.1633   
2: d_y3_d_x2   0.294069   0.121523    2.42  0.0155 * 
3: d_y1_d_x1   0.238860   0.204898    1.17  0.2437   
3: d_y2_d_x1   0.398279   0.316361    1.26  0.2081   
3: d_y3_d_x1  -0.329784   0.307304   -1.07  0.2832   
3: d_y1_d_x2  -0.244622   0.149053   -1.64  0.1008   
3: d_y2_d_x2  -0.561732   0.187199   -3.00  0.0027 **
3: d_y3_d_x2   0.464297   0.217214    2.14  0.0326 * 
4: d_y1_d_x1   0.401084   0.273718    1.47  0.1428   
4: d_y2_d_x1   0.055784   0.112019    0.50  0.6185   
4: d_y3_d_x1  -0.084206   0.116174   -0.72  0.4686   
4: d_y1_d_x2  -0.244622   0.149053   -1.64  0.1008   
4: d_y2_d_x2  -0.561732   0.187199   -3.00  0.0027 **
4: d_y3_d_x2   0.464297   0.217214    2.14  0.0326 * 
5: d_y1_d_x1   0.188323   0.217878    0.86  0.3874   
5: d_y2_d_x1   0.369108   0.309262    1.19  0.2327   
5: d_y3_d_x1  -0.316570   0.288564   -1.10  0.2726   
5: d_y1_d_x2  -0.244622   0.149053   -1.64  0.1008   
5: d_y2_d_x2  -0.561732   0.187199   -3.00  0.0027 **
5: d_y3_d_x2   0.464297   0.217214    2.14  0.0326 * 
6: d_y1_d_x1   0.370209   0.247995    1.49  0.1355   
6: d_y2_d_x1   0.034883   0.085815    0.41  0.6844   
6: d_y3_d_x1  -0.061413   0.100444   -0.61  0.5409   
6: d_y1_d_x2  -0.244622   0.149053   -1.64  0.1008   
6: d_y2_d_x2  -0.561732   0.187199   -3.00  0.0027 **
6: d_y3_d_x2   0.464297   0.217214    2.14  0.0326 * 
7: d_y1_d_x1   0.010321   0.057829    0.18  0.8584   
7: d_y2_d_x1   0.022046   0.038926    0.57  0.5712   
7: d_y3_d_x1  -0.053124   0.094541   -0.56  0.5742   
7: d_y1_d_x2  -0.244622   0.149053   -1.64  0.1008   
7: d_y2_d_x2  -0.561732   0.187199   -3.00  0.0027 **
7: d_y3_d_x2   0.464297   0.217214    2.14  0.0326 * 
8: d_y1_d_x1   0.400710   0.251339    1.59  0.1109   
8: d_y2_d_x1   0.290794   0.183965    1.58  0.1139   
8: d_y3_d_x1  -0.259619   0.232712   -1.12  0.2646   
8: d_y1_d_x2  -0.431806   0.320331   -1.35  0.1777   
8: d_y2_d_x2  -0.305133   0.218871   -1.39  0.1633   
8: d_y3_d_x2   0.294069   0.121523    2.42  0.0155 * 
9: d_y1_d_x1   0.286665   0.194810    1.47  0.1412   
9: d_y2_d_x1   0.399628   0.293484    1.36  0.1733   
9: d_y3_d_x1  -0.327737   0.306637   -1.07  0.2852   
9: d_y1_d_x2  -0.431806   0.320331   -1.35  0.1777   
9: d_y2_d_x2  -0.305133   0.218871   -1.39  0.1633   
9: d_y3_d_x2   0.294069   0.121523    2.42  0.0155 * 
10: d_y1_d_x1  0.312655   0.195065    1.60  0.1090   
10: d_y2_d_x1  0.389724   0.271536    1.44  0.1512   
10: d_y3_d_x1 -0.320854   0.298913   -1.07  0.2831   
10: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
10: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
10: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
11: d_y1_d_x1  0.355981   0.210988    1.69  0.0916 . 
11: d_y2_d_x1  0.355468   0.226547    1.57  0.1166   
11: d_y3_d_x1 -0.299468   0.274509   -1.09  0.2753   
11: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
11: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
11: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
12: d_y1_d_x1  0.121966   0.216721    0.56  0.5736   
12: d_y2_d_x1  0.284903   0.245511    1.16  0.2459   
12: d_y3_d_x1 -0.270662   0.234525   -1.15  0.2485   
12: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
12: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
12: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
13: d_y1_d_x1  0.160796   0.221215    0.73  0.4673   
13: d_y2_d_x1  0.340730   0.290280    1.17  0.2405   
13: d_y3_d_x1 -0.301945   0.269965   -1.12  0.2634   
13: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
13: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
13: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
14: d_y1_d_x1  0.042505   0.143874    0.30  0.7677   
14: d_y2_d_x1  0.110322   0.108439    1.02  0.3090   
14: d_y3_d_x1 -0.148797   0.146497   -1.02  0.3098   
14: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
14: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
14: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
15: d_y1_d_x1  0.037444   0.134118    0.28  0.7801   
15: d_y2_d_x1  0.096639   0.098930    0.98  0.3286   
15: d_y3_d_x1 -0.136761   0.141016   -0.97  0.3321   
15: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
15: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
15: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
16: d_y1_d_x1  0.336446   0.201107    1.67  0.0943 . 
16: d_y2_d_x1  0.373815   0.247544    1.51  0.1310   
16: d_y3_d_x1 -0.310771   0.287320   -1.08  0.2794   
16: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
16: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
16: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
17: d_y1_d_x1  0.372387   0.222919    1.67  0.0948 . 
17: d_y2_d_x1  0.335916   0.209250    1.61  0.1084   
17: d_y3_d_x1 -0.287500   0.261345   -1.10  0.2713   
17: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
17: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
17: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
18: d_y1_d_x1  0.266340   0.197978    1.35  0.1785   
18: d_y2_d_x1  0.402133   0.306328    1.31  0.1893   
18: d_y3_d_x1 -0.330275   0.309080   -1.07  0.2853   
18: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
18: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
18: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
19: d_y1_d_x1  0.437643   0.305707    1.43  0.1523   
19: d_y2_d_x1  0.169636   0.165274    1.03  0.3047   
19: d_y3_d_x1 -0.178946   0.168453   -1.06  0.2881   
19: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
19: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
19: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
20: d_y1_d_x1  0.224159   0.220319    1.02  0.3090   
20: d_y2_d_x1  0.004204   0.018901    0.22  0.8240   
20: d_y3_d_x1 -0.014954   0.044035   -0.34  0.7342   
20: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
20: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
20: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
21: d_y1_d_x1  0.124369   0.217405    0.57  0.5673   
21: d_y2_d_x1  0.288912   0.248854    1.16  0.2457   
21: d_y3_d_x1 -0.273009   0.236991   -1.15  0.2493   
21: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
21: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
21: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
22: d_y1_d_x1  0.000746   0.007298    0.10  0.9186   
22: d_y2_d_x1  0.000700   0.002947    0.24  0.8123   
22: d_y3_d_x1 -0.005794   0.022938   -0.25  0.8006   
22: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
22: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
22: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
23: d_y1_d_x1  0.438223   0.309067    1.42  0.1562   
23: d_y2_d_x1  0.142645   0.160488    0.89  0.3741   
23: d_y3_d_x1 -0.158984   0.156551   -1.02  0.3098   
23: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
23: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
23: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
24: d_y1_d_x1  0.083054   0.195529    0.42  0.6710   
24: d_y2_d_x1  0.209539   0.182922    1.15  0.2520   
24: d_y3_d_x1 -0.223403   0.191438   -1.17  0.2432   
24: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
24: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
24: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
25: d_y1_d_x1  0.086590   0.198371    0.44  0.6625   
25: d_y2_d_x1  0.217209   0.189148    1.15  0.2508   
25: d_y3_d_x1 -0.228509   0.195493   -1.17  0.2425   
25: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
25: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
25: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
26: d_y1_d_x1  0.437838   0.309147    1.42  0.1567   
26: d_y2_d_x1  0.136570   0.158987    0.86  0.3903   
26: d_y3_d_x1 -0.154341   0.153950   -1.00  0.3161   
26: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
26: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
26: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
27: d_y1_d_x1  0.172960   0.220257    0.79  0.4323   
27: d_y2_d_x1  0.354388   0.300008    1.18  0.2375   
27: d_y3_d_x1 -0.309112   0.278896   -1.11  0.2677   
27: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
27: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
27: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
28: d_y1_d_x1  0.025789   0.107376    0.24  0.8102   
28: d_y2_d_x1  0.064447   0.076172    0.85  0.3975   
28: d_y3_d_x1 -0.105597   0.127019   -0.83  0.4058   
28: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
28: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
28: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
29: d_y1_d_x1  0.302966   0.194286    1.56  0.1189   
29: d_y2_d_x1  0.394307   0.280347    1.41  0.1596   
29: d_y3_d_x1 -0.323907   0.302394   -1.07  0.2841   
29: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
29: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
29: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
30: d_y1_d_x1  0.211873   0.212413    1.00  0.3185   
30: d_y2_d_x1  0.386318   0.316927    1.22  0.2229   
30: d_y3_d_x1 -0.324795   0.299802   -1.08  0.2786   
30: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
30: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
30: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
31: d_y1_d_x1  0.252767   0.201153    1.26  0.2089   
31: d_y2_d_x1  0.401271   0.312409    1.28  0.1990   
31: d_y3_d_x1 -0.330599   0.308937   -1.07  0.2846   
31: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
31: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
31: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
32: d_y1_d_x1  0.357377   0.211873    1.69  0.0917 . 
32: d_y2_d_x1  0.353960   0.225046    1.57  0.1158   
32: d_y3_d_x1 -0.298544   0.273476   -1.09  0.2750   
32: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
32: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
32: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
33: d_y1_d_x1  0.151690   0.221287    0.69  0.4930   
33: d_y2_d_x1  0.329328   0.281624    1.17  0.2422   
33: d_y3_d_x1 -0.295806   0.262565   -1.13  0.2599   
33: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
33: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
33: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
34: d_y1_d_x1  0.410969   0.264072    1.56  0.1196   
34: d_y2_d_x1  0.269377   0.177386    1.52  0.1289   
34: d_y3_d_x1 -0.246106   0.219981   -1.12  0.2632   
34: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
34: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
34: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
35: d_y1_d_x1  0.189725   0.217606    0.87  0.3833   
35: d_y2_d_x1  0.370313   0.309938    1.19  0.2322   
35: d_y3_d_x1 -0.317167   0.289355   -1.10  0.2730   
35: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
35: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
35: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
36: d_y1_d_x1  0.343841   0.204302    1.68  0.0924 . 
36: d_y2_d_x1  0.367458   0.239646    1.53  0.1252   
36: d_y3_d_x1 -0.306836   0.282826   -1.08  0.2780   
36: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
36: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
36: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
37: d_y1_d_x1  0.434812   0.307197    1.42  0.1569   
37: d_y2_d_x1  0.115936   0.152335    0.76  0.4466   
37: d_y3_d_x1 -0.138075   0.145202   -0.95  0.3416   
37: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
37: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
37: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
38: d_y1_d_x1  0.369369   0.220473    1.68  0.0939 . 
38: d_y2_d_x1  0.339824   0.212352    1.60  0.1095   
38: d_y3_d_x1 -0.289893   0.263939   -1.10  0.2721   
38: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
38: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
38: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
39: d_y1_d_x1  0.162595   0.221132    0.74  0.4622   
39: d_y2_d_x1  0.342864   0.291853    1.17  0.2401   
39: d_y3_d_x1 -0.303079   0.271356   -1.12  0.2640   
39: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
39: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
39: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
40: d_y1_d_x1  0.431008   0.303667    1.42  0.1558   
40: d_y2_d_x1  0.102131   0.146266    0.70  0.4850   
40: d_y3_d_x1 -0.126696   0.139294   -0.91  0.3631   
40: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
40: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
40: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
41: d_y1_d_x1  0.438360   0.308880    1.42  0.1558   
41: d_y2_d_x1  0.146460   0.161340    0.91  0.3640   
41: d_y3_d_x1 -0.161870   0.158196   -1.02  0.3062   
41: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
41: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
41: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
42: d_y1_d_x1  0.393819   0.243519    1.62  0.1058   
42: d_y2_d_x1  0.303393   0.189282    1.60  0.1090   
42: d_y3_d_x1 -0.267470   0.240464   -1.11  0.2660   
42: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
42: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
42: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
43: d_y1_d_x1  0.318954   0.196067    1.63  0.1038   
43: d_y2_d_x1  0.386165   0.265468    1.45  0.1458   
43: d_y3_d_x1 -0.318551   0.296266   -1.08  0.2823   
43: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
43: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
43: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
44: d_y1_d_x1  0.097179   0.205671    0.47  0.6366   
44: d_y2_d_x1  0.239189   0.207254    1.15  0.2485   
44: d_y3_d_x1 -0.242745   0.207562   -1.17  0.2422   
44: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
44: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
44: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
45: d_y1_d_x1  0.402524   0.275082    1.46  0.1434   
45: d_y2_d_x1  0.057128   0.113412    0.50  0.6145   
45: d_y3_d_x1 -0.085567   0.117002   -0.73  0.4646   
45: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
45: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
45: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
46: d_y1_d_x1  0.102327   0.208618    0.49  0.6238   
46: d_y2_d_x1  0.249344   0.215718    1.16  0.2477   
46: d_y3_d_x1 -0.249136   0.213349   -1.17  0.2429   
46: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
46: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
46: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
47: d_y1_d_x1  0.186655   0.223900    0.83  0.4045   
47: d_y2_d_x1  0.002191   0.011218    0.20  0.8452   
47: d_y3_d_x1 -0.009700   0.032679   -0.30  0.7666   
47: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
47: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
47: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
48: d_y1_d_x1  0.366420   0.245350    1.49  0.1353   
48: d_y2_d_x1  0.033039   0.083009    0.40  0.6906   
48: d_y3_d_x1 -0.059215   0.098685   -0.60  0.5485   
48: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
48: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
48: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
49: d_y1_d_x1  0.185698   0.218364    0.85  0.3951   
49: d_y2_d_x1  0.366791   0.307921    1.19  0.2336   
49: d_y3_d_x1 -0.315417   0.287042   -1.10  0.2718   
49: d_y1_d_x2 -0.244622   0.149053   -1.64  0.1008   
49: d_y2_d_x2 -0.561732   0.187199   -3.00  0.0027 **
49: d_y3_d_x2  0.464297   0.217214    2.14  0.0326 * 
50: d_y1_d_x1  0.041727   0.142436    0.29  0.7696   
50: d_y2_d_x1  0.108233   0.106983    1.01  0.3117   
50: d_y3_d_x1 -0.146997   0.145662   -1.01  0.3129   
50: d_y1_d_x2 -0.431806   0.320331   -1.35  0.1777   
50: d_y2_d_x2 -0.305133   0.218871   -1.39  0.1633   
50: d_y3_d_x2  0.294069   0.121523    2.42  0.0155 * 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> # now with returned Jacobian but without variance covariance matrix
> margEffUncJac <- margEff( estResultBFGS, returnJacobian = TRUE )
> all.equal( attr( margEffUncJac, "jacobian" ), attr( margEffUnc, "jacobian" ) )
[1] TRUE
> # now including mean values of the marginal effects
> margEffUncM <- margEff( estResultBFGS, calcVCov = TRUE, returnJacobian = TRUE,
+    addMean = TRUE )
> all.equal( margEffUnc, margEffUncM[ -(nObs+1), ], check.attributes = FALSE )
[1] TRUE
> round( margEffUncM[ nObs:(nObs+1), ], 3 )
     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50       0.042     0.108    -0.147    -0.106    -0.318     0.340
mean     0.253     0.246    -0.226    -0.239    -0.338     0.314
> all.equal( attr( margEffUnc, "vcov" ), attr( margEffUncM, "vcov" )[ 1:nObs, , ] )
[1] TRUE
> round( attr( margEffUncM, "vcov" )[ nObs:(nObs+1), , ], 2 )
, , d_y1_d_x1

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50        0.02      0.00         0     -0.03      0.01         0
mean      0.02     -0.01         0      0.00      0.00         0

, , d_y2_d_x1

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50        0.00      0.01     -0.01      0.01     -0.02      0.00
mean     -0.01      0.03      0.01      0.00      0.00     -0.01

, , d_y3_d_x1

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50           0     -0.01      0.02         0      0.01     -0.02
mean         0      0.01      0.04         0      0.00      0.00

, , d_y1_d_x2

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50       -0.03      0.01         0      0.05     -0.02         0
mean      0.00      0.00         0      0.01      0.00         0

, , d_y2_d_x2

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50        0.01     -0.02      0.01     -0.02      0.05         0
mean      0.00      0.00      0.00      0.00      0.00         0

, , d_y3_d_x2

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50           0      0.00     -0.02         0         0      0.02
mean         0     -0.01      0.00         0         0      0.01

> round( drop( attr( margEffUncM, "vcov" )[ nObs+1, , ] ), 2 )
          d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
d_y1_d_x1      0.02     -0.01      0.00      0.00         0      0.00
d_y2_d_x1     -0.01      0.03      0.01      0.00         0     -0.01
d_y3_d_x1      0.00      0.01      0.04      0.00         0      0.00
d_y1_d_x2      0.00      0.00      0.00      0.01         0      0.00
d_y2_d_x2      0.00      0.00      0.00      0.00         0      0.00
d_y3_d_x2      0.00     -0.01      0.00      0.00         0      0.01
> all.equal( attr( margEffUnc, "jacobian" ), attr( margEffUncM, "jacobian" )[ 1:nObs, , ] )
[1] TRUE
> round( attr( margEffUncM, "jacobian" )[ nObs:(nObs+1), , ], 2 )
, , b_1_0

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50       -0.09         0         0      0.18         0         0
mean     -0.12         0         0      0.09         0         0

, , b_1_1

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50        0.01         0         0      0.00         0         0
mean      0.15         0         0      0.06         0         0

, , b_1_2

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50        0.09         0         0     -0.09         0         0
mean      0.05         0         0      0.16         0         0

, , b_2_0

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50           0     -0.17         0         0      0.37         0
mean         0      0.00         0         0      0.00         0

, , b_2_1

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50           0      0.03         0         0      0.00         0
mean         0      0.23         0         0      0.05         0

, , b_2_2

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50           0      0.17         0         0     -0.18         0
mean         0      0.09         0         0      0.08         0

, , b_3_0

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50           0         0     -0.18         0         0      0.30
mean         0         0      0.01         0         0     -0.01

, , b_3_1

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50           0         0      0.09         0         0      0.00
mean         0         0      0.26         0         0      0.04

, , b_3_2

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50           0         0      0.19         0         0     -0.04
mean         0         0      0.09         0         0      0.12

, , R_1_2

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50           0         0         0         0         0         0
mean         0         0         0         0         0         0

, , R_1_3

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50           0         0         0         0         0         0
mean         0         0         0         0         0         0

, , R_2_3

     d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
50           0         0         0         0         0         0
mean         0         0         0         0         0         0

> round( drop( attr( margEffUncM, "jacobian" )[ nObs+1, , ] ), 2 )
          b_1_0 b_1_1 b_1_2 b_2_0 b_2_1 b_2_2 b_3_0 b_3_1 b_3_2 R_1_2 R_1_3
d_y1_d_x1 -0.12  0.15  0.05     0  0.00  0.00  0.00  0.00  0.00     0     0
d_y2_d_x1  0.00  0.00  0.00     0  0.23  0.09  0.00  0.00  0.00     0     0
d_y3_d_x1  0.00  0.00  0.00     0  0.00  0.00  0.01  0.26  0.09     0     0
d_y1_d_x2  0.09  0.06  0.16     0  0.00  0.00  0.00  0.00  0.00     0     0
d_y2_d_x2  0.00  0.00  0.00     0  0.05  0.08  0.00  0.00  0.00     0     0
d_y3_d_x2  0.00  0.00  0.00     0  0.00  0.00 -0.01  0.04  0.12     0     0
          R_2_3
d_y1_d_x1     0
d_y2_d_x1     0
d_y3_d_x1     0
d_y1_d_x2     0
d_y2_d_x2     0
d_y3_d_x2     0
> all.equal( summary( margEffUnc )[ , ], 
+    summary( margEffUncM )[ 1:( 6 * nObs ), ], check.attributes = FALSE )
[1] TRUE
> printCoefmat( round(
+   summary( margEffUncM )[ -( 1:( 6 * ( nObs - 1 ) ) ), ], digits = 3 ),
+   digits = 3 )
                Estimate Std. error z value Pr(> z)    
50: d_y1_d_x1      0.042      0.142    0.29   0.770    
50: d_y2_d_x1      0.108      0.107    1.01   0.312    
50: d_y3_d_x1     -0.147      0.146   -1.01   0.313    
50: d_y1_d_x2     -0.106      0.224   -0.47   0.637    
50: d_y2_d_x2     -0.318      0.217   -1.47   0.142    
50: d_y3_d_x2      0.340      0.139    2.45   0.014 *  
mean: d_y1_d_x1    0.253      0.149    1.70   0.088 .  
mean: d_y2_d_x1    0.246      0.161    1.53   0.127    
mean: d_y3_d_x1   -0.226      0.193   -1.17   0.242    
mean: d_y1_d_x2   -0.239      0.072   -3.32   0.001 ***
mean: d_y2_d_x2   -0.338      0.045   -7.58  <2e-16 ***
mean: d_y3_d_x2    0.314      0.072    4.34  <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> # now at mean values of explanatory variables
> margEffUncMean <- margEff( estResultBFGS, calcVCov = TRUE, 
+    data = as.data.frame( t( colMeans( xMat ) ) ) )
> print( summary( margEffUncMean ), digits = c( 3, 3, 2, 2, 2 ) )
          Estimate Std. error z value Pr(> z)   
d_y1_d_x1    0.293      0.190    1.51    0.13   
d_y2_d_x1    0.398      0.290    1.38    0.17   
d_y3_d_x1   -0.326      0.310   -1.07    0.28   
d_y1_d_x2   -0.297      0.130   -2.36    0.02 * 
d_y2_d_x2   -0.619      0.250   -2.50    0.01 **
d_y3_d_x2    0.494      0.260    1.89    0.06 . 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> # now with argument 'atMean'
> margEffUncMeanA <- margEff( estResultBFGS, calcVCov = TRUE, atMean = TRUE )
> all.equal( margEffUncMeanA, margEffUncMean )
[1] TRUE
> 
> # conditional marginal effects
> # (assuming that all other dependent variables are as observed)
> margEffCondObs <- margEff( estResultBFGS, cond = TRUE, algorithm = GenzBretz() )
> round( margEffCondObs, 3 )
   d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1      0.323     0.343    -0.355    -0.460    -0.431     0.361
2      0.115     0.360    -0.362    -0.229    -0.534     0.498
3      0.238     0.331    -0.361    -0.090    -0.455     0.454
4      0.412     0.069    -0.054    -0.472    -0.212     0.175
5      0.185     0.308    -0.343    -0.060    -0.365     0.391
6      0.379     0.048    -0.034    -0.475    -0.155     0.121
7      0.010     0.021    -0.054    -0.001    -0.006     0.028
8      0.411     0.132    -0.403    -0.471    -0.134     0.378
9      0.147     0.358    -0.361    -0.264    -0.484     0.445
10     0.312     0.348    -0.361    -0.454    -0.447     0.380
11     0.206     0.320    -0.329    -0.080    -0.589     0.524
12     0.118     0.244    -0.288    -0.031    -0.223     0.282
13     0.147     0.316    -0.349    -0.039    -0.334     0.371
14     0.041     0.100    -0.153    -0.007    -0.053     0.113
15     0.036     0.088    -0.140    -0.092    -0.259     0.335
16     0.188     0.335    -0.342    -0.068    -0.587     0.522
17     0.383     0.292    -0.315    -0.213    -0.560     0.522
18     0.398     0.267    -0.405    -0.513    -0.370     0.606
19     0.444     0.179    -0.161    -0.533    -0.432     0.385
20     0.226     0.002    -0.019    -0.089    -0.001     0.006
21     0.120     0.247    -0.290    -0.245    -0.506     0.528
22     0.001     0.001    -0.006    -0.003    -0.004     0.022
23     0.454     0.063    -0.260    -0.388    -0.046     0.167
24     0.023     0.204    -0.234    -0.073    -0.472     0.475
25     0.175     0.190    -0.262    -0.302    -0.440     0.512
26     0.453     0.060    -0.252    -0.382    -0.043     0.159
27     0.169     0.297    -0.334    -0.053    -0.334     0.368
28     0.025     0.060    -0.107    -0.004    -0.025     0.070
29     0.301     0.205    -0.428    -0.447    -0.267     0.575
30     0.209     0.321    -0.354    -0.073    -0.409     0.422
31     0.246     0.361    -0.380    -0.092    -0.509     0.493
32     0.207     0.319    -0.328    -0.312    -0.372     0.329
33     0.147     0.278    -0.317    -0.043    -0.289     0.334
34     0.488     0.248    -0.251    -0.449    -0.528     0.495
35     0.186     0.309    -0.344    -0.061    -0.367     0.393
36     0.466     0.313    -0.339    -0.322    -0.559     0.543
37     0.450     0.052    -0.225    -0.429    -0.153     0.512
38     0.376     0.307    -0.314    -0.475    -0.348     0.268
39     0.064     0.318    -0.326    -0.155    -0.570     0.542
40     0.445     0.046    -0.205    -0.344    -0.029     0.117
41     0.454     0.151    -0.139    -0.391    -0.125     0.062
42     0.403     0.139    -0.412    -0.473    -0.145     0.399
43     0.319     0.195    -0.434    -0.457    -0.246     0.554
44     0.093     0.207    -0.256    -0.022    -0.168     0.235
45     0.414     0.026    -0.134    -0.472    -0.088     0.362
46     0.032     0.240    -0.263    -0.093    -0.515     0.506
47     0.188     0.001    -0.012    -0.067     0.000     0.004
48     0.375     0.016    -0.089    -0.220    -0.007     0.038
49     0.182     0.307    -0.342    -0.059    -0.359     0.387
50     0.106     0.098    -0.167    -0.194    -0.281     0.384
> 
> # conditional marginal effects with covariance matrix at sample mean
> # (assuming that all other dependent variables are at there modal values)
> # (with Jacobian)
> margEffCondObsCov <- margEff( estResultBFGS, cond = TRUE,
+    atMean = TRUE, othDepVar = c( colMedians( yMat * 1 ) ), 
+    algorithm = GenzBretz(), calcVCov = TRUE, returnJacobian = TRUE )
> round( margEffCondObsCov, 3 )
  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1      0.29     0.356    -0.371    -0.293    -0.571     0.533
> round( attr( margEffCondObsCov, "vcov" ), 2 )
, , d_y1_d_x1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1      0.03     -0.02     -0.02     -0.01      0.01      0.02

, , d_y2_d_x1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1     -0.02      0.05      0.03      0.01     -0.02     -0.03

, , d_y3_d_x1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1     -0.02      0.03      0.12      0.03     -0.02     -0.08

, , d_y1_d_x2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1     -0.01      0.01      0.03      0.03     -0.01     -0.03

, , d_y2_d_x2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1      0.01     -0.02     -0.02     -0.01      0.06     -0.01

, , d_y3_d_x2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1      0.02     -0.03     -0.08     -0.03     -0.01      0.11

> round( drop( attr( margEffCondObsCov, "vcov" ) ), 2 )
          d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
d_y1_d_x1      0.03     -0.02     -0.02     -0.01      0.01      0.02
d_y2_d_x1     -0.02      0.05      0.03      0.01     -0.02     -0.03
d_y3_d_x1     -0.02      0.03      0.12      0.03     -0.02     -0.08
d_y1_d_x2     -0.01      0.01      0.03      0.03     -0.01     -0.03
d_y2_d_x2      0.01     -0.02     -0.02     -0.01      0.06     -0.01
d_y3_d_x2      0.02     -0.03     -0.08     -0.03     -0.01      0.11
> round( attr( margEffCondObsCov, "jacobian" ), 2 )
, , b_1_0

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1     -0.28      0.04      0.02      0.31     -0.04     -0.01

, , b_1_1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1      0.11     -0.02     -0.04      0.15     -0.02     -0.01

, , b_1_2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1     -0.04      0.01         0       0.3     -0.05     -0.06

, , b_2_0

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1      0.03      0.02         0     -0.02     -0.07     -0.01

, , b_2_1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1     -0.02      0.37      0.02     -0.01     -0.03         0

, , b_2_2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1         0         0         0     -0.05      0.39      0.02

, , b_3_0

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1      0.04         0      0.11     -0.04         0     -0.18

, , b_3_1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1     -0.03      0.01       0.4     -0.02         0     -0.08

, , b_3_2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1      0.01         0      0.02     -0.06      0.01      0.36

, , R_1_2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1      0.06     -0.11         0         0      0.11     -0.03

, , R_1_3

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1     -0.05         0     -0.17     -0.02      0.02      0.19

, , R_2_3

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1         0      0.22     -0.27         0     -0.35      0.47

> round( drop( attr( margEffCondObsCov, "jacobian" ) ), 2 )
          b_1_0 b_1_1 b_1_2 b_2_0 b_2_1 b_2_2 b_3_0 b_3_1 b_3_2 R_1_2 R_1_3
d_y1_d_x1 -0.28  0.11 -0.04  0.03 -0.02  0.00  0.04 -0.03  0.01  0.06 -0.05
d_y2_d_x1  0.04 -0.02  0.01  0.02  0.37  0.00  0.00  0.01  0.00 -0.11  0.00
d_y3_d_x1  0.02 -0.04  0.00  0.00  0.02  0.00  0.11  0.40  0.02  0.00 -0.17
d_y1_d_x2  0.31  0.15  0.30 -0.02 -0.01 -0.05 -0.04 -0.02 -0.06  0.00 -0.02
d_y2_d_x2 -0.04 -0.02 -0.05 -0.07 -0.03  0.39  0.00  0.00  0.01  0.11  0.02
d_y3_d_x2 -0.01 -0.01 -0.06 -0.01  0.00  0.02 -0.18 -0.08  0.36 -0.03  0.19
          R_2_3
d_y1_d_x1  0.00
d_y2_d_x1  0.22
d_y3_d_x1 -0.27
d_y1_d_x2  0.00
d_y2_d_x2 -0.35
d_y3_d_x2  0.47
> print( summary( margEffCondObsCov ), digits = c( 3, 3, 2, 2, 2 ) )
          Estimate Std. error z value Pr(> z)  
d_y1_d_x1    0.290      0.170    1.70    0.09 .
d_y2_d_x1    0.356      0.230    1.54    0.12  
d_y3_d_x1   -0.371      0.350   -1.05    0.29  
d_y1_d_x2   -0.293      0.170   -1.72    0.09 .
d_y2_d_x2   -0.571      0.250   -2.30    0.02 *
d_y3_d_x2    0.533      0.340    1.59    0.11  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> # now with explicitly specifying dummy variables
> margEffCondObsCovD <- margEff( estResultBFGS, cond = TRUE,
+    atMean = TRUE, othDepVar = c( colMedians( yMat * 1 ) ),
+    algorithm = GenzBretz(),
+    calcVCov = TRUE, returnJacobian = TRUE, dummyVars = c( "x1" ) )
> all.equal( margEffCondObsCovD, margEffCondObsCov )
[1] TRUE
> # now with seemingly no dummy variables
> margEffCondObsCovD0 <- margEff( estResultBFGS, cond = TRUE,
+    atMean = TRUE, othDepVar = c( colMedians( yMat * 1 ) ), 
+    algorithm = GenzBretz(),
+    calcVCov = TRUE, returnJacobian = TRUE, dummyVars = NULL )
> print( summary( margEffCondObsCovD0 ), digits = 3 )
          Estimate Std. error z value Pr(> z)  
d_y1_d_x1    0.298      0.188    1.59   0.113  
d_y2_d_x1    0.366      0.256    1.43   0.153  
d_y3_d_x1   -0.386      0.403   -0.96   0.338  
d_y1_d_x2   -0.293      0.170   -1.72   0.086 .
d_y2_d_x2   -0.571      0.249   -2.30   0.022 *
d_y3_d_x2    0.533      0.336    1.59   0.112  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> # now with seemingly only dummy variables
> margEffCondObsCovDA <- margEff( estResultBFGS, cond = TRUE,
+    atMean = TRUE, othDepVar = c( colMedians( yMat * 1 ) ), 
+    algorithm = GenzBretz(),
+    calcVCov = TRUE, returnJacobian = TRUE, dummyVars = c( "x1", "x2" ) )
> print( summary( margEffCondObsCovDA ), digits = c( 3, 3, 2, 2, 2 ) )
          Estimate Std. error z value Pr(> z)    
d_y1_d_x1    0.290      0.170    1.70    0.09 .  
d_y2_d_x1    0.356      0.230    1.54    0.12    
d_y3_d_x1   -0.371      0.350   -1.05    0.29    
d_y1_d_x2   -0.392      0.280   -1.40    0.16    
d_y2_d_x2   -0.442      0.150   -2.97  <2e-16 ***
d_y3_d_x2    0.393      0.160    2.42    0.02 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> # conditional marginal effects
> # (assuming that all other dependent variables are one)
> margEffCondOne <- margEff( estResultBFGS, cond = TRUE, othDepVar = 1,
+    algorithm = GenzBretz() )
> round( margEffCondOne, 3 )
   d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1      0.177     0.343    -0.349    -0.291    -0.431     0.390
2      0.115     0.360    -0.362    -0.229    -0.534     0.498
3      0.112     0.359    -0.361    -0.028    -0.487     0.454
4      0.361     0.069    -0.073    -0.264    -0.212     0.210
5      0.079     0.338    -0.343    -0.016    -0.393     0.391
6      0.366     0.048    -0.050    -0.282    -0.155     0.154
7      0.001     0.024    -0.054     0.000    -0.007     0.028
8      0.252     0.268    -0.281    -0.333    -0.280     0.236
9      0.147     0.358    -0.361    -0.264    -0.484     0.445
10     0.168     0.348    -0.354    -0.283    -0.447     0.407
11     0.206     0.320    -0.329    -0.080    -0.589     0.524
12     0.042     0.270    -0.288    -0.006    -0.243     0.282
13     0.063     0.316    -0.325    -0.011    -0.334     0.349
14     0.008     0.113    -0.153     0.000    -0.060     0.113
15     0.007     0.099    -0.140    -0.026    -0.289     0.335
16     0.188     0.335    -0.342    -0.068    -0.587     0.522
17     0.222     0.304    -0.315    -0.091    -0.585     0.522
18     0.132     0.361    -0.363    -0.249    -0.510     0.472
19     0.316     0.171    -0.183    -0.186    -0.425     0.402
20     0.349     0.009    -0.008    -0.235    -0.004     0.001
21     0.043     0.273    -0.290    -0.116    -0.546     0.528
22     0.000     0.001    -0.006     0.000    -0.005     0.022
23     0.328     0.148    -0.159    -0.338    -0.121     0.088
24     0.023     0.204    -0.234    -0.073    -0.472     0.475
25     0.025     0.211    -0.240    -0.076    -0.481     0.482
26     0.331     0.143    -0.153    -0.337    -0.115     0.083
27     0.070     0.327    -0.334    -0.013    -0.361     0.368
28     0.004     0.068    -0.107     0.000    -0.029     0.070
29     0.160     0.353    -0.357    -0.276    -0.462     0.422
30     0.094     0.351    -0.354    -0.021    -0.440     0.422
31     0.122     0.361    -0.363    -0.032    -0.509     0.468
32     0.207     0.319    -0.328    -0.312    -0.372     0.329
33     0.058     0.307    -0.317    -0.009    -0.313     0.334
34     0.265     0.251    -0.264    -0.129    -0.542     0.493
35     0.080     0.339    -0.344    -0.016    -0.396     0.393
36     0.195     0.330    -0.338    -0.072    -0.589     0.524
37     0.339     0.125    -0.134    -0.220    -0.339     0.327
38     0.219     0.307    -0.317    -0.319    -0.348     0.305
39     0.064     0.318    -0.326    -0.155    -0.570     0.542
40     0.345     0.113    -0.121    -0.330    -0.084     0.057
41     0.326     0.151    -0.162    -0.338    -0.125     0.091
42     0.244     0.278    -0.290    -0.330    -0.296     0.252
43     0.173     0.345    -0.351    -0.288    -0.438     0.397
44     0.030     0.231    -0.256    -0.003    -0.184     0.235
45     0.361     0.071    -0.075    -0.263    -0.216     0.213
46     0.032     0.240    -0.263    -0.093    -0.515     0.506
47     0.337     0.005    -0.005    -0.217    -0.002     0.001
48     0.366     0.046    -0.047    -0.296    -0.027     0.014
49     0.078     0.336    -0.342    -0.015    -0.388     0.387
50     0.008     0.111    -0.151    -0.030    -0.313     0.354
> 
> # conditional marginal effects with covariance matrix at sample mean
> # (assuming that all other dependent variables are one)
> margEffCondOneCov <- margEff( estResultBFGS, cond = TRUE, othDepVar = 1,
+    data = as.data.frame( t( colMeans( xMat ) ) ), calcVCov = TRUE,
+    algorithm = GenzBretz() )
> round( margEffCondOneCov, 3 )
  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1     0.152     0.356     -0.36    -0.144    -0.571     0.525
> round( attr( margEffCondOneCov, "vcov" ), 2 )
, , d_y1_d_x1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1      0.71     -0.04     -0.21     -0.75         0       0.2

, , d_y2_d_x1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1     -0.04      0.05      0.04      0.04     -0.02     -0.04

, , d_y3_d_x1

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1     -0.21      0.04      0.16      0.22     -0.03     -0.11

, , d_y1_d_x2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1     -0.75      0.04      0.22      0.81         0     -0.21

, , d_y2_d_x2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1         0     -0.02     -0.03         0      0.06         0

, , d_y3_d_x2

  d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1       0.2     -0.04     -0.11     -0.21         0      0.13

> round( drop( attr( margEffCondOneCov, "vcov" ) ), 2 )
          d_y1_d_x1 d_y2_d_x1 d_y3_d_x1 d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
d_y1_d_x1      0.71     -0.04     -0.21     -0.75      0.00      0.20
d_y2_d_x1     -0.04      0.05      0.04      0.04     -0.02     -0.04
d_y3_d_x1     -0.21      0.04      0.16      0.22     -0.03     -0.11
d_y1_d_x2     -0.75      0.04      0.22      0.81      0.00     -0.21
d_y2_d_x2      0.00     -0.02     -0.03      0.00      0.06      0.00
d_y3_d_x2      0.20     -0.04     -0.11     -0.21      0.00      0.13
> print( summary( margEffCondOneCov ), digits = c( 3, 3, 2, 2, 2 ) )
          Estimate Std. error z value Pr(> z)  
d_y1_d_x1    0.152      0.840    0.18    0.86  
d_y2_d_x1    0.356      0.230    1.54    0.12  
d_y3_d_x1   -0.360      0.400   -0.90    0.37  
d_y1_d_x2   -0.144      0.900   -0.16    0.87  
d_y2_d_x2   -0.571      0.250   -2.30    0.02 *
d_y3_d_x2    0.525      0.360    1.44    0.15  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> # now with using argument 'atMean'
> margEffCondOneCovA <- margEff( estResultBFGS, cond = TRUE, othDepVar = 1,
+    atMean = TRUE, algorithm = GenzBretz(), calcVCov = TRUE )
> all.equal( margEffCondOneCovA, margEffCondOneCov )
[1] TRUE
> 
> # marginal effects (with factor as explanatory variable, 2 levels)
> # unconditional marginal effects (with Jacobian)
> dat <- datFac
> margEffFacUnc <- margEff( estResultFac, calcVCov = TRUE, returnJacobian = TRUE )
> all.equal( margEffUnc, margEffFacUnc, check.attributes = FALSE )
[1] TRUE
> round( margEffFacUnc, 3 )
   d_y1_d_x1Facred d_y2_d_x1Facred d_y3_d_x1Facred d_y1_d_x2 d_y2_d_x2
1            0.323           0.384          -0.317    -0.442    -0.439
2            0.243           0.399          -0.330    -0.388    -0.579
3            0.239           0.398          -0.330    -0.099    -0.501
4            0.401           0.056          -0.084    -0.452    -0.189
5            0.188           0.369          -0.317    -0.067    -0.396
6            0.370           0.035          -0.061    -0.455    -0.128
7            0.010           0.022          -0.053    -0.001    -0.006
8            0.401           0.291          -0.260    -0.452    -0.246
9            0.287           0.400          -0.328    -0.422    -0.511
10           0.313           0.390          -0.321    -0.437    -0.460
11           0.356           0.355          -0.299    -0.205    -0.629
12           0.122           0.285          -0.271    -0.035    -0.237
13           0.161           0.341          -0.302    -0.053    -0.332
14           0.043           0.110          -0.149    -0.008    -0.055
15           0.037           0.097          -0.137    -0.097    -0.292
16           0.336           0.374          -0.311    -0.183    -0.624
17           0.372           0.336          -0.288    -0.226    -0.626
18           0.266           0.402          -0.330    -0.407    -0.546
19           0.438           0.170          -0.179    -0.370    -0.439
20           0.224           0.004          -0.015    -0.089    -0.001
21           0.124           0.289          -0.273    -0.250    -0.597
22           0.001           0.001          -0.006    -0.003    -0.004
23           0.438           0.143          -0.159    -0.378    -0.079
24           0.083           0.210          -0.223    -0.184    -0.503
25           0.087           0.217          -0.229    -0.190    -0.514
26           0.438           0.137          -0.154    -0.372    -0.074
27           0.173           0.354          -0.309    -0.059    -0.361
28           0.026           0.064          -0.106    -0.004    -0.026
29           0.303           0.394          -0.324    -0.432    -0.480
30           0.212           0.386          -0.325    -0.081    -0.448
31           0.253           0.401          -0.331    -0.109    -0.526
32           0.357           0.354          -0.299    -0.454    -0.360
33           0.152           0.329          -0.296    -0.048    -0.310
34           0.411           0.269          -0.246    -0.287    -0.578
35           0.190           0.370          -0.317    -0.068    -0.399
36           0.344           0.367          -0.307    -0.191    -0.627
37           0.435           0.116          -0.138    -0.413    -0.335
38           0.369           0.340          -0.290    -0.455    -0.330
39           0.163           0.343          -0.303    -0.302    -0.628
40           0.431           0.102          -0.127    -0.337    -0.049
41           0.438           0.146          -0.162    -0.381    -0.082
42           0.394           0.303          -0.267    -0.454    -0.265
43           0.319           0.386          -0.319    -0.440    -0.447
44           0.097           0.239          -0.243    -0.025    -0.176
45           0.403           0.057          -0.086    -0.451    -0.192
46           0.102           0.249          -0.249    -0.216    -0.556
47           0.187           0.002          -0.010    -0.066     0.000
48           0.366           0.033          -0.059    -0.218    -0.010
49           0.186           0.367          -0.315    -0.066    -0.390
50           0.042           0.108          -0.147    -0.106    -0.318
   d_y3_d_x2
1      0.386
2      0.469
3      0.443
4      0.222
5      0.385
6      0.172
7      0.028
8      0.261
9      0.429
10     0.399
11     0.502
12     0.281
13     0.345
14     0.113
15     0.322
16     0.501
17     0.499
18     0.449
19     0.389
20     0.006
21     0.491
22     0.022
23     0.124
24     0.447
25     0.452
26     0.119
27     0.363
28     0.070
29     0.411
30     0.414
31     0.456
32     0.337
33     0.331
34     0.470
35     0.387
36     0.502
37     0.325
38     0.318
39     0.502
40     0.090
41     0.127
42     0.275
43     0.391
44     0.234
45     0.225
46     0.473
47     0.003
48     0.033
49     0.381
50     0.340
> # now at mean values
> margEffFacUncMean <- try( margEff( estResultFac, calcVCov = TRUE, atMean = TRUE ) )
Error in colMeans(data) : 'x' must be numeric
> 
> # conditional marginal effects
> # (assuming that all other dependent variables are as observed)
> margEffFacCondObs <- margEff( estResultFac, cond = TRUE,
+    algorithm = GenzBretz() )
> all.equal( margEffCondObs, margEffFacCondObs, check.attributes = FALSE )
[1] TRUE
> round( margEffFacCondObs, 3 )
   d_y1_d_x1Facred d_y2_d_x1Facred d_y3_d_x1Facred d_y1_d_x2 d_y2_d_x2
1            0.323           0.343          -0.355    -0.460    -0.431
2            0.115           0.360          -0.362    -0.229    -0.534
3            0.238           0.331          -0.361    -0.090    -0.455
4            0.412           0.069          -0.054    -0.472    -0.212
5            0.185           0.308          -0.343    -0.060    -0.365
6            0.379           0.048          -0.034    -0.475    -0.155
7            0.010           0.021          -0.054    -0.001    -0.006
8            0.411           0.132          -0.403    -0.471    -0.134
9            0.147           0.358          -0.361    -0.264    -0.484
10           0.312           0.348          -0.361    -0.454    -0.447
11           0.206           0.320          -0.329    -0.080    -0.589
12           0.118           0.244          -0.288    -0.031    -0.223
13           0.147           0.316          -0.349    -0.039    -0.334
14           0.041           0.100          -0.153    -0.007    -0.053
15           0.036           0.088          -0.140    -0.092    -0.259
16           0.188           0.335          -0.342    -0.068    -0.587
17           0.383           0.292          -0.315    -0.213    -0.560
18           0.398           0.267          -0.405    -0.513    -0.370
19           0.444           0.179          -0.161    -0.533    -0.432
20           0.226           0.002          -0.019    -0.089    -0.001
21           0.120           0.247          -0.290    -0.245    -0.506
22           0.001           0.001          -0.006    -0.003    -0.004
23           0.454           0.063          -0.260    -0.388    -0.046
24           0.023           0.204          -0.234    -0.073    -0.472
25           0.175           0.190          -0.262    -0.302    -0.440
26           0.453           0.060          -0.252    -0.382    -0.043
27           0.169           0.297          -0.334    -0.053    -0.334
28           0.025           0.060          -0.107    -0.004    -0.025
29           0.301           0.205          -0.428    -0.447    -0.267
30           0.209           0.321          -0.354    -0.073    -0.409
31           0.246           0.361          -0.380    -0.092    -0.509
32           0.207           0.319          -0.328    -0.312    -0.372
33           0.147           0.278          -0.317    -0.043    -0.289
34           0.488           0.248          -0.251    -0.449    -0.528
35           0.186           0.309          -0.344    -0.061    -0.367
36           0.466           0.313          -0.339    -0.322    -0.559
37           0.450           0.052          -0.225    -0.429    -0.153
38           0.376           0.307          -0.314    -0.475    -0.348
39           0.064           0.318          -0.326    -0.155    -0.570
40           0.445           0.046          -0.205    -0.344    -0.029
41           0.454           0.151          -0.139    -0.391    -0.125
42           0.403           0.139          -0.412    -0.473    -0.145
43           0.319           0.195          -0.434    -0.457    -0.246
44           0.093           0.207          -0.256    -0.022    -0.168
45           0.414           0.026          -0.134    -0.472    -0.088
46           0.032           0.240          -0.263    -0.093    -0.515
47           0.188           0.001          -0.012    -0.067     0.000
48           0.375           0.016          -0.089    -0.220    -0.007
49           0.182           0.307          -0.342    -0.059    -0.359
50           0.106           0.098          -0.167    -0.194    -0.281
   d_y3_d_x2
1      0.361
2      0.498
3      0.454
4      0.175
5      0.391
6      0.121
7      0.028
8      0.378
9      0.445
10     0.380
11     0.524
12     0.282
13     0.371
14     0.113
15     0.335
16     0.522
17     0.522
18     0.606
19     0.385
20     0.006
21     0.528
22     0.022
23     0.167
24     0.475
25     0.512
26     0.159
27     0.368
28     0.070
29     0.575
30     0.422
31     0.493
32     0.329
33     0.334
34     0.495
35     0.393
36     0.543
37     0.512
38     0.268
39     0.542
40     0.117
41     0.062
42     0.399
43     0.554
44     0.235
45     0.362
46     0.506
47     0.004
48     0.038
49     0.387
50     0.384
> # now at mean values
> margEffFacCondObs <- try( margEff( estResultFac, cond = TRUE,
+    algorithm = GenzBretz(), atMean = TRUE ) )
Error in colMeans(data) : 'x' must be numeric
> 
> 
> # marginal effects (with factor as explanatory variable, 3 levels)
> # unconditional marginal effects (with Jacobian)
> margEffFac13Unc <- margEff( estResultFac13, calcVCov = TRUE, returnJacobian = TRUE )
> round( margEffFac13Unc, 3 )
   d_y1_d_x1Fac3green d_y2_d_x1Fac3green d_y3_d_x1Fac3green d_y1_d_x1Fac3red
1              -0.090             -0.176              0.026            0.330
2              -0.062             -0.206              0.047            0.128
3              -0.003             -0.196              0.043            0.122
4              -0.101             -0.043              0.025            0.512
5              -0.001             -0.172              0.030            0.070
6              -0.101             -0.028              0.017            0.446
7               0.000             -0.007              0.000            0.000
8              -0.102             -0.116              0.010            0.499
9              -0.078             -0.193              0.035            0.260
10             -0.087             -0.181              0.029            0.233
11             -0.098             -0.154              0.019            0.319
12              0.000             -0.122              0.014            0.025
13             -0.001             -0.154              0.023            0.048
14              0.000             -0.040              0.002            0.002
15             -0.002             -0.077              0.049            0.004
16             -0.014             -0.205              0.066            0.278
17             -0.022             -0.192              0.071            0.357
18             -0.071             -0.200              0.040            0.159
19             -0.067             -0.112              0.058            0.559
20             -0.003             -0.001              0.000            0.115
21             -0.020             -0.180              0.071            0.046
22              0.000             -0.001              0.001            0.000
23             -0.073             -0.048              0.002            0.568
24             -0.009             -0.143              0.070            0.010
25             -0.010             -0.147              0.070            0.021
26             -0.071             -0.045              0.002            0.566
27             -0.001             -0.162              0.026            0.057
28              0.000             -0.022              0.001            0.001
29             -0.084             -0.186              0.031            0.291
30             -0.002             -0.185              0.036            0.092
31             -0.066             -0.204              0.044            0.140
32             -0.098             -0.153              0.018            0.402
33             -0.001             -0.147              0.021            0.042
34             -0.038             -0.164              0.071            0.460
35             -0.001             -0.173              0.030            0.071
36             -0.015             -0.203              0.068            0.293
37             -0.085             -0.081              0.045            0.573
38             -0.100             -0.144              0.016            0.428
39             -0.033             -0.200              0.066            0.081
40             -0.058             -0.032              0.001            0.537
41             -0.074             -0.049              0.002            0.570
42             -0.102             -0.123              0.011            0.483
43             -0.089             -0.178              0.027            0.322
44             -0.013             -0.158              0.072            0.015
45             -0.101             -0.043              0.026            0.515
46             -0.014             -0.163              0.072            0.031
47             -0.002              0.000              0.000            0.076
48             -0.023             -0.009              0.000            0.438
49             -0.001             -0.171              0.029            0.068
50             -0.002             -0.085              0.052            0.004
   d_y2_d_x1Fac3red d_y3_d_x1Fac3red d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1             0.160           -0.591    -0.652    -0.421     0.221
2             0.181           -0.659    -0.372    -0.604     0.487
3             0.180           -0.657    -0.016    -0.504     0.380
4             0.040           -0.087    -0.675    -0.186     0.276
5             0.157           -0.613    -0.007    -0.409     0.254
6             0.027           -0.053    -0.699    -0.128     0.188
7             0.006           -0.036     0.000    -0.009     0.001
8             0.104           -0.413    -0.684    -0.241     0.078
9             0.177           -0.636    -0.584    -0.489     0.303
10            0.192           -0.639    -0.549    -0.586     0.311
11            0.185           -0.582    -0.643    -0.531     0.208
12            0.110           -0.478    -0.001    -0.258     0.115
13            0.139           -0.568    -0.004    -0.349     0.192
14            0.036           -0.187     0.000    -0.068     0.014
15            0.073           -0.211    -0.019    -0.309     0.507
16            0.190           -0.612    -0.072    -0.605     0.614
17            0.179           -0.549    -0.120    -0.602     0.674
18            0.188           -0.662    -0.432    -0.607     0.428
19            0.106           -0.274    -0.404    -0.420     0.587
20            0.001           -0.003    -0.015    -0.001     0.000
21            0.168           -0.542    -0.171    -0.584     0.678
22            0.001           -0.002     0.000    -0.006     0.009
23            0.042           -0.180    -0.447    -0.082     0.013
24            0.075           -0.354    -0.048    -0.318     0.655
25            0.138           -0.430    -0.091    -0.514     0.689
26            0.040           -0.171    -0.432    -0.077     0.012
27            0.147           -0.590    -0.005    -0.376     0.219
28            0.019           -0.108     0.000    -0.034     0.005
29            0.170           -0.619    -0.617    -0.460     0.265
30            0.169           -0.640    -0.010    -0.456     0.312
31            0.184           -0.661    -0.397    -0.607     0.462
32            0.139           -0.528    -0.692    -0.348     0.152
33            0.133           -0.550    -0.003    -0.328     0.172
34            0.153           -0.439    -0.215    -0.552     0.691
35            0.157           -0.615    -0.007    -0.412     0.258
36            0.188           -0.602    -0.080    -0.607     0.628
37            0.077           -0.186    -0.531    -0.322     0.470
38            0.130           -0.501    -0.698    -0.320     0.130
39            0.185           -0.614    -0.267    -0.607     0.611
40            0.028           -0.123    -0.342    -0.052     0.006
41            0.044           -0.185    -0.456    -0.085     0.014
42            0.111           -0.435    -0.692    -0.259     0.089
43            0.162           -0.597    -0.645    -0.429     0.229
44            0.088           -0.403    -0.066    -0.363     0.680
45            0.041           -0.089    -0.672    -0.189     0.282
46            0.152           -0.482    -0.122    -0.550     0.694
47            0.000           -0.002    -0.007     0.000     0.000
48            0.025           -0.050    -0.191    -0.046     0.001
49            0.155           -0.609    -0.006    -0.404     0.248
50            0.080           -0.234    -0.023    -0.334     0.538
> # now at mean values
> margEffFac13UncMean <- try( margEff( estResultFac13, calcVCov = TRUE, atMean = TRUE ) )
Error in colMeans(data) : 'x' must be numeric
> 
> # conditional marginal effects
> # (assuming that all other dependent variables are as observed)
> margEffFac13CondObs <- margEff( estResultFac13, cond = TRUE,
+    algorithm = GenzBretz() )
> round( margEffFac13CondObs, 3 )
   d_y1_d_x1Fac3green d_y2_d_x1Fac3green d_y3_d_x1Fac3green d_y1_d_x1Fac3red
1              -0.034             -0.193              0.011            0.406
2               0.001             -0.201              0.043            0.001
3               0.000             -0.193              0.039            0.016
4              -0.091             -0.061              0.020            0.524
5               0.000             -0.170              0.027            0.006
6              -0.092             -0.048              0.012            0.449
7               0.000             -0.007              0.000            0.000
8              -0.043             -0.007              0.015            0.567
9               0.001             -0.198              0.032            0.001
10             -0.032             -0.195              0.013            0.357
11              0.004             -0.186              0.016            0.009
12              0.000             -0.121              0.013            0.002
13              0.000             -0.162              0.023            0.103
14              0.000             -0.040              0.002            0.000
15              0.000             -0.073              0.047            0.000
16              0.000             -0.200              0.059            0.006
17              0.000             -0.192              0.064            0.120
18             -0.009             -0.033              0.070            0.542
19             -0.074             -0.136              0.056            0.685
20             -0.002              0.000              0.000            0.115
21              0.001             -0.158              0.067            0.001
22              0.000             -0.001              0.001            0.000
23             -0.039             -0.005              0.002            0.602
24              0.000             -0.144              0.066            0.000
25              0.005             -0.132              0.062            0.113
26             -0.039             -0.004              0.002            0.598
27              0.000             -0.160              0.024            0.005
28              0.000             -0.022              0.001            0.000
29             -0.031             -0.006              0.054            0.365
30              0.000             -0.182              0.033            0.010
31             -0.024             -0.200              0.027            0.243
32              0.005             -0.186              0.016            0.004
33              0.000             -0.145              0.019            0.003
34             -0.043             -0.170              0.070            0.778
35              0.000             -0.171              0.027            0.007
36             -0.017             -0.200              0.066            0.714
37             -0.073              0.000              0.077            0.615
38             -0.040             -0.183              0.005            0.503
39              0.000             -0.191              0.061            0.000
40             -0.034             -0.004              0.001            0.560
41             -0.040             -0.143              0.000            0.605
42             -0.043             -0.007              0.017            0.553
43             -0.033             -0.006              0.047            0.397
44              0.000             -0.141              0.067            0.001
45             -0.091              0.000              0.044            0.528
46              0.000             -0.161              0.067            0.000
47             -0.001              0.000              0.000            0.076
48             -0.016             -0.002              0.000            0.440
49              0.000             -0.168              0.027            0.006
50              0.005             -0.080              0.049            0.041
   d_y2_d_x1Fac3red d_y3_d_x1Fac3red d_y1_d_x2 d_y2_d_x2 d_y3_d_x2
1             0.047           -0.607    -0.639    -0.322     0.152
2             0.099           -0.657    -0.007    -0.417     0.496
3             0.014           -0.655     0.000    -0.479     0.363
4            -0.106           -0.054    -0.693    -0.177     0.226
5             0.054           -0.608     0.000    -0.396     0.245
6            -0.109           -0.027    -0.705    -0.136     0.133
7             0.006           -0.035     0.000    -0.009     0.001
8            -0.001           -0.612    -0.606    -0.001     0.120
9             0.073           -0.642    -0.007    -0.363     0.320
10            0.064           -0.672    -0.596    -0.375     0.226
11            0.030           -0.595    -0.037    -0.342     0.222
12            0.069           -0.473     0.000    -0.254     0.111
13            0.104           -0.630    -0.003    -0.366     0.209
14            0.032           -0.185     0.000    -0.067     0.014
15            0.066           -0.208     0.000    -0.276     0.496
16            0.047           -0.622     0.000    -0.569     0.588
17           -0.216           -0.565     0.000    -0.521     0.649
18           -0.045           -0.692    -0.782     0.035     0.732
19           -0.495           -0.237    -0.681    -0.314     0.605
20            0.000           -0.004    -0.014     0.000     0.000
21            0.104           -0.532    -0.005    -0.389     0.668
22            0.001           -0.002     0.000    -0.006     0.009
23           -0.001           -0.280    -0.390    -0.002     0.016
24            0.068           -0.350     0.000    -0.303     0.645
25            0.104           -0.470    -0.326    -0.392     0.731
26           -0.001           -0.266    -0.378    -0.002     0.014
27            0.062           -0.584     0.000    -0.366     0.211
28            0.018           -0.108     0.000    -0.034     0.005
29           -0.001           -0.762    -0.625     0.001     0.464
30            0.039           -0.635     0.000    -0.438     0.299
31            0.096           -0.713    -0.520    -0.413     0.411
32            0.022           -0.546    -0.020    -0.282     0.168
33            0.068           -0.544     0.000    -0.321     0.167
34           -0.334           -0.423    -0.413    -0.452     0.730
35            0.054           -0.610     0.000    -0.398     0.248
36           -0.149           -0.621    -0.179    -0.541     0.658
37           -0.005           -0.295    -0.558     0.000     0.755
38            0.013           -0.498    -0.640    -0.268     0.068
39            0.133           -0.606     0.000    -0.490     0.608
40           -0.001           -0.187    -0.301    -0.001     0.007
41           -0.045           -0.147    -0.398    -0.140     0.002
42           -0.001           -0.638    -0.617     0.000     0.139
43           -0.001           -0.762    -0.637     0.001     0.399
44            0.063           -0.399    -0.004    -0.259     0.670
45           -0.003           -0.135    -0.691     0.000     0.463
46            0.126           -0.473     0.000    -0.491     0.681
47            0.000           -0.002    -0.007     0.000     0.000
48           -0.002           -0.072    -0.153    -0.005     0.001
49            0.056           -0.604     0.000    -0.391     0.239
50            0.071           -0.262    -0.131    -0.294     0.576
> # now at mean values
> margEffFac13CondObs <- try( margEff( estResultFac13, cond = TRUE,
+    algorithm = GenzBretz(), atMean = TRUE ) )
Error in colMeans(data) : 'x' must be numeric
> 
> proc.time()
   user  system elapsed 
  94.05    0.40   94.57 
