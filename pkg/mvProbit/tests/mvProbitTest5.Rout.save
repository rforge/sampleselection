
R version 2.13.2 (2011-09-30)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i686-pc-linux-gnu (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( "mvProbit" )
Loading required package: mvtnorm
Loading required package: maxLik
Loading required package: miscTools
Loading required package: bayesm
> 
> ## generate a simulated data set
> set.seed( 123 )
> # number of observations
> nObs <- 10
> 
> # generate explanatory variables
> xMat <- cbind( 
+    const = rep( 1, nObs ),
+    x1 = as.numeric( rnorm( nObs ) > 0 ),
+    x2 = rnorm( nObs ),
+    x3 = rnorm( nObs ) )
> 
> # model coefficients
> beta <- cbind( c( -0.4,  0.8, -1.0, -1.4 ),
+                c( -0.6, -0.5,  0.6, -1.2 ),
+                c(  0.3,  0.9, -1.3,  0.8 ),
+                c( -0.3, -1.0,  0.5, -0.8 ),
+                c(  1.2, -0.6, -0.7,  1.1 ) )
> 
> # covariance matrix of error terms
> sigma <- diag( 5 )
> sigma[ upper.tri( sigma ) ] <- 
+    c( 0.5, 0.4, -0.7, 0.8, -0.5, 0.8, 0, 0.6, -0.2, 0.6 )
> sigma <- cov2cor( t( sigma ) %*% sigma )
> 
> # all parameters in a vector
> allCoef <- c( c( beta ), sigma[ lower.tri( sigma ) ] )
> 
> # generate dependent variables
> yMatLin <- xMat %*% beta 
> yMat <- ( yMatLin + rmvnorm( nObs, sigma = sigma ) ) > 0
> colnames( yMat ) <- paste( "y", 1:5, sep = "" )
> # (yMatLin > 0 )== yMat
> 
> # unconditional expectations of dependent variables
> yExp <- mvProbitExp( ~ x1 + x2 + x3, coef = c( beta ), 
+    sigma = sigma, data = as.data.frame( xMat ) )
> print( yExp )
           V1          V2          V3         V4          V5
1  0.44862794 0.921588460 0.015953838 0.87825339 0.202855966
2  0.32468091 0.451234969 0.366123556 0.52164668 0.760638490
3  0.92444685 0.644930051 0.443616447 0.39019505 0.209215900
4  0.90486233 0.436865599 0.681893227 0.25413122 0.390023321
5  0.96644197 0.247158880 0.922568426 0.14054161 0.618500758
6  0.83508528 0.977042825 0.006711557 0.82711126 0.006101797
7  0.10190838 0.035409669 0.889339687 0.04259780 0.879616215
8  0.91179551 0.024764000 0.998555465 0.07986101 0.996977611
9  0.68865299 0.882302914 0.063970443 0.83177105 0.293599410
10 0.04623117 0.008464347 0.972424249 0.06184753 0.998193726
> yExpA <- mvProbitExp( ~ x1 + x2 + x3, coef = allCoef,
+    data = as.data.frame( xMat ) )
> all.equal( yExp, yExpA )
[1] TRUE
> yExp2 <- pnorm( yMatLin )
> all.equal( yExp, as.data.frame( yExp2 ) )
[1] TRUE
> 
> 
> # conditional expectations of dependent variables
> # (assuming that all other dependent variables are one)
> yExpCond <- mvProbitExp( ~ x1 + x2 + x3, coef = c( beta ), 
+    sigma = sigma, data = as.data.frame( xMat ), cond = TRUE )
> print( yExpCond )
          V1         V2          V3         V4           V5
1  0.8656096 0.95757117 0.004552378 1.00012203 4.082664e-02
2  0.7373896 0.57742229 0.467916595 0.95795790 7.936815e-01
3  0.9961018 0.77166934 0.473556615 0.88368867 2.073254e-01
4  0.9988939 0.55107465 0.896528005 0.48720478 5.566702e-01
5  1.0000240 0.28302432 0.998959430 0.15812885 8.477676e-01
6  0.9936659 0.99527546 0.000120083 1.00009298 9.768767e-05
7  0.8791553 0.06346819 0.999207396 0.08832967 9.922100e-01
8  1.0000440 0.01929447 1.000046380 0.06269898 1.000033e+00
9  0.9464858 0.91464773 0.026635678 1.00014977 1.143547e-01
10 0.8012749 0.02274515 0.999898411 0.12317247 9.999700e-01
> yExpCondA <- mvProbitExp( ~ x1 + x2 + x3, coef = allCoef,
+    data = as.data.frame( xMat ), cond = TRUE )
> all.equal( yExpCond, yExpCondA )
[1] TRUE
> yExpCond2 <- matrix( NA, nrow = nObs, ncol = ncol( yMat ) )
> for( i in 1:nObs ) {
+    for( k in 1:ncol( yMat ) ) {
+       set.seed( 123 )
+       numerator <- pmvnorm( upper = yMatLin[ i, ], sigma = sigma )
+       set.seed( 123 )
+       denominator <- pmvnorm( upper = yMatLin[ i, -k ], sigma = sigma[ -k, -k ] )
+       yExpCond2[ i, k ] <- numerator / denominator
+    }
+ }
> all.equal( yExpCond, as.data.frame( yExpCond2 ) )
[1] TRUE
> 
> 
> # conditional expectations of dependent variables
> # (assuming that all other dependent variables are as observed)
> yExpCondObs <- mvProbitExp( cbind( y1, y2, y3, y4, y5 ) ~ x1 + x2 + x3, 
+    coef = c( beta ), sigma = sigma, data = as.data.frame( cbind( xMat, yMat ) ), 
+    cond = TRUE )
> print( yExpCondObs )
           y1          y2          y3         y4          y5
1  0.52214580 0.972572721 0.028339571 0.95756410 0.213546805
2  0.08400213 0.235313145 0.310679153 0.12802299 0.713628125
3  0.73085786 0.731725391 0.452200078 0.12125512 0.106699092
4  0.99020810 0.314897599 0.592735232 0.31911334 0.382726222
5  0.99942843 0.126181454 0.924677272 0.10690591 0.780360195
6  0.89184146 0.986682333 0.007981102 0.87270446 0.006501712
7  0.08488396 0.018757109 0.872798993 0.03378512 0.863879128
8  0.90255615 0.027615316 0.999149862 0.08805280 0.996737149
9  0.79438617 0.925987961 0.095247132 0.88299533 0.332071756
10 0.21364352 0.001567529 1.000238282 0.05247669 0.999084535
> yExpCondObsA <- mvProbitExp( cbind( y1, y2, y3, y4, y5 ) ~ x1 + x2 + x3, 
+    coef = allCoef, data = as.data.frame( cbind( xMat, yMat ) ), 
+    cond = TRUE )
> all.equal( yExpCond, yExpCondA )
[1] TRUE
> yExpCondObs2 <- matrix( NA, nrow = nObs, ncol = ncol( yMat ) )
> for( i in 1:nObs ){
+    for( k in 1:ncol( yMat ) ) {
+       ySign <- 2 * yMat[ i, ] - 1
+       ySign[ k ] <- 1
+       yLinTmp <- yMatLin[ i, ] * ySign
+       sigmaTmp <- diag( ySign ) %*% sigma %*% diag( ySign )
+       set.seed( 123 )
+       numerator <- pmvnorm( upper = yLinTmp, sigma = sigmaTmp )
+       set.seed( 123 )
+       denominator <- pmvnorm( upper = yLinTmp[ -k ], sigma = sigmaTmp[ -k, -k ] )
+       yExpCondObs2[ i, k ] <- numerator / denominator
+    }
+ }
> colnames( yExpCondObs2 ) <- names( yExpCondObs )
> all.equal( yExpCondObs, as.data.frame( yExpCondObs2 ) )
[1] TRUE
> 
> 
> # calculating log likelihood value(s)
> logLikVal <- mvProbitLogLik( cbind( y1, y2, y3, y4, y5 ) ~ x1 + x2 + x3, 
+    coef = c( beta ), sigma = sigma, data = as.data.frame( cbind( xMat, yMat ) ) )
> print( logLikVal )
 [1] -1.1306223 -2.8835781 -2.4997019 -2.3888511 -3.2388258 -0.3424105
 [7] -0.4303804 -0.2160646 -1.0259354 -3.0308173
> logLikValA <- mvProbitLogLik( cbind( y1, y2, y3, y4, y5 ) ~ x1 + x2 + x3, 
+    coef = allCoef, data = as.data.frame( cbind( xMat, yMat ) ) )
> all.equal( logLikVal, logLikValA )
[1] TRUE
> 
> # calculating log likelihood value(s) with one-sided gradients
> logLikValGrad <- mvProbitLogLik( cbind( y1, y2, y3, y4, y5 ) ~ x1 + x2 + x3,
+    coef = c( beta ), sigma = sigma, data = as.data.frame( cbind( xMat, yMat ) ),
+    oneSidedGrad = TRUE )
> print( logLikValGrad )
 [1] -1.1306223 -2.8835781 -2.4997019 -2.3888511 -3.2388258 -0.3424105
 [7] -0.4303804 -0.2160646 -1.0259354 -3.0308173
attr(,"gradient")
             b_1_0        b_1_1        b_1_2        b_1_3       b_2_0
 [1,]  0.829645431  0.000000000  1.015553772 -0.885915845  0.07479024
 [2,] -0.210843581  0.000000000 -0.075864390  0.045958559 -0.48096658
 [3,]  0.541387385  0.541387385  0.216972694 -0.555466606 -1.40881612
 [4,]  0.033934780  0.033934780  0.003755999 -0.024734827  1.25977164
 [5,]  0.003771511  0.003771511 -0.002096367 -0.002357349  1.78318473
 [6,]  0.229643929  0.229643929  0.410353502 -0.387339692  0.03712902
 [7,] -0.185539085 -0.185539085 -0.092370684 -0.155442221 -0.05339755
 [8,]  0.195184004  0.000000000 -0.383853084  0.029935999 -0.06607573
 [9,]  0.415106227  0.000000000  0.291137259 -0.472448397  0.17791536
[10,] -0.420474439  0.000000000  0.198796509 -0.527197214 -0.00565331
            b_2_1       b_2_2        b_2_3         b_3_0       b_3_1
 [1,]  0.00000000  0.09154934 -0.079862980 -7.296645e-02  0.00000000
 [2,]  0.00000000 -0.17305835  0.104838566 -7.277982e-01  0.00000000
 [3,] -1.40881612 -0.56461316  1.445450536 -9.941635e-01 -0.99416353
 [4,]  1.25977164  0.13943499 -0.918237058  8.198403e-01  0.81984027
 [5,]  1.78318473 -0.99116784 -1.114560964  1.725897e-01  0.17258971
 [6,]  0.03712902  0.06634628 -0.062625481 -2.293428e-02 -0.02293428
 [7,] -0.05339755 -0.02658398 -0.044735771  2.517569e-01  0.25175691
 [8,]  0.00000000  0.12994527 -0.010134232  3.901237e-03  0.00000000
 [9,]  0.00000000  0.12478202 -0.202492446 -2.095376e-01  0.00000000
[10,]  0.00000000  0.00267283 -0.007088207  8.131718e-06  0.00000000
              b_3_2         b_3_3       b_4_0       b_4_1       b_4_2
 [1,] -8.931693e-02  7.791514e-02  0.10575660  0.00000000  0.12945469
 [2,] -2.618718e-01  1.586416e-01 -0.35696897  0.00000000 -0.12844229
 [3,] -3.984322e-01  1.020015e+00 -0.33362178 -0.33362178 -0.13370600
 [4,]  9.074220e-02 -5.975750e-01 -0.61922813 -0.61922813 -0.06853781
 [5,] -9.593259e-02 -1.078755e-01 -0.21135463 -0.21135463  0.11747946
 [6,] -4.098160e-02  3.868296e-02  0.25623135  0.25623135  0.45786291
 [7,]  1.253373e-01  2.109187e-01 -0.08556548 -0.08556548 -0.04259880
 [8,] -7.672273e-03  5.983456e-04 -0.17849777  0.00000000  0.35103595
 [9,] -1.469604e-01  2.384821e-01  0.25098465  0.00000000  0.17602961
[10,] -3.844924e-06  1.019629e-05  2.14880542  0.00000000 -1.01593708
            b_4_3        b_5_0       b_5_1        b_5_2       b_5_3
 [1,] -0.11292964 -0.374754684  0.00000000 -0.458730448 0.400171445
 [2,]  0.07781019 -1.317896627  0.00000000 -0.474197324 0.287268283
 [3,]  0.34229673 -0.235116587 -0.23511659 -0.094227969 0.241230260
 [4,]  0.45134945 -0.702249681 -0.70224968 -0.077726866 0.511863178
 [5,]  0.13210478 -1.471345604 -1.47134560  0.817834013 0.919648313
 [6,] -0.43218456 -0.018413872 -0.01841387 -0.032904022 0.031058449
 [7,] -0.07168564  0.258283049  0.25828305  0.128586384 0.216386217
 [8,] -0.02737674  0.009751872  0.00000000 -0.019178276 0.001495677
 [9,] -0.28565539 -0.561014732  0.00000000 -0.393470933 0.638510891
[10,]  2.69420414  0.003719452  0.00000000 -0.001758529 0.004663502
              R_1_2         R_1_3         R_1_4        R_1_5         R_2_3
 [1,]  0.1253095627 -2.974296e-02  1.686612e-01 -0.317886104 -0.0208711564
 [2,]  0.2373436221  2.127181e-01  1.696971e-01  0.246140189  0.2225286910
 [3,] -0.4565641536 -3.776616e-01 -6.772429e-02 -0.159090089  1.0955888663
 [4,]  0.0932491169  5.409154e-02 -2.715220e-03 -0.032249332  0.8408139847
 [5,]  0.0140944278  3.817987e-03 -7.985301e-05 -0.007061590  0.2433483024
 [6,]  0.0296042997 -2.598987e-03  1.382853e-01 -0.004564782 -0.0038689822
 [7,]  0.0380970110 -1.682981e-02  4.928165e-02 -0.048184360 -0.0366696286
 [8,] -0.0008799584  2.860694e-03 -4.381225e-03  0.001581942 -0.0012885881
 [9,]  0.1742684002 -4.091158e-02  2.153006e-01 -0.249286491 -0.0828865914
[10,]  0.0098217501 -2.046363e-06 -6.627940e-01 -0.001926264 -0.0000053344
              R_2_4         R_2_5         R_3_4         R_3_5        R_4_5
 [1,]  0.0003426339 -5.483524e-03 -1.848011e-03  1.008907e-02 -0.032388214
 [2,]  0.1630178854  8.015298e-01  6.566876e-01  7.021440e-01  0.624207085
 [3,]  0.4824577493  4.457555e-01  7.163385e-01  1.268289e-01  0.151695654
 [4,] -0.7549204981 -7.071321e-01 -1.072649e-01 -7.800970e-01  0.559948980
 [5,] -0.3932874630 -2.331606e+00 -1.072564e-03 -3.269655e-01  0.343980675
 [6,]  0.0037047386  9.094581e-05  7.130642e-04 -1.813092e-04 -0.003323427
 [7,]  0.0034465639 -3.419331e-03 -1.683592e-03  2.825673e-02 -0.018517040
 [8,]  0.0079515947  3.547434e-04 -1.092084e-03  1.220149e-03 -0.002013191
 [9,]  0.0243839280 -4.164471e-02 -2.133552e-03  6.008647e-02 -0.113067605
[10,] -0.0164988196  2.513079e-04  5.699752e-05 -3.418155e-06  0.008852964
> logLikValGradA <- mvProbitLogLik( cbind( y1, y2, y3, y4, y5 ) ~ x1 + x2 + x3,
+    coef = allCoef, data = as.data.frame( cbind( xMat, yMat ) ),
+    oneSidedGrad = TRUE )
> all.equal( logLikValGrad, logLikValGradA )
[1] TRUE
> 
> # calculating log likelihood value(s) with two-sided gradients
> llTmp <- function( coef ) {
+    betaTmp <- coef[ 1:20 ]
+    sigmaTmp <- diag( 5 )
+    sigmaTmp[ lower.tri( sigmaTmp ) ] <- coef[ -(1:20) ]
+    sigmaTmp[ upper.tri( sigmaTmp ) ] <- t( sigmaTmp )[ upper.tri( sigmaTmp ) ]
+    result <- mvProbitLogLik( cbind( y1, y2, y3, y4, y5 ) ~ x1 + x2 + x3,
+       coef = betaTmp, sigma = sigmaTmp, 
+       data = as.data.frame( cbind( xMat, yMat ) ) )
+    return( result )
+ }
> logLikValGrad2 <- numericGradient( llTmp, allCoef )
> print( logLikValGrad2 )
              [,1]         [,2]         [,3]         [,4]        [,5]
 [1,]  0.829645787  0.000000000  1.015554306 -0.885915439  0.07479032
 [2,] -0.210843382  0.000000000 -0.075864365  0.045958568 -0.48096627
 [3,]  0.541387742  0.541387742  0.216972751 -0.555466231 -1.40881560
 [4,]  0.033934831  0.033934831  0.003756000 -0.024734800  1.25977208
 [5,]  0.003771518  0.003771518 -0.002096365 -0.002357347  1.78318521
 [6,]  0.229644108  0.229644108  0.410354074 -0.387339182  0.03712907
 [7,] -0.185538931 -0.185538931 -0.092370646 -0.155442113 -0.05339749
 [8,]  0.195184154  0.000000000 -0.383852505  0.029936002 -0.06607566
 [9,]  0.415106501  0.000000000  0.291137394 -0.472448042  0.17791553
[10,] -0.420474161  0.000000000  0.198796571 -0.527196778 -0.00565330
             [,6]         [,7]         [,8]          [,9]       [,10]
 [1,]  0.00000000  0.091549474 -0.079862881 -7.296638e-02  0.00000000
 [2,]  0.00000000 -0.173058313  0.104838581 -7.277977e-01  0.00000000
 [3,] -1.40881560 -0.564613074  1.445451078 -9.941630e-01 -0.99416298
 [4,]  1.25977208  0.139434996 -0.918236822  8.198408e-01  0.81984076
 [5,]  1.78318521 -0.991167690 -1.114560777  1.725899e-01  0.17258986
 [6,]  0.03712907  0.066346421 -0.062625352 -2.293425e-02 -0.02293425
 [7,] -0.05339749 -0.026583966 -0.044735726  2.517571e-01  0.25175709
 [8,]  0.00000000  0.129945530 -0.010134230  3.901242e-03  0.00000000
 [9,]  0.00000000  0.124782104 -0.202492231 -2.095374e-01  0.00000000
[10,]  0.00000000  0.002672832 -0.007088193  8.132162e-06  0.00000000
              [,11]         [,12]      [,13]      [,14]       [,15]       [,16]
 [1,] -8.931681e-02  7.791523e-02  0.1057567  0.0000000  0.12945486 -0.11292952
 [2,] -2.618717e-01  1.586417e-01 -0.3569686  0.0000000 -0.12844224  0.07781020
 [3,] -3.984321e-01  1.020016e+00 -0.3336214 -0.3336214 -0.13370595  0.34229709
 [4,]  9.074220e-02 -5.975747e-01 -0.6192277 -0.6192277 -0.06853781  0.45134966
 [5,] -9.593255e-02 -1.078754e-01 -0.2113545 -0.2113545  0.11747951  0.13210484
 [6,] -4.098151e-02  3.868304e-02  0.2562315  0.2562315  0.45786351 -0.43218403
 [7,]  1.253374e-01  2.109188e-01 -0.0855654 -0.0855654 -0.04259877 -0.07168558
 [8,] -7.672250e-03  5.983456e-04 -0.1784976  0.0000000  0.35103649 -0.02737674
 [9,] -1.469603e-01  2.384823e-01  0.2509849  0.0000000  0.17602971 -0.28565513
[10,] -3.844480e-06  1.019629e-05  2.1488059  0.0000000 -1.01593697  2.69420490
             [,17]       [,18]        [,19]       [,20]         [,21]
 [1,] -0.374754462  0.00000000 -0.458730115 0.400171698  0.1253096387
 [2,] -1.317896170  0.00000000 -0.474197265 0.287268305  0.2373435311
 [3,] -0.235116392 -0.23511639 -0.094227938 0.241230464 -0.4565639489
 [4,] -0.702249319 -0.70224932 -0.077726861 0.511863370  0.0932493380
 [5,] -1.471345146 -1.47134514  0.817834156 0.919648493  0.0140945029
 [6,] -0.018413848 -0.01841385 -0.032903948 0.031058515  0.0296042829
 [7,]  0.258283228  0.25828323  0.128586428 0.216386342  0.0380969803
 [8,]  0.009751885  0.00000000 -0.019178224 0.001495677 -0.0008799655
 [9,] -0.561014446  0.00000000 -0.393470792 0.638511263  0.1742683349
[10,]  0.003719458  0.00000000 -0.001758528 0.004663511  0.0098217581
              [,22]         [,23]        [,24]         [,25]         [,26]
 [1,] -2.974299e-02  0.1686612452 -0.317886056 -0.0208711775  0.0003426259
 [2,]  2.127180e-01  0.1696969316  0.246140337  0.2225285902  0.1630177779
 [3,] -3.776616e-01 -0.0677244549 -0.159090152  1.0955898788  0.4824580824
 [4,]  5.409158e-02 -0.0027152378 -0.032249331  0.8408145913 -0.7549200984
 [5,]  3.817985e-03 -0.0000798539 -0.007061574  0.2433485378 -0.3932870731
 [6,] -2.598991e-03  0.1382851830 -0.004564789 -0.0038689896  0.0037047264
 [7,] -1.682984e-02  0.0492816124 -0.048184397 -0.0366696570  0.0034465556
 [8,]  2.860690e-03 -0.0043812432  0.001581939 -0.0012885915  0.0079515814
 [9,] -4.091164e-02  0.2153004817 -0.249286519 -0.0828866578  0.0243838705
[10,] -2.046363e-06 -0.6627932096 -0.001926267 -0.0000053344 -0.0164987584
              [,27]         [,28]         [,29]        [,30]
 [1,] -0.0054835436 -1.847995e-03  1.008905e-02 -0.032388242
 [2,]  0.8015301858  6.566873e-01  7.021445e-01  0.624207469
 [3,]  0.4457558145  7.163384e-01  1.268288e-01  0.151695541
 [4,] -0.7071316235 -1.072652e-01 -7.800969e-01  0.559949039
 [5,] -2.3316036613 -1.072568e-03 -3.269652e-01  0.343980942
 [6,]  0.0000909457  7.130633e-04 -1.813082e-04 -0.003323434
 [7,] -0.0034193386 -1.683588e-03  2.825669e-02 -0.018517049
 [8,]  0.0003547430 -1.092084e-03  1.220151e-03 -0.002013193
 [9,] -0.0416447714 -2.133556e-03  6.008642e-02 -0.113067650
[10,]  0.0002513065  5.699841e-05 -3.418599e-06  0.008852989
> attr( logLikValGrad, "gradient" ) / logLikValGrad2 - 1
              b_1_0         b_1_1         b_1_2         b_1_3         b_2_0
 [1,] -4.300940e-07           NaN -5.260569e-07  4.584180e-07 -1.154900e-06
 [2,]  9.414945e-07           NaN  3.336624e-07 -2.029191e-07  6.583323e-07
 [3,] -6.586844e-07 -6.586844e-07 -2.640309e-07  6.747688e-07  3.653419e-07
 [4,] -1.491865e-06 -1.491865e-06 -2.364693e-07  1.077241e-06 -3.532206e-07
 [5,] -1.766222e-06 -1.766222e-06  8.473510e-07  9.419258e-07 -2.692151e-07
 [6,] -7.812612e-07 -7.812612e-07 -1.395104e-06  1.315910e-06 -1.230456e-06
 [7,]  8.269576e-07  8.269576e-07  4.104563e-07  6.938800e-07  1.194481e-06
 [8,] -7.683174e-07           NaN  1.509862e-06 -1.168226e-07  1.011078e-06
 [9,] -6.611487e-07           NaN -4.629466e-07  7.529197e-07 -9.322813e-07
[10,]  6.601018e-07           NaN -3.127443e-07  8.263547e-07  1.728187e-06
              b_2_1         b_2_2         b_2_3         b_3_0         b_3_1
 [1,]           NaN -1.411586e-06  1.234463e-06  1.065088e-06           NaN
 [2,]           NaN  2.360835e-07 -1.397858e-07  6.754717e-07           NaN
 [3,]  3.653419e-07  1.455094e-07 -3.751306e-07  5.530104e-07  5.530104e-07
 [4,] -3.532206e-07 -3.503411e-08  2.577761e-07 -6.034286e-07 -6.028869e-07
 [5,] -2.692151e-07  1.496475e-07  1.677446e-07 -8.980083e-07 -8.980083e-07
 [6,] -1.230456e-06 -2.180405e-06  2.059109e-06  1.285258e-06  1.285258e-06
 [7,]  1.194481e-06  5.867685e-07  1.003863e-06 -7.322635e-07 -7.316020e-07
 [8,]           NaN -1.997103e-06  1.287233e-07 -1.522513e-06           NaN
 [9,]           NaN -6.530614e-07  1.060372e-06  8.509306e-07           NaN
[10,]           NaN -6.645973e-07  2.067515e-06 -5.460900e-05           NaN
              b_3_2         b_3_3         b_4_0         b_4_1         b_4_2
 [1,]  1.300196e-06 -1.137079e-06 -1.026694e-06           NaN -1.258977e-06
 [2,]  2.425033e-07 -1.427655e-07  9.753405e-07           NaN  3.526651e-07
 [3,]  2.206892e-07 -5.672935e-07  1.001000e-06  1.002331e-06  3.985664e-07
 [4,] -6.362155e-08  4.399463e-07  6.411466e-07  6.404294e-07  5.831530e-08
 [5,]  4.953225e-07  5.557525e-07  7.480124e-07  7.480124e-07 -4.120355e-07
 [6,]  2.305430e-06 -2.165453e-06 -7.363746e-07 -7.357247e-07 -1.310114e-06
 [7,] -3.627300e-07 -6.129631e-07  1.034119e-06  1.034119e-06  5.147309e-07
 [8,]  2.948391e-06 -4.638720e-08  7.826088e-07           NaN -1.539681e-06
 [9,]  5.998334e-07 -9.701789e-07 -8.024168e-07           NaN -5.638477e-07
[10,]  1.155135e-04  0.000000e+00 -2.273347e-07           NaN  1.079693e-07
              b_4_3         b_5_0         b_5_1         b_5_2         b_5_3
 [1,]  1.085355e-06  5.930994e-07           NaN  7.260629e-07 -6.325556e-07
 [2,] -2.111715e-07  3.464034e-07           NaN  1.245555e-07 -7.574929e-08
 [3,] -1.027525e-06  8.272969e-07  8.272969e-07  3.251918e-07 -8.468293e-07
 [4,] -4.663752e-07  5.153906e-07  5.153906e-07  6.284805e-08 -3.765355e-07
 [5,] -4.672683e-07  3.117855e-07  3.126910e-07 -1.737621e-07 -1.955705e-07
 [6,]  1.237808e-06  1.284237e-06  1.284237e-06  2.231989e-06 -2.125110e-06
 [7,]  8.727148e-07 -6.937733e-07 -6.937733e-07 -3.419088e-07 -5.815699e-07
 [8,]  1.196329e-07 -1.349087e-06           NaN  2.712136e-06 -2.783580e-07
 [9,]  9.125702e-07  5.101749e-07           NaN  3.589094e-07 -5.814441e-07
[10,] -2.849933e-07 -1.432755e-06           NaN  5.050693e-07 -1.904527e-06
              R_1_2         R_1_3         R_1_4         R_1_5         R_2_3
 [1,] -6.060129e-07 -9.107841e-07 -4.660454e-07  1.508768e-07 -1.010687e-06
 [2,]  3.835718e-07  2.505228e-07  7.877034e-07 -6.044108e-07  4.530126e-07
 [3,]  4.484041e-07  3.645265e-08 -2.386855e-06 -3.991747e-07 -9.241810e-07
 [4,] -2.371668e-06 -6.567961e-07 -6.542178e-06  2.754099e-08 -7.214740e-07
 [5,] -5.324847e-06  5.815754e-07 -1.112254e-05  2.263973e-06 -9.672024e-07
 [6,]  5.700320e-07 -1.452394e-06  4.969643e-07 -1.532252e-06 -1.922593e-06
 [7,]  8.043198e-07 -2.242896e-06  7.963697e-07 -7.695738e-07 -7.765881e-07
 [8,] -7.980041e-06  1.630004e-06 -4.054458e-06  2.000163e-06 -2.649355e-06
 [9,]  3.746011e-07 -1.535959e-06  3.382743e-07 -1.095586e-07 -8.009894e-07
[10,] -8.138671e-07  0.000000e+00  1.244910e-06 -1.383264e-06  0.000000e+00
              R_2_4         R_2_5         R_3_4         R_3_5         R_4_5
 [1,]  2.333042e-05 -3.603868e-06  8.891421e-06  1.804694e-06 -8.569646e-07
 [2,]  6.592507e-07 -4.421333e-07  5.552068e-07 -8.241156e-07 -6.153998e-07
 [3,] -6.903541e-07 -6.973828e-07  5.331512e-08  7.913359e-07  7.435859e-07
 [4,]  5.294339e-07  6.236188e-07 -3.229282e-06  1.098700e-07 -1.054808e-07
 [5,]  9.914140e-07  1.100127e-06 -3.312344e-06  9.914973e-07 -7.759081e-07
 [6,]  3.296452e-06  1.220754e-06  1.323430e-06  5.204891e-06 -1.920839e-06
 [7,]  2.415940e-06 -2.353998e-06  1.945344e-06  1.306413e-06 -4.976415e-07
 [8,]  1.675475e-06  1.173620e-06  4.066439e-07 -1.478598e-06 -1.158095e-06
 [9,]  2.358508e-06 -1.476929e-06 -1.769233e-06  8.573377e-07 -3.986556e-07
[10,]  3.714480e-06  5.301365e-06 -1.558251e-05 -1.299039e-04 -2.859270e-06
> range( attr( logLikValGrad, "gradient" ) / logLikValGrad2 - 1, na.rm = TRUE )
[1] -0.0001299039  0.0001155135
> attr( logLikValGrad, "gradient" ) - logLikValGrad2
              b_1_0         b_1_1         b_1_2         b_1_3         b_2_0
 [1,] -3.568257e-07  0.000000e+00 -5.342393e-07 -4.061196e-07 -8.637535e-08
 [2,] -1.985079e-07  0.000000e+00 -2.531308e-08 -9.325873e-09 -3.166356e-07
 [3,] -3.566036e-07 -3.566036e-07 -5.728751e-08 -3.748113e-07 -5.146994e-07
 [4,] -5.062617e-08 -5.062617e-08 -8.881784e-10 -2.664535e-08 -4.449774e-07
 [5,] -6.661338e-09 -6.661338e-09 -1.776357e-09 -2.220446e-09 -4.800604e-07
 [6,] -1.794120e-07 -1.794120e-07 -5.724865e-07 -5.097034e-07 -4.568568e-08
 [7,] -1.534328e-07 -1.534328e-07 -3.791412e-08 -1.078582e-07 -6.378231e-08
 [8,] -1.499634e-07  0.000000e+00 -5.795642e-07 -3.497203e-09 -6.680767e-08
 [9,] -2.744471e-07  0.000000e+00 -1.347811e-07 -3.557155e-07 -1.658673e-07
[10,] -2.775558e-07  0.000000e+00 -6.217249e-08 -4.356515e-07 -9.769963e-09
              b_2_1         b_2_2         b_2_3         b_3_0         b_3_1
 [1,]  0.000000e+00 -1.292300e-07 -9.858780e-08 -7.771561e-08  0.000000e+00
 [2,]  0.000000e+00 -4.085621e-08 -1.465494e-08 -4.916068e-07  0.000000e+00
 [3,] -5.146994e-07 -8.215650e-08 -5.422329e-07 -5.497824e-07 -5.497824e-07
 [4,] -4.449774e-07 -4.884981e-09 -2.366995e-07 -4.947154e-07 -4.942713e-07
 [5,] -4.800604e-07 -1.483258e-07 -1.869616e-07 -1.549871e-07 -1.549871e-07
 [6,] -4.568568e-08 -1.446621e-07 -1.289524e-07 -2.947642e-08 -2.947642e-08
 [7,] -6.378231e-08 -1.559863e-08 -4.490852e-08 -1.843525e-07 -1.841860e-07
 [8,]  0.000000e+00 -2.595146e-07 -1.304512e-09 -5.939693e-09  0.000000e+00
 [9,]  0.000000e+00 -8.149037e-08 -2.147171e-07 -1.783018e-07  0.000000e+00
[10,]  0.000000e+00 -1.776357e-09 -1.465494e-08 -4.440892e-10  0.000000e+00
              b_3_2         b_3_3         b_4_0         b_4_1         b_4_2
 [1,] -1.161293e-07 -8.859580e-08 -1.085798e-07  0.000000e+00 -1.629807e-07
 [2,] -6.350476e-08 -2.264855e-08 -3.481659e-07  0.000000e+00 -4.529710e-08
 [3,] -8.792966e-08 -5.786482e-07 -3.339551e-07 -3.343992e-07 -5.329071e-08
 [4,] -5.773160e-09 -2.629008e-07 -3.970158e-07 -3.965717e-07 -3.996803e-09
 [5,] -4.751755e-08 -5.995204e-08 -1.580958e-07 -1.580958e-07 -4.840572e-08
 [6,] -9.447998e-08 -8.376633e-08 -1.886824e-07 -1.885159e-07 -5.998535e-07
 [7,] -4.546363e-08 -1.292855e-07 -8.848478e-08 -8.848478e-08 -2.192690e-08
 [8,] -2.262079e-08 -2.775558e-11 -1.396938e-07  0.000000e+00 -5.404843e-07
 [9,] -8.815171e-08 -2.313705e-07 -2.013945e-07  0.000000e+00 -9.925394e-08
[10,] -4.440892e-10  0.000000e+00 -4.884981e-07  0.000000e+00 -1.096900e-07
              b_4_3         b_5_0         b_5_1         b_5_2         b_5_3
 [1,] -1.225686e-07 -2.222666e-07  0.000000e+00 -3.330669e-07 -2.531308e-07
 [2,] -1.643130e-08 -4.565237e-07  0.000000e+00 -5.906386e-08 -2.176037e-08
 [3,] -3.517187e-07 -1.945111e-07 -1.945111e-07 -3.064216e-08 -2.042810e-07
 [4,] -2.104983e-07 -3.619327e-07 -3.619327e-07 -4.884981e-09 -1.927347e-07
 [5,] -6.172840e-08 -4.587442e-07 -4.600764e-07 -1.421085e-07 -1.798561e-07
 [6,] -5.349610e-07 -2.364775e-08 -2.364775e-08 -7.344125e-08 -6.600276e-08
 [7,] -6.256107e-08 -1.791900e-07 -1.791900e-07 -4.396483e-08 -1.258438e-07
 [8,] -3.275158e-09 -1.315614e-08  0.000000e+00 -5.201395e-08 -4.163336e-10
 [9,] -2.606804e-07 -2.862155e-07  0.000000e+00 -1.412204e-07 -3.712586e-07
[10,] -7.678302e-07 -5.329071e-09  0.000000e+00 -8.881784e-10 -8.881784e-09
              R_1_2         R_1_3         R_1_4         R_1_5         R_2_3
 [1,] -7.593925e-08  2.708944e-08 -7.860379e-08 -4.796163e-08  2.109424e-08
 [2,]  9.103829e-08  5.329071e-08  1.336709e-07 -1.487699e-07  1.008083e-07
 [3,] -2.047251e-07 -1.376677e-08  1.616485e-07  6.350476e-08 -1.012523e-06
 [4,] -2.211564e-07 -3.552714e-08  1.776357e-08 -8.881784e-10 -6.066259e-07
 [5,] -7.505108e-08  2.220446e-09  8.881784e-10 -1.598721e-08 -2.353673e-07
 [6,]  1.687539e-08  3.774758e-09  6.872281e-08  6.994405e-09  7.438494e-09
 [7,]  3.064216e-08  3.774758e-08  3.924638e-08  3.708145e-08  2.847722e-08
 [8,]  7.022161e-09  4.662937e-09  1.776357e-08  3.164136e-09  3.413936e-09
 [9,]  6.528111e-08  6.283862e-08  7.283063e-08  2.731149e-08  6.639134e-08
[10,] -7.993606e-09  0.000000e+00 -8.251178e-07  2.664535e-09  0.000000e+00
              R_2_4         R_2_5         R_3_4         R_3_5         R_4_5
 [1,]  7.993606e-09  1.976197e-08 -1.643130e-08  1.820766e-08  2.775558e-08
 [2,]  1.074696e-07 -3.543832e-07  3.645972e-07 -5.786482e-07 -3.841372e-07
 [3,] -3.330669e-07 -3.108624e-07  3.819167e-08  1.003642e-07  1.127987e-07
 [4,] -3.996803e-07 -4.409806e-07  3.463896e-07 -8.570922e-08 -5.906386e-08
 [5,] -3.899103e-07 -2.565059e-06  3.552714e-09 -3.241851e-07 -2.668976e-07
 [6,]  1.221245e-08  1.110223e-10  9.436896e-10 -9.436896e-10  6.383782e-09
 [7,]  8.326673e-09  8.049117e-09 -3.275158e-09  3.691492e-08  9.214851e-09
 [8,]  1.332268e-08  4.163336e-10 -4.440892e-10 -1.804112e-09  2.331468e-09
 [9,]  5.750955e-08  6.150636e-08  3.774758e-09  5.151435e-08  4.507505e-08
[10,] -6.128431e-08  1.332268e-09 -8.881784e-10  4.440892e-10 -2.531308e-08
> range( attr( logLikValGrad, "gradient" ) - logLikValGrad2 )
[1] -2.565059e-06  3.645972e-07
> 
> 
> # calculating marginal effects, unconditional
> margEffUnc <- mvProbitMargEff( ~ x1 + x2 + x3, coef = c( beta ), 
+    sigma = sigma, data = as.data.frame( xMat ) )
> print( margEffUnc )
    d_y1_d_x1    d_y2_d_x1   d_y3_d_x1   d_y4_d_x1   d_y5_d_x1   d_y1_d_x2
1  0.30022083 -0.101464519 0.090508176 -0.31221387 -0.12670723 -0.39563009
2  0.31040386 -0.184442138 0.345407165 -0.34949923 -0.21749438 -0.35976963
3  0.18695410 -0.163375245 0.294865734 -0.37440842 -0.20795166 -0.14235062
4  0.20997038 -0.196612386 0.347203750 -0.37835836 -0.23577363 -0.16919883
5  0.11773675 -0.180060628 0.223207950 -0.32841650 -0.19785009 -0.07464373
6  0.26583825 -0.016680228 0.006338897 -0.14686925 -0.02221022 -0.24814991
7  0.08271741 -0.060258824 0.262678215 -0.19276333 -0.08227526 -0.17793370
8  0.07250167 -0.017894540 0.001392156 -0.07179704 -0.01294035 -0.15997331
9  0.21317464 -0.128477305 0.202910999 -0.34725111 -0.16705930 -0.35345887
10 0.14250870 -0.006527405 0.025157157 -0.05629614 -0.00863364 -0.09686617
    d_y2_d_x2    d_y3_d_x2  d_y4_d_x2    d_y5_d_x2  d_y1_d_x3   d_y2_d_x3
1  0.08785548 -0.051907110 0.10104257 -0.197645726 -0.5538821 -0.17571096
2  0.23757488 -0.489141511 0.19917743 -0.217295099 -0.5036775 -0.47514977
3  0.22339075 -0.513436559 0.19186689 -0.201297530 -0.1992909 -0.44678151
4  0.23636169 -0.463736616 0.16026813 -0.268580106 -0.2368784 -0.47272337
5  0.18950852 -0.188545546 0.11158058 -0.266847391 -0.1045012 -0.37901705
6  0.03264279 -0.024408812 0.12789672 -0.012080807 -0.3474099 -0.06528559
7  0.04680676 -0.245497593 0.04534161 -0.140343741 -0.2491072 -0.09361352
8  0.03478922 -0.006129201 0.07423544 -0.006447479 -0.2239626 -0.06957845
9  0.11839276 -0.162800358 0.12567873 -0.240993925 -0.4948424 -0.23678553
10 0.01381998 -0.082469724 0.06099062 -0.004045698 -0.1356126 -0.02763996
     d_y3_d_x3   d_y4_d_x3   d_y5_d_x3
1  0.031942837 -0.16166811 0.310586140
2  0.301010161 -0.31868389 0.341463727
3  0.315960960 -0.30698703 0.316324689
4  0.285376379 -0.25642901 0.422054452
5  0.116028028 -0.17852893 0.419331615
6  0.015020807 -0.20463475 0.018984125
7  0.151075442 -0.07254658 0.220540164
8  0.003771816 -0.11877670 0.010131753
9  0.100184836 -0.20108596 0.378704740
10 0.050750600 -0.09758499 0.006357526
> margEffUncA <- mvProbitMargEff( ~ x1 + x2 + x3, coef = allCoef,
+    data = as.data.frame( xMat ) )
> all.equal( margEffUnc, margEffUncA )
[1] TRUE
> 
> # calculating marginal effects, conditional
> # (assuming that all other dependent variables are one)
> margEffCond <- mvProbitMargEff( ~ x1 + x2 + x3, coef = c( beta ), 
+    sigma = sigma, data = as.data.frame( xMat ), cond = TRUE )
> print( margEffCond )
      d_y1_d_x1    d_y2_d_x1    d_y3_d_x1     d_y4_d_x1     d_y5_d_x1
1  9.925802e-02 -0.041108025 2.910558e-02 -2.673108e-04 -2.010949e-02
2  2.466377e-01 -0.227709649 4.819333e-01 -6.286228e-01 -1.943769e-02
3  4.212441e-02 -0.072501348 3.795937e-01 -1.163079e-01 -5.231133e-02
4  5.926263e-02 -0.126986939 5.580497e-01 -4.958615e-01 -3.999822e-02
5  7.491067e-03 -0.164543180 1.450556e-01 -5.360900e-01 -6.523680e-02
6  2.497408e-02 -0.002649304 1.138405e-04 -8.950992e-06 -2.173222e-04
7  6.188370e-01 -0.270896703 9.722331e-02 -6.420146e-01 -1.921790e-03
8  1.525634e-05 -0.014876729 1.291687e-05 -5.755765e-02 -3.409305e-05
9  4.516851e-02 -0.051820386 1.452736e-01 -1.210811e-02 -4.254871e-02
10 1.967823e-01 -0.021202557 1.603820e-04 -1.186529e-01  7.608178e-05
       d_y1_d_x2   d_y2_d_x2     d_y3_d_x2     d_y4_d_x2     d_y5_d_x2
1  -1.531435e-01 0.077935542 -1.944982e-02  2.592948e-05 -0.1090486631
2  -4.137112e-01 0.359684281 -6.716675e-01  2.251131e-01 -0.4229615793
3  -1.746198e-02 0.193425397 -9.476729e-01  4.743547e-01 -0.4218206773
4  -9.915758e-03 0.304400468 -4.505573e-01  6.900180e-01 -0.4797086108
5   6.220446e-05 0.274378117 -8.324586e-03  2.080557e-01 -0.2374978845
6  -1.075015e-02 0.009675403 -7.673353e-04 -4.701683e-05 -0.0004797448
7  -4.005841e-01 0.153215835 -6.413457e-03  2.053763e-01 -0.0255627163
8  -2.743938e-05 0.029831622 -4.700906e-06  6.862575e-02 -0.0000652447
9  -8.560854e-02 0.120954713 -9.343223e-02  8.112977e-05 -0.2409295695
10 -5.543774e-01 0.066425617 -8.285252e-04  2.539360e-01 -0.0002282126
       d_y1_d_x3   d_y2_d_x3    d_y3_d_x3     d_y4_d_x3     d_y5_d_x3
1  -3.632295e-01 -0.08943891 1.977093e-02  1.591483e-05  1.420249e-01
2  -3.768491e-01 -0.31931165 6.044471e-01 -1.631424e-01  5.241591e-01
3  -1.135030e-02 -0.41175299 7.904933e-01 -4.635800e-01  5.500869e-01
4  -3.314625e-03 -0.58210715 3.636302e-01 -7.025071e-01  7.061239e-01
5  -1.089353e-04 -0.51893323 6.279868e-03 -2.654331e-01  3.940516e-01
6  -3.301153e-02 -0.01901206 6.541076e-04 -6.812551e-05  5.968163e-04
7  -1.334499e-01 -0.13121740 4.717144e-03 -1.176622e-01  3.699710e-02
8   9.812151e-07 -0.05810581 8.723688e-06 -1.066800e-01  1.091345e-04
9  -1.744345e-01 -0.17772451 8.521228e-02  8.664247e-05  3.140598e-01
10 -1.859217e-01 -0.04826082 3.932131e-04 -1.184161e-01 -6.966039e-05
> margEffCondA <- mvProbitMargEff( ~ x1 + x2 + x3, coef = allCoef,
+    data = as.data.frame( xMat ), cond = TRUE )
> all.equal( margEffCond, margEffCondA )
[1] TRUE
> 
> # calculating marginal effects, conditional
> # (assuming that all other dependent variables are as observed)
> margEffCondObs <- mvProbitMargEff( cbind( y1, y2, y3, y4, y5 ) ~ x1 + x2 + x3,
+    coef = c( beta ), sigma = sigma, data = as.data.frame( cbind( xMat, yMat ) ), 
+    cond = TRUE )
> print( margEffCondObs )
    d_y1_d_x1    d_y2_d_x1     d_y3_d_x1   d_y4_d_x1    d_y5_d_x1    d_y1_d_x2
1  0.38665968 -0.086982861  1.363019e-01 -0.36712086 -0.106556150 -0.494710060
2  0.25441122 -0.123346802  4.215393e-01 -0.12791370 -0.070388217 -0.236463141
3  0.53174011 -0.176879617  4.216246e-01 -0.73033353  0.024004318 -0.412603092
4  0.17898502 -0.140762172  4.970210e-01 -0.60399264  0.150538333 -0.036229164
5  0.02351233 -0.103909568  2.577994e-01 -0.38625024 -0.038057072 -0.004816663
6  0.30780492 -0.011892250  7.401735e-03 -0.12137112 -0.021925728 -0.237890323
7  0.07992447 -0.029707944  3.315591e-01 -0.31694874 -0.068375725 -0.176741135
8  0.08155087 -0.020508926  3.633985e-04 -0.07978801 -0.012825935 -0.184988432
9  0.19320556 -0.095048431  3.587516e-01 -0.52664682 -0.095601525 -0.393952135
10 0.52244762 -0.001558889 -8.811116e-05 -0.05065797 -0.004324226 -0.406170426
     d_y2_d_x2     d_y3_d_x2  d_y4_d_x2    d_y5_d_x2   d_y1_d_x3    d_y2_d_x3
1  0.064752685 -0.0794618801 0.09748031 -0.231719997 -0.47661967 -0.050278488
2  0.305151591 -0.8072288592 0.50211307 -0.477711823 -0.14726313 -0.374513309
3  0.222294024 -0.7165728464 0.44307519 -0.295276270 -0.37840014 -0.326479320
4  0.236440301 -0.6882505141 0.47040241 -0.599430291 -0.02708360 -0.415869353
5  0.177253207 -0.2179098189 0.13565753 -0.339571429 -0.00249556 -0.321244284
6  0.030011972 -0.0282737934 0.16990098 -0.013512968 -0.22691510 -0.031253663
7  0.034526629 -0.2797232530 0.07204689 -0.189716053 -0.20417044 -0.041758224
8  0.043465496 -0.0039813266 0.09720844 -0.007732507 -0.22971405 -0.071289981
9  0.141375416 -0.2360392806 0.22050272 -0.336321419 -0.31217807 -0.136455242
10 0.006340279  0.0001769029 0.07806165 -0.002740800 -0.33974070 -0.004736787
       d_y3_d_x3   d_y4_d_x3   d_y5_d_x3
1   0.0766180194 -0.03653098 0.343978346
2   0.6998115009 -0.42115012 0.616908811
3   0.5898997978 -0.34928550 0.356894349
4   0.5314965845 -0.51916055 0.775034274
5   0.1453066487 -0.19712872 0.511189076
6   0.0201361727 -0.11025144 0.020705656
7   0.2078920661 -0.05152273 0.272450182
8   0.0029102992 -0.11236499 0.011243764
9   0.1997825314 -0.12718212 0.473423879
10 -0.0002166247 -0.07032604 0.004095378
> margEffCondObsA <- mvProbitMargEff( cbind( y1, y2, y3, y4, y5 ) ~ x1 + x2 + x3,
+    coef = allCoef, data = as.data.frame( cbind( xMat, yMat ) ), cond = TRUE )
> all.equal( margEffCondObs, margEffCondObsA )
[1] TRUE
> 
> 
