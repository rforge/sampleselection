
R version 2.11.1 (2010-05-31)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( sampleSelection )
Loading required package: maxLik
Loading required package: miscTools
Loading required package: systemfit
Loading required package: Matrix
Loading required package: lattice

Attaching package: 'Matrix'

The following object(s) are masked from 'package:base':

    det

Loading required package: car
Loading required package: lmtest
Loading required package: zoo
> library( plm )
Loading required package: kinship
Loading required package: survival
Loading required package: splines
Loading required package: nlme
[1] "kinship is loaded"
Loading required package: Formula
Loading required package: MASS
Loading required package: sandwich
> 
> nId <- 15
> nTime <- 4
> 
> set.seed( 123 )
> pData <- data.frame(
+    id = rep( paste( "F", 1:nId, sep = "_" ), each = nTime ),
+    time = rep( 1980 + 1:nTime, nId ) )
> pData$ui <- rep( rnorm( nId ), each = nTime )
> pData$x1 <- rnorm( nId * nTime )
> pData$x2 <- runif( nId * nTime )
> pData$ys <- -1 + pData$ui + 2 * pData$x1 + 3 * pData$x2 + rnorm( nId * nTime )
> pData$y <- ifelse( pData$ys > 0, pData$ys, 0 )
> pData <- pdata.frame( pData, c( "id", "time" ) )
> 
> 
> ## Newton-Raphson method
> system.time( randEff <- tobit( y ~ x1 + x2, data = pData ) )
   user  system elapsed 
 13.361   0.128  14.125 
> summary( randEff )
--------------------------------------------
Maximum Likelihood estimation
Newton-Raphson maximisation, 5 iterations
Return code 1: gradient close to zero
Log-Likelihood: -73.72082 
5  free parameters
Estimates:
             Estimate Std. error t value   Pr(> t)    
(Intercept) -0.286086   0.464977 -0.6153  0.538377    
x1           1.668141   0.216210  7.7154 1.206e-14 ***
x2           2.162101   0.695798  3.1074  0.001888 ** 
logSigmaMu  -0.271720   0.245440 -1.1071  0.268263    
logSigmaNu   0.021602   0.131443  0.1643  0.869457    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
--------------------------------------------
> 
> ## BHHH method
> system.time( randEffBhhh <- tobit( y ~ x1 + x2, data = pData,
+    method = "BHHH" ) )
   user  system elapsed 
  8.512   0.040   8.948 
> summary( randEffBhhh )
--------------------------------------------
Maximum Likelihood estimation
BHHH maximisation, 17 iterations
Return code 2: successive function values within tolerance limit
Log-Likelihood: -73.72082 
5  free parameters
Estimates:
             Estimate Std. error t value   Pr(> t)    
(Intercept) -0.285998   0.489733 -0.5840  0.559229    
x1           1.668070   0.301259  5.5370 3.077e-08 ***
x2           2.162093   0.701235  3.0833  0.002047 ** 
logSigmaMu  -0.271676   0.290968 -0.9337  0.350459    
logSigmaNu   0.021567   0.135004  0.1597  0.873078    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
--------------------------------------------
> 
> ## BFGS method (optim)
> system.time( randEffBfgs <- tobit( y ~ x1 + x2, data = pData,
+    method = "BFGS" ) )
   user  system elapsed 
  5.240   0.008   5.486 
> summary( randEffBfgs )
--------------------------------------------
Maximum Likelihood estimation
BFGS maximisation, 33 iterations
Return code 0: successful convergence 
Log-Likelihood: -73.72082 
5  free parameters
Estimates:
             Estimate Std. error t value   Pr(> t)    
(Intercept) -0.286085   0.464933 -0.6153  0.538339    
x1           1.668140   0.216245  7.7141 1.218e-14 ***
x2           2.162101   0.696385  3.1048  0.001904 ** 
logSigmaMu  -0.271720   0.245626 -1.1062  0.268624    
logSigmaNu   0.021602   0.131465  0.1643  0.869484    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
--------------------------------------------
> 
> ## BFGS method (R)
> system.time( randEffBfgsr <- tobit( y ~ x1 + x2, data = pData,
+    method = "BFGSR" ) )
   user  system elapsed 
  4.577   0.000   4.755 
> summary( randEffBfgsr )
--------------------------------------------
Maximum Likelihood estimation
BFGS-YC maximization, 10 iterations
Return code 2: successive function values within tolerance limit
Log-Likelihood: -73.72082 
5  free parameters
Estimates:
             Estimate Std. error t value   Pr(> t)    
(Intercept) -0.286084   0.465693 -0.6143  0.539005    
x1           1.668139   0.216216  7.7152 1.208e-14 ***
x2           2.162099   0.696444  3.1045  0.001906 ** 
logSigmaMu  -0.271721   0.245441 -1.1071  0.268262    
logSigmaNu   0.021602   0.131446  0.1643  0.869461    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
--------------------------------------------
> 
> 
